{
"version":3,
"file":"module$node_modules$$firebase$database$dist$index_cjs.js",
"lineCount":475,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA61GvIC,QAASA,qBAAoB,CAACC,IAAD,CAAOC,KAAP,CAAc,CACvC,MAAOC,YAAA,CAAYF,IAAAG,KAAZ,CAAuBF,KAAAE,KAAvB,CADgC,CAG3CC,QAASA,gBAAe,CAACJ,IAAD,CAAOC,KAAP,CAAc,CAClC,MAAOC,YAAA,CAAYF,IAAZ,CAAkBC,KAAlB,CAD2B,CA4ftCI,QAASA,eAAc,CAACC,IAAD,CAAOC,QAAP,CAAiB,CACnB,IAAK,EAAtB,GAAIA,QAAJ,GAA2BA,QAA3B,CAAsC,IAAtC,CACA,IAAa,IAAb,GAAID,IAAJ,CACI,MAAOE,aAAAC,WAES,SAApB,GAAI,MAAOH,KAAX,EAAgC,WAAhC,EAA+CA,KAA/C,GACIC,QADJ,CACeD,IAAA,CAAK,WAAL,CADf,CAGAI,KAAAC,OAAA,CAAyB,IAAzB,GAAYJ,QAAZ;AACwB,QADxB,GACI,MAAOA,SADX,EAEwB,QAFxB,GAEI,MAAOA,SAFX,EAGyB,QAHzB,GAGK,MAAOA,SAHZ,EAGqC,KAHrC,EAG8CA,SAH9C,CAGyD,+BAHzD,CAG2F,MAAOA,SAHlG,CAIoB,SAApB,GAAI,MAAOD,KAAX,EAAgC,QAAhC,EAA4CA,KAA5C,EAAuE,IAAvE,GAAoDA,IAAA,CAAK,QAAL,CAApD,GACIA,IADJ,CACWA,IAAA,CAAK,QAAL,CADX,CAIA,IAAoB,QAApB,GAAI,MAAOA,KAAX,EAAgC,KAAhC,EAAyCA,KAAzC,CAEI,MAAO,KAAIM,QAAJ,CADQN,IACR,CAAuBD,cAAA,CAAeE,QAAf,CAAvB,CAEX,IAAMD,IAAN,WAAsBO,MAAtB,CA2BK,CACD,IAAIC,OAASN,YAAAC,WAAb,CACIM,UAAYT,IAChBI,KAAAM,QAAA,CAAaD,SAAb,CAAwB,QAAS,CAACE,GAAD,CAAMC,SAAN,CAAiB,CAC1CR,IAAAS,SAAA,CAAcJ,SAAd,CAAyBE,GAAzB,CAAJ,EACgC,GADhC,GACQA,GAAAG,UAAA,CAAc,CAAd;AAAiB,CAAjB,CADR,GAGYC,SACA,CADYhB,cAAA,CAAea,SAAf,CACZ,CAAAG,SAAAC,WAAA,EAAA,EAA0B,CAACD,SAAAE,QAAA,EAJvC,IAKYT,MALZ,CAKqBA,MAAAU,qBAAA,CAA4BP,GAA5B,CAAiCI,SAAjC,CALrB,CAD8C,CAAlD,CAUA,OAAOP,OAAAW,eAAA,CAAsBpB,cAAA,CAAeE,QAAf,CAAtB,CAbN,CA1BD,IAAImB,WAAa,EAAjB,CACIC,uBAAyB,CAAA,CAD7B,CAEIC,eAAiBtB,IACrBI,KAAAM,QAAA,CAAaY,cAAb,CAA6B,QAAS,CAACX,GAAD,CAAMY,KAAN,CAAa,CAC/C,GAAmB,QAAnB,GAAI,MAAOZ,IAAX,EAAuD,GAAvD,GAA+BA,GAAAG,UAAA,CAAc,CAAd,CAAiB,CAAjB,CAA/B,CAEQC,KACJ,CADgBhB,cAAA,CAAeuB,cAAA,CAAeX,GAAf,CAAf,CAChB,CAAKI,KAAAE,QAAA,EAAL,GACII,sBAEA,CADIA,sBACJ,EAD8B,CAACN,KAAAS,YAAA,EAAAP,QAAA,EAC/B,CAAAG,UAAAK,KAAA,CAAgB,IAAIC,SAAJ,CAAcf,GAAd;AAAmBI,KAAnB,CAAhB,CAHJ,CAJ2C,CAAnD,CAWA,IAAyB,CAAzB,EAAIK,UAAAO,OAAJ,CACI,MAAOzB,aAAAC,WAEPyB,KAAAA,CAAWC,aAAA,CAAcT,UAAd,CAA0B3B,oBAA1B,CAAgD,QAAS,CAACqC,SAAD,CAAY,CAAE,MAAOA,UAAAjC,KAAT,CAArE,CAAiGC,eAAjG,CACf,IAAIuB,sBAAJ,CAA4B,CACxB,IAAIU,eAAiBF,aAAA,CAAcT,UAAd,CAA0BY,cAAAC,WAAA,EAA1B,CACrB,OAAO,KAAI/B,YAAJ,CAAiB0B,IAAjB,CAA2B7B,cAAA,CAAeE,QAAf,CAA3B,CAAqD,IAAIiC,QAAJ,CAAa,CAAE,YAAaH,cAAf,CAAb,CAA8C,CAAE,YAAaC,cAAf,CAA9C,CAArD,CAFiB,CAKxB,MAAO,KAAI9B,YAAJ,CAAiB0B,IAAjB,CAA2B7B,cAAA,CAAeE,QAAf,CAA3B,CAAqDiC,QAAAC,QAArD,CA5CqB,CAssWxCC,QAASA,iBAAgB,CAACC,QAAD,CAAW,CAE5BC,QAAAA;AAAYD,QAAAE,SAAAC,gBAAA,CAAkC,UAAlC,CAA8C,QAAS,CAACC,GAAD,CAAMC,MAAN,CAAcC,GAAd,CAAmB,CAAE,MAAOC,YAAAC,YAAA,EAAAC,gBAAA,CAA0CL,GAA1C,CAA+CE,GAA/C,CAAT,CAA1E,CAEhB,CACII,UAAWA,SADf,CAEIC,MAAOA,KAFX,CAGIC,SAAUA,iBAHd,CAIIC,cAAeA,aAJnB,CAKIX,SAAUA,QALd,CAMIY,YAAaA,WANjB,CAOIC,YAAaA,WAPjB,CAFgB,CAUb,IAVa,CAUP,CAAA,CAVO,CAWZhD,KAAAiD,UAAA,EAAJ,GACI/D,MAAAC,QADJ,CACqB+C,QADrB,CAbgC,CA/hepCgB,MAAAC,eAAA,CAAsBhE,OAAtB,CAA+B,YAA/B,CAA6C,CAAEiE,MAAO,CAAA,CAAT,CAA7C,CAIA,KAAIC,SAFJC,QAAyB,CAACC,EAAD,CAAK,CAAE,MAAQA,GAAD,EAAsB,QAAtB,GAAQ,MAAOA,GAAf,EAAmC,SAAnC,EAAgDA,GAAhD,CAAsDA,EAAA,CAAG,SAAH,CAAtD,CAAsEA,EAA/E,CAEf,CAAgBtE,OAAA,CAAQ,kDAAR,CAAhB,CAAf;AACIuE,QAAUvE,OAAA,CAAQ,iCAAR,CADd,CAEIe,KAAOf,OAAA,CAAQ,mDAAR,CAFX,CAGIwE,SAAWxE,OAAA,CAAQ,qDAAR,CAHf,CA+BIyE,kBAAmC,QAAS,EAAG,CAI/CA,QAASA,kBAAiB,CAACC,WAAD,CAAc,CACpC,IAAAA,YAAA,CAAmBA,WAEnB,KAAAC,QAAA,CAAe,WAHqB,CASxCF,iBAAAG,UAAAC,IAAA,CAAkCC,QAAS,CAACxD,GAAD,CAAM6C,KAAN,CAAa,CACvC,IAAb,EAAIA,KAAJ,CACI,IAAAO,YAAAK,WAAA,CAA4B,IAAAC,cAAA,CAAmB1D,GAAnB,CAA5B,CADJ,CAII,IAAAoD,YAAAO,QAAA,CAAyB,IAAAD,cAAA,CAAmB1D,GAAnB,CAAzB,CAAkDP,IAAAmE,UAAA,CAAef,KAAf,CAAlD,CALgD,CAYxDM;iBAAAG,UAAAO,IAAA,CAAkCC,QAAS,CAAC9D,GAAD,CAAM,CACzC+D,GAAAA,CAAY,IAAAX,YAAAY,QAAA,CAAyB,IAAAN,cAAA,CAAmB1D,GAAnB,CAAzB,CAChB,OAAiB,KAAjB,EAAI+D,GAAJ,CACW,IADX,CAIWtE,IAAAwE,SAAA,CAAcF,GAAd,CANkC,CAYjDZ,kBAAAG,UAAAY,OAAA,CAAqCC,QAAS,CAACnE,GAAD,CAAM,CAChD,IAAAoD,YAAAK,WAAA,CAA4B,IAAAC,cAAA,CAAmB1D,GAAnB,CAA5B,CADgD,CAOpDmD,kBAAAG,UAAAI,cAAA,CAA4CU,QAAS,CAAClF,IAAD,CAAO,CACxD,MAAO,KAAAmE,QAAP,CAAsBnE,IADkC,CAG5DiE,kBAAAG,UAAAe,SAAA,CAAuCC,QAAS,EAAG,CAC/C,MAAO,KAAAlB,YAAAiB,SAAA,EADwC,CAGnD,OAAOlB,kBAlDwC,CAAZ,EA/BvC,CA0GIoB,cAA+B,QAAS,EAAG,CAC3CA,QAASA,cAAa,EAAG,CACrB,IAAAC,OAAA;AAAc,EACd,KAAAC,kBAAA,CAAyB,CAAA,CAFJ,CAIzBF,aAAAjB,UAAAC,IAAA,CAA8BmB,QAAS,CAAC1E,GAAD,CAAM6C,KAAN,CAAa,CACnC,IAAb,EAAIA,KAAJ,CACI,OAAO,IAAA2B,OAAA,CAAYxE,GAAZ,CADX,CAII,IAAAwE,OAAA,CAAYxE,GAAZ,CAJJ,CAIuB6C,KALyB,CAQpD0B,cAAAjB,UAAAO,IAAA,CAA8Bc,QAAS,CAAC3E,GAAD,CAAM,CACzC,MAAIP,KAAAS,SAAA,CAAc,IAAAsE,OAAd,CAA2BxE,GAA3B,CAAJ,CACW,IAAAwE,OAAA,CAAYxE,GAAZ,CADX,CAGO,IAJkC,CAM7CuE,cAAAjB,UAAAY,OAAA,CAAiCU,QAAS,CAAC5E,GAAD,CAAM,CAC5C,OAAO,IAAAwE,OAAA,CAAYxE,GAAZ,CADqC,CAGhD,OAAOuE,cAtBoC,CAAZ,EA1GnC,CA4JIM,iBAAmBA,QAAS,CAACC,cAAD,CAAiB,CAC7C,GAAI,CAGA,GAAsB,WAAtB,GAAI,MAAOC,OAAX,EACsC,WADtC,GACI,MAAOA,OAAA,CAAOD,cAAP,CADX,CACmD,CAE/C,IAAIE,WAAaD,MAAA,CAAOD,cAAP,CACjBE,WAAArB,QAAA,CAAmB,mBAAnB;AAAwC,OAAxC,CACAqB,WAAAvB,WAAA,CAAsB,mBAAtB,CACA,OAAO,KAAIN,iBAAJ,CAAsB6B,UAAtB,CALwC,CAJnD,CAYJ,MAAOC,CAAP,CAAU,EAGV,MAAO,KAAIV,aAhBkC,CA5JjD,CA+KIW,kBAAoBL,gBAAA,CAAiB,cAAjB,CA/KxB,CAiLIM,eAAiBN,gBAAA,CAAiB,gBAAjB,CAjLrB,CAmMIO,UAAY,IAAIlC,QAAAmC,OAAJ,CAAoB,oBAApB,CAnMhB,CAwMIC,cAAiB,QAAS,EAAG,CAC7B,IAAIC,GAAK,CACT,OAAO,SAAS,EAAG,CACf,MAAOA,GAAA,EADQ,CAFU,CAAb,EAxMpB,CAmNIC,KAAOA,QAAS,CAACC,GAAD,CAAM,CAClBC,GAAAA,CAAYjG,IAAAkG,kBAAA,CAAuBF,GAAvB,CAChB,KAAID,KAAO,IAAI/F,IAAAmG,KACfJ,KAAAK,OAAA,CAAYH,GAAZ,CACII,IAAAA,CAAYN,IAAAO,OAAA,EAChB,OAAOtG,KAAAuG,OAAAC,gBAAA,CAA4BH,GAA5B,CALe,CAnN1B;AA+NII,iBAAmBA,QAAS,EAAG,CAE/B,IADA,IAAIC,SAAW,EAAf,CACSC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAArF,OAAtB,CAAwCoF,EAAA,EAAxC,CACID,QAAA,CAASC,EAAT,CAAA,CAAeC,SAAA,CAAUD,EAAV,CAEfE,GAAAA,CAAU,EACd,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBJ,QAAAnF,OAApB,CAAqCuF,CAAA,EAArC,CAKQD,EAQJ,CAZI1G,KAAA4G,QAAA,CAAcL,QAAA,CAASI,CAAT,CAAd,CAAJ,EACKJ,QAAA,CAASI,CAAT,CADL,EAE+B,QAF/B,GAEQ,MAAOJ,SAAA,CAASI,CAAT,CAFf,EAGsC,QAHtC,GAGQ,MAAOJ,SAAA,CAASI,CAAT,CAAAvF,OAHf,CAIIsF,EAJJ,CAIeJ,gBAAAO,MAAA,CAAuB,IAAvB,CAA6BN,QAAA,CAASI,CAAT,CAA7B,CAJf,CAMgC,QAA3B,GAAI,MAAOJ,SAAA,CAASI,CAAT,CAAX,CACDD,EADC,CACU7G,IAAAmE,UAAA,CAAeuC,QAAA,CAASI,CAAT,CAAf,CADV,CAIDD,EAJC,CAIUH,QAAA,CAASI,CAAT,CAEf,CAAAD,EAAA,EAAW,GAEf,OAAOA,GArBwB,CA/NnC,CA0PII,OAAS,IA1Pb,CAgQIC,UAAY,CAAA,CAhQhB,CAsQIpE,cAAgBA,QAAS,CAACqE,OAAD,CAAUC,UAAV,CAAsB,CAC/CpH,IAAAC,OAAA,CAAY,CAACmH,UAAb,EAAwC,CAAA,CAAxC,GAA4BD,OAA5B;AAA4D,CAAA,CAA5D,GAAgDA,OAAhD,CAAoE,4CAApE,CACgB,EAAA,CAAhB,GAAIA,OAAJ,EACIxB,SAAA0B,SAEA,CAFqB5D,QAAA6D,SAAAC,QAErB,CADAN,MACA,CADStB,SAAA6B,IAAAC,KAAA,CAAmB9B,SAAnB,CACT,CAAIyB,UAAJ,EACI1B,cAAA5B,IAAA,CAAmB,iBAAnB,CAAsC,CAAA,CAAtC,CAJR,EAM4B,UAAvB,GAAI,MAAOqD,QAAX,CACDF,MADC,CACQE,OADR,EAIDF,MACA,CADS,IACT,CAAAvB,cAAAjB,OAAA,CAAsB,iBAAtB,CALC,CAR0C,CAtQnD,CA0RI+C,IAAMA,QAAS,EAAG,CAElB,IADA,IAAId,SAAW,EAAf,CACSC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAArF,OAAtB,CAAwCoF,EAAA,EAAxC,CACID,QAAA,CAASC,EAAT,CAAA,CAAeC,SAAA,CAAUD,EAAV,CAED,EAAA,CAAlB,GAAIO,SAAJ,GACIA,SACA,CADY,CAAA,CACZ,CAAe,IAAf,GAAID,MAAJ,EAAiE,CAAA,CAAjE,GAAuBvB,cAAAtB,IAAA,CAAmB,iBAAnB,CAAvB,EACItB,aAAA,CAAc,CAAA,CAAd,CAHR,CAKImE;MAAJ,GACQJ,QACJ,CADcJ,gBAAAO,MAAA,CAAuB,IAAvB,CAA6BN,QAA7B,CACd,CAAAO,MAAA,CAAOJ,QAAP,CAFJ,CAVkB,CA1RtB,CA6SIa,WAAaA,QAAS,CAACC,MAAD,CAAS,CAC/B,MAAO,SAAS,EAAG,CAEf,IADA,IAAIjB,SAAW,EAAf,CACSC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAArF,OAAtB,CAAwCoF,EAAA,EAAxC,CACID,QAAA,CAASC,EAAT,CAAA,CAAeC,SAAA,CAAUD,EAAV,CAEnBa,IAAAR,MAAA,CAAU,IAAK,EAAf,CAAkB,CAACW,MAAD,CAAAC,OAAA,CAAgBlB,QAAhB,CAAlB,CALe,CADY,CA7SnC,CAyTImB,eAAQA,QAAS,EAAG,CAEpB,IADA,IAAInB,SAAW,EAAf,CACSC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAArF,OAAtB,CAAwCoF,EAAA,EAAxC,CACID,QAAA,CAASC,EAAT,CAAA,CAAeC,SAAA,CAAUD,EAAV,CAEfE,SAAAA,CAAU,2BAAVA,CAAwCJ,gBAAAO,MAAA,CAAuB,IAAK,EAA5B,CAA+BN,QAA/B,CAC5Cf,UAAAkC,MAAA,CAAgBhB,QAAhB,CANoB,CAzTxB,CAoUIiB,MAAQA,QAAS,EAAG,CAEpB,IADA,IAAIpB,SAAW,EAAf,CACSC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAArF,OAAtB,CAAwCoF,EAAA,EAAxC,CACID,QAAA,CAASC,EAAT,CAAA;AAAeC,SAAA,CAAUD,EAAV,CAEfE,SAAAA,CAAU,wBAAVA,CAAqCJ,gBAAAO,MAAA,CAAuB,IAAK,EAA5B,CAA+BN,QAA/B,CACzCf,UAAAkC,MAAA,CAAgBhB,QAAhB,CACA,MAAUkB,MAAJ,CAAUlB,QAAV,CAAN,CAPoB,CApUxB,CAgVImB,KAAOA,QAAS,EAAG,CAEnB,IADA,IAAItB,SAAW,EAAf,CACSC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAArF,OAAtB,CAAwCoF,EAAA,EAAxC,CACID,QAAA,CAASC,EAAT,CAAA,CAAeC,SAAA,CAAUD,EAAV,CAEfE,SAAAA,CAAU,oBAAVA,CAAiCJ,gBAAAO,MAAA,CAAuB,IAAK,EAA5B,CAA+BN,QAA/B,CACrCf,UAAAqC,KAAA,CAAenB,QAAf,CANmB,CAhVvB,CA2WIoB,oBAAsBA,QAAS,CAACC,IAAD,CAAO,CACtC,MAAwB,QAAxB,GAAQ,MAAOA,KAAf,GACKA,IADL,EACaA,IADb,EAEQA,IAFR,EAEgBC,MAAAC,kBAFhB,EAGQF,IAHR,EAGgBC,MAAAE,kBAHhB,CADsC,CA3W1C,CAoXIC,oBAAsBA,QAAS,CAACC,EAAD,CAAK,CACpC,GAAIvI,IAAAiD,UAAA,EAAJ;AAAgD,UAAhD,GAAwBuF,QAAAC,WAAxB,CACIF,EAAA,EADJ,KAGK,CAGD,IAAIG,SAAW,CAAA,CAAf,CACIC,YAAcA,QAAS,EAAG,CACrBH,QAAAI,KAAL,CAIKF,QAJL,GAKIA,QACA,CADW,CAAA,CACX,CAAAH,EAAA,EANJ,EACIM,UAAA,CAAWF,WAAX,CAAwB,EAAxB,CAFsB,CAU1BH,SAAAM,iBAAJ,EACIN,QAAAM,iBAAA,CAA0B,kBAA1B,CAA8CH,WAA9C,CAA2D,CAAA,CAA3D,CAEA,CAAArD,MAAAwD,iBAAA,CAAwB,MAAxB,CAAgCH,WAAhC,CAA6C,CAAA,CAA7C,CAHJ,EAKSH,QAAAO,YALT,GAOIP,QAAAO,YAAA,CAAqB,oBAArB,CAA2C,QAAS,EAAG,CACvB,UAA5B,GAAIP,QAAAC,WAAJ,EACIE,WAAA,EAF+C,CAAvD,CAKA,CAAArD,MAAAyD,YAAA,CAAmB,QAAnB,CAA6BJ,WAA7B,CAZJ,CAdC,CAJ+B,CApXxC,CAyaInJ,YAAcA,QAAS,CAACwJ,CAAD,CAAIC,CAAJ,CAAO,CAC9B,GAAID,CAAJ,GAAUC,CAAV,CACI,MAAO,EAEN;GAhBMC,YAgBN,GAAIF,CAAJ,EAXMG,YAWN,GAAsBF,CAAtB,CACD,MAAQ,EAEP,IAnBMC,YAmBN,GAAID,CAAJ,EAdME,YAcN,GAAsBH,CAAtB,CACD,MAAO,EAEN,KACGI,OAASC,WAAA,CAAYL,CAAZ,CADZ,CAC4BM,OAASD,WAAA,CAAYJ,CAAZ,CACtC,OAAe,KAAf,GAAIG,MAAJ,CACmB,IAAf,GAAIE,MAAJ,CAC8B,CAAnB,EAAAF,MAAA,CAASE,MAAT,CAAuBN,CAAAzH,OAAvB,CAAkC0H,CAAA1H,OAAlC,CAA6C6H,MAA7C,CAAsDE,MADjE,CAIY,EALhB,CAQoB,IAAf,GAAIA,MAAJ,CACM,CADN,CAIMN,CAAA,CAAIC,CAAJ,CAAS,EAAT,CAAa,CAxBE,CAzalC,CA0cIM,cAAgBA,QAAS,CAACP,CAAD,CAAIC,CAAJ,CAAO,CAChC,MAAID,EAAJ,GAAUC,CAAV,CACW,CADX,CAGSD,CAAJ,CAAQC,CAAR,CACO,EADP,CAIM,CARqB,CA1cpC,CA0dIO,WAAaA,QAAS,CAACjJ,GAAD,CAAMkJ,GAAN,CAAW,CACjC,GAAIA,GAAJ,EAAWlJ,GAAX,GAAkBkJ,IAAlB,CACI,MAAOA,IAAA,CAAIlJ,GAAJ,CAGP,MAAUwH,MAAJ,CAAU,wBAAV,CAAqCxH,GAArC,CAA2C,eAA3C,CAA6DP,IAAAmE,UAAA,CAAesF,GAAf,CAA7D,CAAN,CAL6B,CA1drC,CAseIC,kBAAoBA,QAAS,CAACD,GAAD,CAAM,CACnC,GAAmB,QAAnB,GAAI,MAAOA,IAAX;AAAuC,IAAvC,GAA+BA,GAA/B,CACI,MAAOzJ,KAAAmE,UAAA,CAAesF,GAAf,CACX,KAAIE,KAAO,EACX,KAASC,CAAT,GAAcH,IAAd,CACIE,IAAAtI,KAAA,CAAUuI,CAAV,CAGJD,KAAAE,KAAA,EACItJ,KAAAA,EAAM,GACV,KAAK,IAAIuG,EAAI,CAAb,CAAgBA,CAAhB,CAAoB6C,IAAApI,OAApB,CAAiCuF,CAAA,EAAjC,CACc,CAIV,GAJIA,CAIJ,GAHIvG,CAGJ,EAHW,GAGX,EAFAA,CAEA,EAFOP,IAAAmE,UAAA,CAAewF,IAAA,CAAK7C,CAAL,CAAf,CAEP,CADAvG,CACA,EADO,GACP,CAAAA,CAAA,EAAOmJ,iBAAA,CAAkBD,GAAA,CAAIE,IAAA,CAAK7C,CAAL,CAAJ,CAAlB,CAGX,OADAvG,EACA,CADO,GAjB4B,CAtevC,CAggBIuJ,kBAAoBA,QAAS,CAAC9D,GAAD,CAAM+D,OAAN,CAAe,CAC5C,IAAIC,IAAMhE,GAAAzE,OACV,IAAIyI,GAAJ,EAAWD,OAAX,CACI,MAAO,CAAC/D,GAAD,CAGX,KADA,IAAIiE,SAAW,EAAf,CACSC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,GAApB,CAAyBE,CAAzB,EAA8BH,OAA9B,CACQG,CAAJ,CAAQH,OAAR,CAAkBC,GAAlB,CACIC,QAAA5I,KAAA,CAAc2E,GAAAtF,UAAA,CAAcwJ,CAAd,CAAiBF,GAAjB,CAAd,CADJ,CAIIC,QAAA5I,KAAA,CAAc2E,GAAAtF,UAAA,CAAcwJ,CAAd,CAAiBA,CAAjB,CAAqBH,OAArB,CAAd,CAGR,OAAOE,SAdqC,CAhgBhD,CAshBIE,KAAOA,QAAS,CAACV,GAAD,CAAMlB,EAAN,CAAU,CAC1B,GAAIpI,KAAA4G,QAAA,CAAc0C,GAAd,CAAJ,CACI,IAAK,IAAI3C;AAAI,CAAb,CAAgBA,CAAhB,CAAoB2C,GAAAlI,OAApB,CAAgC,EAAEuF,CAAlC,CACIyB,EAAA,CAAGzB,CAAH,CAAM2C,GAAA,CAAI3C,CAAJ,CAAN,CAFR,KAYI9G,KAAAM,QAAA,CAAamJ,GAAb,CAAkB,QAAS,CAAClJ,GAAD,CAAM6J,GAAN,CAAW,CAAE,MAAO7B,GAAA,CAAG6B,GAAH,CAAQ7J,GAAR,CAAT,CAAtC,CAbsB,CAthB9B,CA6iBI8J,sBAAwBA,QAAS,CAACC,CAAD,CAAI,CACrCtK,IAAAC,OAAA,CAAY,CAACgI,mBAAA,CAAoBqC,CAApB,CAAb,CAAqC,qBAArC,CADqC,KAGC9E,CAGtC,IAAU,CAAV,GAAI8E,CAAJ,CAAa,CAET,IAAAC,EADA/E,CACA+E,CADI,CAEJ,KAAAC,EAAc,CAACC,QAAX,GAAA,CAAA,CAAIH,CAAJ,CAAsB,CAAtB,CAA0B,CAHrB,CAAb,IAMIE,EAEA,CAFQ,CAER,CAFIF,CAEJ,CADAA,CACA,CADII,IAAAC,IAAA,CAASL,CAAT,CACJ,CAAIA,CAAJ,EAASI,IAAAE,IAAA,CAAS,CAAT,CAAY,KAAZ,CAAT,EAEIC,CAEA,CAFKH,IAAAI,IAAA,CAASJ,IAAAK,MAAA,CAAWL,IAAAlD,IAAA,CAAS8C,CAAT,CAAX,CAAyBI,IAAAM,IAAzB,CAAT,CAbFC,IAaE,CAEL,CADAzF,CACA,CADIqF,CACJ,CAfGI,IAeH,CAAAV,CAAA,CAAIG,IAAAQ,MAAA,CAAWZ,CAAX,CAAeI,IAAAE,IAAA,CAAS,CAAT,CAhBHO,EAgBG,CAAoBN,CAApB,CAAf,CAAyCH,IAAAE,IAAA,CAAS,CAAT,CAhB7BO,EAgB6B,CAAzC,CAJR,GAQI3F,CACA,CADI,CACJ,CAAA+E,CAAA,CAAIG,IAAAQ,MAAA,CAAWZ,CAAX,CAAeI,IAAAE,IAAA,CAAS,CAAT,CAAY,KAAZ,CAAf,CATR,CAaJ,KAAAQ,KAAO,EACP,KAAKtE,CAAL,CA1BwBqE,EA0BxB,CAAgBrE,CAAhB,CAAmB,EAAAA,CAAnB,CACIsE,IAAA/J,KAAA,CAAUkJ,CAAA,CAAI,CAAJ,CAAQ,CAAR,CAAY,CAAtB,CACA,CAAAA,CAAA,CAAIG,IAAAK,MAAA,CAAWR,CAAX,CAAe,CAAf,CAER,KAAKzD,CAAL;AA9BYuE,EA8BZ,CAAgBvE,CAAhB,CAAmB,EAAAA,CAAnB,CACIsE,IAAA/J,KAAA,CAAUmE,CAAA,CAAI,CAAJ,CAAQ,CAAR,CAAY,CAAtB,CACA,CAAAA,CAAA,CAAIkF,IAAAK,MAAA,CAAWvF,CAAX,CAAe,CAAf,CAER4F,KAAA/J,KAAA,CAAUmJ,CAAA,CAAI,CAAJ,CAAQ,CAAlB,CACAY,KAAAE,QAAA,EACAtF,EAAA,CAAMoF,IAAAG,KAAA,CAAU,EAAV,CAEFC,EAAAA,CAAgB,EACpB,KAAK1E,CAAL,CAAS,CAAT,CAAgB,EAAhB,CAAYA,CAAZ,CAAoBA,CAApB,EAAyB,CAAzB,CACQ2E,CAGY,CAHFC,QAAA,CAAS1F,CAAA2F,OAAA,CAAW7E,CAAX,CAAc,CAAd,CAAT,CAA2B,CAA3B,CAAAlC,SAAA,CAAuC,EAAvC,CAGE,CAFO,CAEP,GAFZ6G,CAAAlK,OAEY,GADZkK,CACY,CADF,GACE,CADIA,CACJ,EAAAD,CAAA,EAAgBC,CAEpC,OAAOD,EAAAI,YAAA,EA/C8B,CA7iBzC,CA6oBIC,gBAAkB,cA7oBtB,CAmpBIxC,YAAcA,QAAS,CAACrD,GAAD,CAAM,CAC7B,MAAI6F,gBAAAC,KAAA,CAAqB9F,GAArB,CAAJ,GACQ+F,GACA,CADS5D,MAAA,CAAOnC,GAAP,CACT,CAAW,WAAX,EAAA+F,GAAA,EAAmC,UAAnC,EAAyBA,GAFjC,EAGeA,GAHf,CAMO,IAPsB,CAnpBjC,CA6qBIC,eAAiBA,QAAS,CAACzD,EAAD,CAAK,CAC/B,GAAI,CACAA,EAAA,EADA,CAGJ,MAAO/C,CAAP,CAAU,CAENqD,UAAA,CAAW,QAAS,EAAG,CAMnBb,IAAA,CAAK,wCAAL,CADYxC,CAAAyG,MACZ,EADuB,EACvB,CACA,MAAMzG,EAAN,CAPmB,CAAvB;AAQG,CARH,CAFM,CAJqB,CA7qBnC,CAqtBI0G,sBAAwBA,QAAS,CAAC3D,EAAD,CAAK4D,IAAL,CAAW,CACxCC,EAAAA,CAAUvD,UAAA,CAAWN,EAAX,CAAe4D,IAAf,CACS,SAAvB,GAAI,MAAOC,GAAX,EAAmCA,EAAA,MAAnC,EACIA,EAAA,MAAA,EAEJ,OAAOA,GALqC,CArtBhD,CAkvBIC,KAAsB,QAAS,EAAG,CAMlCA,QAASA,KAAI,CAACC,YAAD,CAAeC,QAAf,CAAyB,CAClC,GAAiB,IAAK,EAAtB,GAAIA,QAAJ,CAAyB,CACrB,IAAAC,QAAA,CAAeF,YAAAG,MAAA,CAAmB,GAAnB,CAGf,KAAS3F,QAAT,CADI4F,YACJ,CADa,CACb,CAAgB5F,QAAhB,CAAoB,IAAA0F,QAAAjL,OAApB,CAAyCuF,QAAA,EAAzC,CACiC,CAA7B,CAAI,IAAA0F,QAAA,CAAa1F,QAAb,CAAAvF,OAAJ,GACI,IAAAiL,QAAA,CAAaE,YAAb,CACA,CADuB,IAAAF,QAAA,CAAa1F,QAAb,CACvB,CAAA4F,YAAA,EAFJ,CAKJ,KAAAF,QAAAjL,OAAA,CAAsBmL,YACtB,KAAAC,UAAA,CAAiB,CAXI,CAAzB,IAcI,KAAAH,QACA,CADeF,YACf,CAAA,IAAAK,UAAA,CAAiBJ,QAhBa;AAmBtCrJ,MAAAC,eAAA,CAAsBkJ,IAAtB,CAA4B,OAA5B,CAAqC,CAMjCjI,IAAKA,QAAS,EAAG,CACb,MAAO,KAAIiI,IAAJ,CAAS,EAAT,CADM,CANgB,CASjCO,WAAY,CAAA,CATqB,CAUjCC,aAAc,CAAA,CAVmB,CAArC,CAYAR,KAAAxI,UAAAiJ,SAAA,CAA0BC,QAAS,EAAG,CAClC,MAAI,KAAAJ,UAAJ,EAAsB,IAAAH,QAAAjL,OAAtB,CACW,IADX,CAEO,IAAAiL,QAAA,CAAa,IAAAG,UAAb,CAH2B,CAQtCN,KAAAxI,UAAAmJ,UAAA,CAA2BC,QAAS,EAAG,CACnC,MAAO,KAAAT,QAAAjL,OAAP,CAA6B,IAAAoL,UADM,CAMvCN,KAAAxI,UAAAqJ,SAAA,CAA0BC,QAAS,EAAG,CAClC,IAAIZ,SAAW,IAAAI,UACXJ,SAAJ,CAAe,IAAAC,QAAAjL,OAAf,EACIgL,QAAA,EAEJ,OAAO,KAAIF,IAAJ,CAAS,IAAAG,QAAT,CAAuBD,QAAvB,CAL2B,CAUtCF,KAAAxI,UAAAuJ,QAAA,CAAyBC,QAAS,EAAG,CACjC,MAAI,KAAAV,UAAJ,CAAqB,IAAAH,QAAAjL,OAArB;AACW,IAAAiL,QAAA,CAAa,IAAAA,QAAAjL,OAAb,CAAmC,CAAnC,CADX,CAEO,IAH0B,CAKrC8K,KAAAxI,UAAAe,SAAA,CAA0B0I,QAAS,EAAG,CAElC,IADA,IAAIC,WAAa,EAAjB,CACSzG,EAAI,IAAA6F,UAAb,CAA6B7F,CAA7B,CAAiC,IAAA0F,QAAAjL,OAAjC,CAAsDuF,CAAA,EAAtD,CAC4B,EAAxB,GAAI,IAAA0F,QAAA,CAAa1F,CAAb,CAAJ,GACIyG,UADJ,EACkB,GADlB,CACwB,IAAAf,QAAA,CAAa1F,CAAb,CADxB,CAGJ,OAAOyG,WAAP,EAAqB,GANa,CAQtClB,KAAAxI,UAAA2J,mBAAA,CAAoCC,QAAS,EAAG,CAE5C,IADA,IAAIF,WAAa,EAAjB,CACSzG,EAAI,IAAA6F,UAAb,CAA6B7F,CAA7B,CAAiC,IAAA0F,QAAAjL,OAAjC,CAAsDuF,CAAA,EAAtD,CAC4B,EAAxB,GAAI,IAAA0F,QAAA,CAAa1F,CAAb,CAAJ,GACIyG,UADJ,EACkB,GADlB,CACwBG,kBAAA,CAAmBC,MAAA,CAAO,IAAAnB,QAAA,CAAa1F,CAAb,CAAP,CAAnB,CADxB,CAGJ,OAAOyG,WAAP,EAAqB,GANuB,CAchDlB,KAAAxI,UAAA+J,MAAA,CAAuBC,QAAS,CAACC,KAAD,CAAQ,CACtB,IAAK,EAAnB,GAAIA,KAAJ,GAAwBA,KAAxB,CAAgC,CAAhC,CACA;MAAO,KAAAtB,QAAAoB,MAAA,CAAmB,IAAAjB,UAAnB,CAAoCmB,KAApC,CAF6B,CAOxCzB,KAAAxI,UAAAkK,OAAA,CAAwBC,QAAS,EAAG,CAChC,GAAI,IAAArB,UAAJ,EAAsB,IAAAH,QAAAjL,OAAtB,CACI,MAAO,KAEX,KADA,IAAI0M,OAAS,EAAb,CACSnH,EAAI,IAAA6F,UAAb,CAA6B7F,CAA7B,CAAiC,IAAA0F,QAAAjL,OAAjC,CAAuD,CAAvD,CAA0DuF,CAAA,EAA1D,CACImH,MAAA5M,KAAA,CAAY,IAAAmL,QAAA,CAAa1F,CAAb,CAAZ,CACJ,OAAO,KAAIuF,IAAJ,CAAS4B,MAAT,CAAiB,CAAjB,CANyB,CAYpC5B,KAAAxI,UAAA1C,MAAA,CAAuB+M,QAAS,CAACC,YAAD,CAAe,CAE3C,IADA,IAAIF,OAAS,EAAb,CACSnH,EAAI,IAAA6F,UAAb,CAA6B7F,CAA7B,CAAiC,IAAA0F,QAAAjL,OAAjC,CAAsDuF,CAAA,EAAtD,CACImH,MAAA5M,KAAA,CAAY,IAAAmL,QAAA,CAAa1F,CAAb,CAAZ,CACJ,IAAIqH,YAAJ,WAA4B9B,KAA5B,CACI,IAASvF,CAAT,CAAaqH,YAAAxB,UAAb,CAAqC7F,CAArC,CAAyCqH,YAAA3B,QAAAjL,OAAzC,CAAsEuF,CAAA,EAAtE,CACImH,MAAA5M,KAAA,CAAY8M,YAAA3B,QAAA,CAAqB1F,CAArB,CAAZ,CAFR;IAOI,KADIsH,YACC,CADaD,YAAA1B,MAAA,CAAmB,GAAnB,CACb,CAAI3F,CAAJ,CAAQ,CAAb,CAAgBA,CAAhB,CAAoBsH,YAAA7M,OAApB,CAAwCuF,CAAA,EAAxC,CACgC,CAA5B,CAAIsH,YAAA,CAAYtH,CAAZ,CAAAvF,OAAJ,EACI0M,MAAA5M,KAAA,CAAY+M,YAAA,CAAYtH,CAAZ,CAAZ,CAGZ,OAAO,KAAIuF,IAAJ,CAAS4B,MAAT,CAAiB,CAAjB,CAhBoC,CAqB/C5B,KAAAxI,UAAAhD,QAAA,CAAyBwN,QAAS,EAAG,CACjC,MAAO,KAAA1B,UAAP,EAAyB,IAAAH,QAAAjL,OADQ,CAQrC8K,KAAAiC,aAAA,CAAoBC,QAAS,CAACC,SAAD,CAAYC,SAAZ,CAAuB,CAAA,IAC5CC,MAAQF,SAAA1B,SAAA,EADoC,CACd6B,MAAQF,SAAA3B,SAAA,EAC1C,IAAc,IAAd,GAAI4B,KAAJ,CACI,MAAOD,UAEN,IAAIC,KAAJ,GAAcC,KAAd,CACD,MAAOtC,KAAAiC,aAAA,CAAkBE,SAAAtB,SAAA,EAAlB,CAAwCuB,SAAAvB,SAAA,EAAxC,CAGP,MAAUnF,MAAJ,CAAU,6BAAV;AACF0G,SADE,CAGF,6BAHE,CAIFD,SAJE,CAKF,GALE,CAAN,CAT4C,CAsBpDnC,KAAAuC,aAAA,CAAoBC,QAAS,CAACvP,IAAD,CAAOC,KAAP,CAAc,CACnCuP,IAAAA,CAAWxP,IAAAsO,MAAA,EACXmB,MAAAA,CAAYxP,KAAAqO,MAAA,EAChB,KAAK,IAAI9G,EAAI,CAAb,CAAgBA,CAAhB,CAAoBgI,IAAAvN,OAApB,EAAuCuF,CAAvC,CAA2CiI,KAAAxN,OAA3C,CAA6DuF,CAAA,EAA7D,CAAkE,CAC9D,IAAIkI,IAAMxP,WAAA,CAAYsP,IAAA,CAAShI,CAAT,CAAZ,CAAyBiI,KAAA,CAAUjI,CAAV,CAAzB,CACV,IAAY,CAAZ,GAAIkI,GAAJ,CACI,MAAOA,IAHmD,CAKlE,MAAIF,KAAAvN,OAAJ,GAAwBwN,KAAAxN,OAAxB,CACW,CADX,CAEOuN,IAAAvN,OAAA,CAAkBwN,KAAAxN,OAAlB,CAAsC,EAAtC,CAA0C,CAVV,CAiB3C8K,KAAAxI,UAAAoL,OAAA,CAAwBC,QAAS,CAACC,KAAD,CAAQ,CACrC,GAAI,IAAAnC,UAAA,EAAJ,GAAyBmC,KAAAnC,UAAA,EAAzB,CACI,MAAO,CAAA,CAEX,KAJqC,IAI5BlG,EAAI,IAAA6F,UAJwB,CAIRyC,EAAID,KAAAxC,UAAjC,CAAkD7F,CAAlD,EAAuD,IAAA0F,QAAAjL,OAAvD,CAA4EuF,CAAA,EAAA,CAAKsI,CAAA,EAAjF,CACI,GAAI,IAAA5C,QAAA,CAAa1F,CAAb,CAAJ,GAAwBqI,KAAA3C,QAAA,CAAc4C,CAAd,CAAxB,CACI,MAAO,CAAA,CAGf;MAAO,CAAA,CAT8B,CAgBzC/C,KAAAxI,UAAApD,SAAA,CAA0B4O,QAAS,CAACF,KAAD,CAAQ,CACvC,IAAIrI,EAAI,IAAA6F,UAAR,CACIyC,EAAID,KAAAxC,UACR,IAAI,IAAAK,UAAA,EAAJ,CAAuBmC,KAAAnC,UAAA,EAAvB,CACI,MAAO,CAAA,CAEX,KAAA,CAAOlG,CAAP,CAAW,IAAA0F,QAAAjL,OAAX,CAAA,CAAgC,CAC5B,GAAI,IAAAiL,QAAA,CAAa1F,CAAb,CAAJ,GAAwBqI,KAAA3C,QAAA,CAAc4C,CAAd,CAAxB,CACI,MAAO,CAAA,CAEX,GAAEtI,CACF,GAAEsI,CAL0B,CAOhC,MAAO,CAAA,CAbgC,CAe3C,OAAO/C,KA9M2B,CAAZ,EAlvB1B,CA48BIiD,eAAgC,QAAS,EAAG,CAK5CA,QAASA,eAAc,CAACC,IAAD,CAAOC,YAAP,CAAqB,CACxC,IAAAA,aAAA,CAAoBA,YAEpB,KAAAC,OAAA,CAAcF,IAAA3B,MAAA,EAEd,KAAA8B,YAAA,CAAmBhF,IAAAiF,IAAA,CAAS,CAAT,CAAY,IAAAF,OAAAlO,OAAZ,CACnB,KAASuF,IAAT,CAAa,CAAb,CAAgBA,IAAhB,CAAoB,IAAA2I,OAAAlO,OAApB,CAAwCuF,IAAA,EAAxC,CACI,IAAA4I,YAAA,EAAoB1P,IAAA4P,aAAA,CAAkB,IAAAH,OAAA,CAAY3I,IAAZ,CAAlB,CAExB;IAAA+I,YAAA,EATwC,CAW5C3M,MAAAC,eAAA,CAAsBmM,cAAtB,CAAsC,gBAAtC,CAAwD,CAEpDlL,IAAKA,QAAS,EAAG,CACb,MAAO,GADM,CAFmC,CAKpDwI,WAAY,CAAA,CALwC,CAMpDC,aAAc,CAAA,CANsC,CAAxD,CAQA3J,OAAAC,eAAA,CAAsBmM,cAAtB,CAAsC,uBAAtC,CAA+D,CAE3DlL,IAAKA,QAAS,EAAG,CACb,MAAO,IADM,CAF0C,CAK3DwI,WAAY,CAAA,CAL+C,CAM3DC,aAAc,CAAA,CAN6C,CAA/D,CASAyC,eAAAzL,UAAAxC,KAAA,CAAgCyO,QAAS,CAAC3O,KAAD,CAAQ,CAEpB,CAAzB,CAAI,IAAAsO,OAAAlO,OAAJ,GACI,IAAAmO,YADJ,EACwB,CADxB,CAGA,KAAAD,OAAApO,KAAA,CAAiBF,KAAjB,CACA,KAAAuO,YAAA,EAAoB1P,IAAA4P,aAAA,CAAkBzO,KAAlB,CACpB,KAAA0O,YAAA,EAP6C,CASjDP,eAAAzL,UAAAkM,IAAA,CAA+BC,QAAS,EAAG,CACvC,IAAIC,KAAO,IAAAR,OAAAM,IAAA,EACX,KAAAL,YAAA;AAAoB1P,IAAA4P,aAAA,CAAkBK,IAAlB,CAEK,EAAzB,CAAI,IAAAR,OAAAlO,OAAJ,EACI,EAAA,IAAAmO,YALmC,CAQ3CJ,eAAAzL,UAAAgM,YAAA,CAAuCK,QAAS,EAAG,CAC/C,GAAI,IAAAR,YAAJ,CAAuBJ,cAAAa,sBAAvB,CACI,KAAUpI,MAAJ,CAAU,IAAAyH,aAAV,CACF,6BADE,CAEFF,cAAAa,sBAFE,CAGF,UAHE,CAIF,IAAAT,YAJE,CAKF,IALE,CAAN,CAOJ,GAAI,IAAAD,OAAAlO,OAAJ,CAAyB+N,cAAAc,eAAzB,CACI,KAAUrI,MAAJ,CAAU,IAAAyH,aAAV,CACF,gEADE,CAEFF,cAAAc,eAFE,CAGF,+BAHE;AAIF,IAAAC,cAAA,EAJE,CAAN,CAV2C,CAsBnDf,eAAAzL,UAAAwM,cAAA,CAAyCC,QAAS,EAAG,CACjD,MAA0B,EAA1B,EAAI,IAAAb,OAAAlO,OAAJ,CACW,EADX,CAGO,eAHP,CAGyB,IAAAkO,OAAAlE,KAAA,CAAiB,GAAjB,CAHzB,CAGiD,GAJA,CAMrD,OAAO+D,eA9EqC,CAAZ,EA58BpC,CA4kCIiB,SAA0B,QAAS,EAAG,CAQtCA,QAASA,SAAQ,CAACC,IAAD,CAAOC,MAAP,CAAevO,SAAf,CAA0BwO,aAA1B,CAAyCC,cAAzC,CAAyD,CAC/C,IAAK,EAA5B,GAAIA,cAAJ,GAAiCA,cAAjC,CAAkD,EAAlD,CACA,KAAAF,OAAA,CAAcA,MACd,KAAAvO,UAAA,CAAiBA,SACjB,KAAAwO,cAAA,CAAqBA,aACrB,KAAAC,eAAA,CAAsBA,cACtB,KAAAH,KAAA,CAAYA,IAAA5E,YAAA,EACZ,KAAAgF,OAAA,CAAc,IAAAJ,KAAA7E,OAAA,CAAiB,IAAA6E,KAAAK,QAAA,CAAkB,GAAlB,CAAjB;AAA0C,CAA1C,CACd,KAAAC,aAAA,CAAoBrL,iBAAArB,IAAA,CAAsB,OAAtB,CAAgCoM,IAAhC,CAApB,EAA6D,IAAAA,KARS,CAU1ED,QAAA1M,UAAAkN,gBAAA,CAAqCC,QAAS,EAAG,CAC7C,MAAO,KAAAR,KAAP,GAAqB,IAAAM,aAArB,EAA0C,IAAAG,aAAA,EADG,CAGjDV,SAAA1M,UAAAqN,gBAAA,CAAqCC,QAAS,EAAG,CAC7C,MAA0C,IAA1C,GAAO,IAAAL,aAAAnF,OAAA,CAAyB,CAAzB,CAA4B,CAA5B,CADsC,CAGjD4E,SAAA1M,UAAAuN,WAAA,CAAgCC,QAAS,EAAG,CACxC,MAAuB,qBAAvB,GAAO,IAAAT,OADiC,CAG5CL,SAAA1M,UAAAoN,aAAA,CAAkCK,QAAS,EAAG,CAC1C,MAAwB,gBAAxB,GAAQ,IAAAV,OAAR,EAA4D,qBAA5D,GAA4C,IAAAA,OADF,CAG9CL,SAAA1M,UAAA0N,WAAA,CAAgCC,QAAS,CAACC,OAAD,CAAU,CAC3CA,OAAJ;AAAgB,IAAAX,aAAhB,GACI,IAAAA,aACA,CADoBW,OACpB,CAAI,IAAAP,gBAAA,EAAJ,EACIzL,iBAAA3B,IAAA,CAAsB,OAAtB,CAAgC,IAAA0M,KAAhC,CAA2C,IAAAM,aAA3C,CAHR,CAD+C,CAcnDP,SAAA1M,UAAA6N,cAAA,CAAmCC,QAAS,CAACC,IAAD,CAAOC,MAAP,CAAe,CACvD7R,IAAAC,OAAA,CAA4B,QAA5B,GAAY,MAAO2R,KAAnB,CAAsC,kCAAtC,CACA5R,KAAAC,OAAA,CAA8B,QAA9B,GAAY,MAAO4R,OAAnB,CAAwC,oCAAxC,CAEA,IAxEQC,WAwER,GAAIF,IAAJ,CACIG,IAAA,EACK,IAAAtB,OAAA,CAAc,QAAd,CAAyB,OAD9B,EACyC,IAAAK,aADzC,CAC6D,OAFjE,KAIK,IA3EMkB,cA2EN,GAAIJ,IAAJ,CACDG,IAAA,EACK,IAAAtB,OAAA,CAAc,UAAd,CAA2B,SADhC,EAC6C,IAAAK,aAD7C;AACiE,OAFhE,KAKD,MAAU/I,MAAJ,CAAU,2BAAV,CAAwC6J,IAAxC,CAAN,CAEA,IAAAb,gBAAA,EAAJ,GACIc,MAAA,GADJ,CACmB,IAAA3P,UADnB,CAGA,KAAI+P,MAAQ,EACZjS,KAAAM,QAAA,CAAauR,MAAb,CAAqB,QAAS,CAACtR,GAAD,CAAM6C,KAAN,CAAa,CACvC6O,KAAA5Q,KAAA,CAAWd,GAAX,CAAiB,MAAjB,CAAuB6C,KAAvB,CADuC,CAA3C,CAGA,OAAO2O,KAAP,CAAiBE,KAAA1G,KAAA,CAAW,MAAX,CAtBsC,CAyB3DgF,SAAA1M,UAAAe,SAAA,CAA8BsN,QAAS,EAAG,CACtC,IAAIlM,IAAM,IAAAmM,YAAA,EACN,KAAAxB,eAAJ,GACI3K,GADJ,EACW,MADX,CACiB,IAAA2K,eADjB,CACuC,MADvC,CAGA,OAAO3K,IAL+B,CAQ1CuK,SAAA1M,UAAAsO,YAAA,CAAiCC,QAAS,EAAG,CACzC,OAAQ,IAAA3B,OAAA,CAAc,UAAd,CAA2B,SAAnC,EAAgD,IAAAD,KADP,CAG7C,OAAOD,SAhF+B,CAAZ,EA5kC9B,CA+tCI8B,cAAgBA,QAAS,CAACC,OAAD,CAAU,CAAA,IAAA,kCAAA;AAAA,oCAAA,CAAA,uCAAA,CACVA,iBAAAA,OA2BmB/E,KAAAA,yCAAhBgF,uCAAgBhF,CAA7BqD,oCAA6BrD,CAAxCiD,kCAAwCjD,CAAjC,EAEPkD,KAAAA,qCAAS,CAAA,CAAM+B,QAAAA,CAAS,OAE5B,IAAuB,QAAvB,GAAI,MAAOF,iBAAX,CAAiC,CAE7B,IAAIG,SAAWH,gBAAAzB,QAAA,CAAgB,IAAhB,CACC,EAAhB,EAAI4B,QAAJ,GACID,OACA,CADSF,gBAAA5R,UAAA,CAAkB,CAAlB,CAAqB+R,QAArB,CAAgC,CAAhC,CACT,CAAAH,gBAAA,CAAUA,gBAAA5R,UAAA,CAAkB+R,QAAlB;AAA6B,CAA7B,CAFd,CAKIC,SAAAA,CAAWJ,gBAAAzB,QAAA,CAAgB,GAAhB,CACG,GAAlB,GAAI6B,QAAJ,GACIA,QADJ,CACeJ,gBAAA/Q,OADf,CAGA,KAAIoR,gBAAkBL,gBAAAzB,QAAA,CAAgB,GAAhB,CACG,GAAzB,GAAI8B,eAAJ,GACIA,eADJ,CACsBL,gBAAA/Q,OADtB,CAGAiP,mCAAA,CAAO8B,gBAAA5R,UAAA,CAAkB,CAAlB,CAAqBgK,IAAAI,IAAA,CAAS4H,QAAT,CAAmBC,eAAnB,CAArB,CACP,IAAID,QAAJ,CAAeC,eAAf,CAAA,CA5FAC,wCAAAA,CAAoB,EACpB3E,SAAAA,CA6F4BqE,gBAAA5R,UAAA6M,CAAkBmF,QAAlBnF,CAA4BoF,eAA5BpF,CA7FnBd,MAAA,CAAiB,GAAjB,CACb,KAAK,IAAI3F,EAAI,CAAb,CAAgBA,CAAhB,CAAoBmH,QAAA1M,OAApB,CAAmCuF,CAAA,EAAnC,CACI,GAAuB,CAAvB,CAAImH,QAAA,CAAOnH,CAAP,CAAAvF,OAAJ,CAA0B,CACtB,IAAIsR;AAAQ5E,QAAA,CAAOnH,CAAP,CACZ,IAAI,CACA+L,KAAA,CAAQC,kBAAA,CAAmBD,KAAAE,QAAA,CAAc,KAAd,CAAqB,GAArB,CAAnB,CADR,CAGJ,MAAOvN,CAAP,CAAU,EACVoN,wCAAA,EAAqB,GAArB,CAA2BC,KANL,CAyF1B,CAI8B,QAAA,CAAAP,gBAAA5R,UAAA,CAAkBgK,IAAAI,IAAA,CAASwH,gBAAA/Q,OAAT,CAAyBoR,eAAzB,CAAlB,CA7E9BK,gBAAAA,CAAU,EACgB,IAA9B,GAAIC,QAAAC,OAAA,CAAmB,CAAnB,CAAJ,GACID,QADJ,CACkBA,QAAAvS,UAAA,CAAsB,CAAtB,CADlB,CAGSiG,EAAAA,CAAK,CAAd,KAAiBwM,KAAjB,CAAsBF,QAAAxG,MAAA,CAAkB,MAAlB,CAAtB,CAA8C9F,CAA9C,CAAmDwM,KAAA5R,OAAnD,CAA8DoF,CAAA,EAA9D,CAAoE,CAChE,IAAIyM,QAAUD,KAAA,CAAGxM,CAAH,CACd,IAAuB,CAAvB,GAAIyM,OAAA7R,OAAJ,CAAA,CAGA,IAAI8R,GAAKD,OAAA3G,MAAA,CAAc,MAAd,CACS,EAAlB,GAAI4G,EAAA9R,OAAJ,CACIyR,eAAA,CAAQF,kBAAA,CAAmBO,EAAA,CAAG,CAAH,CAAnB,CAAR,CADJ,CACyCP,kBAAA,CAAmBO,EAAA,CAAG,CAAH,CAAnB,CADzC;AAIIrL,IAAA,CAAK,yBAAL,CAAiCoL,OAAjC,CAA2C,cAA3C,CAA4DH,QAA5D,CAA0E,GAA1E,CARJ,CAFgE,CA2EhER,QAAA,CAAWjC,kCAAAK,QAAA,CAAa,GAAb,CACK,EAAhB,EAAI4B,QAAJ,EACIhC,oCACO,CADa,OACb,GADE+B,OACF,EADmC,KACnC,GADwBA,OACxB,CAAA9G,QAAA,CAAS8E,kCAAA9P,UAAA,CAAe+R,QAAf,CAA0B,CAA1B,CAAT,CAAuC,EAAvC,CAFX,EAKIA,QALJ,CAKeH,gBAAA/Q,OAEX+R,iBAAAA,CAAQ9C,kCAAA/D,MAAA,CAAW,GAAX,CACS,EAArB,GAAI6G,gBAAA/R,OAAJ,EAEIqP,oCACA,CADS0C,gBAAA,CAAM,CAAN,CACT,CAAAf,uCAAA;AAAYe,gBAAA,CAAM,CAAN,CAAA1H,YAAA,EAHhB,EAK0B,CAArB,GAAI0H,gBAAA/R,OAAJ,CACDqP,oCADC,CACQ0C,gBAAA,CAAM,CAAN,CADR,CAGkD,WAHlD,GAGIA,gBAAA,CAAM,CAAN,CAAA1F,MAAA,CAAe,CAAf,CAAkB6E,QAAlB,CAAA7G,YAAA,EAHJ,GAIDgF,oCAJC,CAIQ,WAJR,CAOa,GAAlB,GAAI2B,uCAAJ,EAAwB,IAAxB,EAnFGS,gBAmFH,GACIT,uCADJ,CAnFGS,eAoFa,GADhB,CA5C6B,CA9BR,UAAzB,GAAIpC,oCAAJ,EACI9I,KAAA,CAAM0I,kCAAN,CAEI,kFAFJ,CAF2C+B;uCAO/C,EAAgC,WAAhC,EAP+CA,uCAO/C,EACyB,WADzB,GACI3B,oCADJ,EAEI9I,KAAA,CAAM,oFAAN,CAEC2I,qCAAL,EA74BsB,WA64BtB,GA74BI,MAAOnL,OA64BX,EA54BIA,MAAAiO,SA44BJ,EA34BIjO,MAAAiO,SAAAC,SA24BJ,EA14BoD,EA04BpD,GA14BIlO,MAAAiO,SAAAC,SAAA3C,QAAA,CAAiC,QAAjC,CA04BJ,EAz4BI7I,IAAA,CAAK,2FAAL,CA64BJ,OAAO,CACHyL,SAAU,IAAIlD,QAAJ,CAAaC,kCAAb;AAA6BC,oCAA7B,CAhBiC8B,uCAgBjC,CAF2B,IAE3B,GAFMC,OAEN,EAFwD,KAExD,GAFmCA,OAEnC,CADP,CAEHjD,KAAM,IAAIlD,IAAJ,CAASkB,wCAAT,CAFH,CAhB4B,CA/tCvC,CA+0CImG,mBAAqB,gCA/0CzB,CAs1CIC,oBAAsB,8BAt1C1B,CAi2CIC,WAAaA,QAAS,CAACrT,GAAD,CAAM,CAC5B,MAAuB,QAAvB,GAAQ,MAAOA,IAAf,EAAkD,CAAlD,GAAmCA,GAAAgB,OAAnC,EAAuD,CAACmS,kBAAA5H,KAAA,CAAwBvL,GAAxB,CAD5B,CAj2ChC,CAw2CIsT,kBAAoBA,QAAS,CAACtG,UAAD,CAAa,CAC1C,MAA8B,QAA9B,GAAQ,MAAOA,WAAf,EAC0B,CAD1B,GACIA,UAAAhM,OADJ,EAEI,CAACoS,mBAAA7H,KAAA,CAAyByB,UAAzB,CAHqC,CAx2C9C;AA43CIuG,gBAAkBA,QAAS,CAACjU,QAAD,CAAW,CACtC,MAAqB,KAArB,GAAQA,QAAR,EACwB,QADxB,GACI,MAAOA,SADX,EAEyB,QAFzB,GAEK,MAAOA,SAFZ,EAEqC,CAACoI,mBAAA,CAAoBpI,QAApB,CAFtC,EAGKA,QAHL,EAGqC,QAHrC,GAGiB,MAAOA,SAHxB,EAGiDG,IAAAS,SAAA,CAAcZ,QAAd,CAAwB,KAAxB,CAJX,CA53C1C,CA24CIkU,wBAA0BA,QAAS,CAACC,MAAD,CAASC,cAAT,CAAyB/L,IAAzB,CAA+BqH,IAA/B,CAAqC2E,QAArC,CAA+C,CAC9EA,QAAJ,EAAyBC,IAAAA,EAAzB,GAAgBjM,IAAhB,EAEAkM,oBAAA,CAAqBpU,IAAAqU,YAAA,CAAiBL,MAAjB,CAAyBC,cAAzB,CAAyCC,QAAzC,CAArB,CAAyEhM,IAAzE,CAA+EqH,IAA/E,CAHkF,CA34CtF,CAu5CI6E,qBAAuBA,QAAS,CAACC,WAAD,CAAcnM,IAAd,CAAoBoM,KAApB,CAA2B,CAC3D,IAAI/E,KAAO+E,KAAA,WAAiBjI,KAAjB,CAAwB,IAAIiD,cAAJ,CAAmBgF,KAAnB;AAA0BD,WAA1B,CAAxB,CAAiEC,KAC5E,IAAaH,IAAAA,EAAb,GAAIjM,IAAJ,CACI,KAAUH,MAAJ,CAAUsM,WAAV,CAAwB,qBAAxB,CAAgD9E,IAAAc,cAAA,EAAhD,CAAN,CAEJ,GAAoB,UAApB,GAAI,MAAOnI,KAAX,CACI,KAAUH,MAAJ,CAAUsM,WAAV,CACF,sBADE,CAEF9E,IAAAc,cAAA,EAFE,CAGF,sBAHE,CAIFnI,IAAAtD,SAAA,EAJE,CAAN,CAMJ,GAAIqD,mBAAA,CAAoBC,IAApB,CAAJ,CACI,KAAUH,MAAJ,CAAUsM,WAAV,CAAwB,WAAxB,CAAsCnM,IAAAtD,SAAA,EAAtC,CAAwD,GAAxD,CAA8D2K,IAAAc,cAAA,EAA9D,CAAN,CAGJ,GAAoB,QAApB,GAAI,MAAOnI,KAAX,EACIA,IAAA3G,OADJ,CA3EiBgT,QA2EjB,CACmC,CADnC,EA3EiBA,QA2EjB,CAEIvU,IAAA4P,aAAA,CAAkB1H,IAAlB,CAFJ,CAGI,KAAUH,MAAJ,CAAUsM,WAAV,CAGF,qDAHE;AAIF9E,IAAAc,cAAA,EAJE,CAKF,KALE,CAMFnI,IAAAxH,UAAA,CAAe,CAAf,CAAkB,EAAlB,CANE,CAOF,OAPE,CAAN,CAWJ,GAAIwH,IAAJ,EAA4B,QAA5B,GAAY,MAAOA,KAAnB,CAAsC,CAAA,IAC9BsM,cAAgB,CAAA,CADc,CACPC,iBAAmB,CAAA,CAC9CzU,KAAAM,QAAA,CAAa4H,IAAb,CAAmB,QAAS,CAAC3H,GAAD,CAAM6C,KAAN,CAAa,CACrC,GAAY,QAAZ,GAAI7C,GAAJ,CACIiU,aAAA,CAAgB,CAAA,CADpB,KAGK,IAAY,WAAZ,GAAIjU,GAAJ,EAAmC,KAAnC,GAA2BA,GAA3B,GACDkU,gBACI,CADe,CAAA,CACf,CAAA,CAACb,UAAA,CAAWrT,GAAX,CAFJ,EAGG,KAAUwH,MAAJ,CAAUsM,WAAV,CACF,4BADE,CAEF9T,GAFE,CAGF,IAHE,CAIFgP,IAAAc,cAAA,EAJE,CAMF,sFANE,CAAN,CASRd,IAAAlO,KAAA,CAAUd,GAAV,CACA6T,qBAAA,CAAqBC,WAArB;AAAkCjR,KAAlC,CAAyCmM,IAAzC,CACAA,KAAAQ,IAAA,EAlBqC,CAAzC,CAoBA,IAAIyE,aAAJ,EAAqBC,gBAArB,CACI,KAAU1M,MAAJ,CAAUsM,WAAV,CACF,2BADE,CAEF9E,IAAAc,cAAA,EAFE,CAGF,kCAHE,CAAN,CAvB8B,CA9BqB,CAv5C/D,CAy9CIqE,2BAA6BA,QAAS,CAACL,WAAD,CAAcM,UAAd,CAA0B,CAAA,IAC5D7N,CACJ,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB6N,UAAApT,OAAhB,CAAmCuF,CAAA,EAAnC,CAAwC,CACpC,IAAA8N,QAAUD,UAAA,CAAW7N,CAAX,CAEV,KADA,IAAI6C,KAAOiL,OAAAhH,MAAA,EAAX,CACSwB,EAAI,CAAb,CAAgBA,CAAhB,CAAoBzF,IAAApI,OAApB,CAAiC6N,CAAA,EAAjC,CACI,IAAgB,WAAhB,GAAIzF,IAAA,CAAKyF,CAAL,CAAJ,EAA+BA,CAA/B,GAAqCzF,IAAApI,OAArC,CAAmD,CAAnD,GACS,CAACqS,UAAA,CAAWjK,IAAA,CAAKyF,CAAL,CAAX,CADV,CAEI,KAAUrH,MAAJ,CAAUsM,WAAV,CACF,2BADE,CAEF1K,IAAA,CAAKyF,CAAL,CAFE,CAGF,YAHE,CAIFwF,OAAAhQ,SAAA,EAJE;AAMF,qFANE,CAAN,CAN4B,CAmBxC+P,UAAA9K,KAAA,CAAgBwC,IAAAuC,aAAhB,CACIiG,KAAAA,CAAW,IACf,KAAK/N,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB6N,UAAApT,OAAhB,CAAmCuF,CAAA,EAAnC,CAAwC,CACpC8N,OAAA,CAAUD,UAAA,CAAW7N,CAAX,CACV,IAAiB,IAAjB,GAAI+N,IAAJ,EAAyBA,IAAApU,SAAA,CAAkBmU,OAAlB,CAAzB,CACI,KAAU7M,MAAJ,CAAUsM,WAAV,CACF,kBADE,CAEFQ,IAAAjQ,SAAA,EAFE,CAGF,oCAHE,CAIFgQ,OAAAhQ,SAAA,EAJE,CAAN,CAMJiQ,IAAA,CAAWD,OATyB,CAvBwB,CAz9CpE,CAsgDIE,6BAA+BA,QAAS,CAACd,MAAD,CAASC,cAAT,CAAyB/L,IAAzB,CAA+BqH,IAA/B,CAAqC2E,QAArC,CAA+C,CACvF,GAAIA,CAAAA,QAAJ,EAAyBC,IAAAA,EAAzB,GAAgBjM,IAAhB,CAAA,CAEA,IAAImM,YAAcrU,IAAAqU,YAAA,CAAiBL,MAAjB;AAAyBC,cAAzB,CAAyCC,QAAzC,CAClB,IAAMhM,CAAAA,IAAN,EAA8B,QAA9B,GAAc,MAAOA,KAArB,EAA2C/H,KAAA4G,QAAA,CAAcmB,IAAd,CAA3C,CACI,KAAUH,MAAJ,CAAUsM,WAAV,CAAwB,wDAAxB,CAAN,CAEJ,IAAIM,WAAa,EACjB3U,KAAAM,QAAA,CAAa4H,IAAb,CAAmB,QAAS,CAAC3H,GAAD,CAAM6C,KAAN,CAAa,CACjCwR,GAAAA,CAAU,IAAIvI,IAAJ,CAAS9L,GAAT,CACd6T,qBAAA,CAAqBC,WAArB,CAAkCjR,KAAlC,CAAyCmM,IAAApO,MAAA,CAAWyT,GAAX,CAAzC,CACA,IAA0B,WAA1B,GAAIA,GAAAxH,QAAA,EAAJ,EACQ,CAAC0G,eAAA,CAAgB1Q,KAAhB,CADT,CAEQ,KAAU2E,MAAJ,CAAUsM,WAAV,CACF,iCADE,CAEFO,GAAAhQ,SAAA,EAFE,CAIF,8FAJE,CAAN;AAOR+P,UAAAtT,KAAA,CAAgBuT,GAAhB,CAZqC,CAAzC,CAcAF,2BAAA,CAA2BL,WAA3B,CAAwCM,UAAxC,CArBA,CADuF,CAtgD3F,CA8hDII,iBAAmBA,QAAS,CAACf,MAAD,CAASC,cAAT,CAAyBpU,QAAzB,CAAmCqU,QAAnC,CAA6C,CACzE,GAAIA,CAAAA,QAAJ,EAA6BC,IAAAA,EAA7B,GAAgBtU,QAAhB,CAAA,CAEA,GAAIoI,mBAAA,CAAoBpI,QAApB,CAAJ,CACI,KAAUkI,MAAJ,CAAU/H,IAAAqU,YAAA,CAAiBL,MAAjB,CAAyBC,cAAzB,CAAyCC,QAAzC,CAAV,CACF,KADE,CAEFrU,QAAA+E,SAAA,EAFE,CAIF,2FAJE,CAAN,CAMJ,GAAI,CAACkP,eAAA,CAAgBjU,QAAhB,CAAL,CACI,KAAUkI,MAAJ,CAAU/H,IAAAqU,YAAA,CAAiBL,MAAjB,CAAyBC,cAAzB,CAAyCC,QAAzC,CAAV,CAEF,qFAFE,CAAN;AAVJ,CADyE,CA9hD7E,CA6iDIc,kBAAoBA,QAAS,CAAChB,MAAD,CAASC,cAAT,CAAyBgB,SAAzB,CAAoCf,QAApC,CAA8C,CAC3E,GAAIA,CAAAA,QAAJ,EAA8BC,IAAAA,EAA9B,GAAgBc,SAAhB,CAEA,OAAQA,SAAR,EACI,KAAK,OAAL,CACA,KAAK,aAAL,CACA,KAAK,eAAL,CACA,KAAK,eAAL,CACA,KAAK,aAAL,CACI,KACJ,SACI,KAAUlN,MAAJ,CAAU/H,IAAAqU,YAAA,CAAiBL,MAAjB,CAAyBC,cAAzB,CAAyCC,QAAzC,CAAV,CAEF,6GAFE,CAAN,CARR,CAH2E,CA7iD/E,CA6jDIgB,YAAcA,QAAS,CAAClB,MAAD,CAASC,cAAT,CAAyB1T,GAAzB,CAA8B2T,QAA9B,CAAwC,CAC/D,GAAI,EAAAA,QAAA,EAAoBC,IAAAA,EAApB,GAAY5T,GAAZ,EAECqT,UAAA,CAAWrT,GAAX,CAFD,CAAJ,CAGI,KAAUwH,MAAJ,CAAU/H,IAAAqU,YAAA,CAAiBL,MAAjB;AAAyBC,cAAzB,CAAyCC,QAAzC,CAAV,CACF,2BADE,CAEF3T,GAFE,CAIF,kGAJE,CAAN,CAJ2D,CA7jDnE,CAukDI4U,mBAAqBA,QAAS,CAACnB,MAAD,CAASC,cAAT,CAAyB1G,UAAzB,CAAqC2G,QAArC,CAA+C,CAC7E,GAAI,EAAAA,QAAA,EAA2BC,IAAAA,EAA3B,GAAY5G,UAAZ,EAECsG,iBAAA,CAAkBtG,UAAlB,CAFD,CAAJ,CAGI,KAAUxF,MAAJ,CAAU/H,IAAAqU,YAAA,CAAiBL,MAAjB,CAAyBC,cAAzB,CAAyCC,QAAzC,CAAV,CACF,4BADE,CAEF3G,UAFE,CAIF,kFAJE,CAAN,CAJyE,CAvkDjF,CAwlDI6H;AAAuBA,QAAS,CAACpB,MAAD,CAASzE,IAAT,CAAe,CAC/C,GAAwB,OAAxB,GAAIA,IAAAzC,SAAA,EAAJ,CACI,KAAU/E,MAAJ,CAAUiM,MAAV,CAAmB,8CAAnB,CAAN,CAF2C,CAxlDnD,CA6lDIqB,YAAcA,QAAS,CAACrB,MAAD,CAASC,cAAT,CAAyBqB,SAAzB,CAAoC,CAE3D,IAAI/H,WAAa+H,SAAA/F,KAAA3K,SAAA,EACb,GAAA,SAAA,CAAA,QAAA,GAAA,MAAA,UAAA,SAAA,KAAA,EAAA,CAAA,GAAA,SAAA,SAAA,KAAA,OAAA,EAAA,CAAA,UAAA,CAAA,SAAA,SAAA,UAAA,CAAA,EAAA,WAAA,GAAA,SAAA,SAAA,KAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAIC,SAJD,CAIC,CAJD,GAIC,UAAA,OAJD,IA9OA2I,UAkPC,GAhPDA,UAgPC,CAhPYA,UAAAwF,QAAA,CAAmB,kBAAnB;AAAuC,GAAvC,CAgPZ,EAAA,SAAA,CAAA,CA9OEc,iBAAA,CAAkBtG,UAAlB,CA0OH,CAAJ,IAAI,SAAJ,CAKI,KAAUxF,MAAJ,CAAU/H,IAAAqU,YAAA,CAAiBL,MAAjB,CAAyBC,cAAzB,CAAyC,CAAA,CAAzC,CAAV,CAEF,sFAFE,CAAN,CARuD,CA7lD/D,CAooDIsB,aAA8B,QAAS,EAAG,CAK1CA,QAASA,aAAY,CAACC,KAAD,CAAQlB,KAAR,CAAe,CAChC,IAAAkB,MAAA,CAAaA,KACb,KAAAlB,MAAA,CAAaA,KAFmB,CAQpCiB,YAAA1R,UAAA4R,OAAA,CAAgCC,QAAS,CAACC,UAAD,CAAa,CAClD3V,IAAA4V,iBAAA,CAAsB,qBAAtB,CAA6C,CAA7C,CAAgD,CAAhD,CAAmDhP,SAAArF,OAAnD,CACAvB,KAAA6V,iBAAA,CAAsB,qBAAtB,CAA6C,CAA7C,CAAgDF,UAAhD,CAA4D,CAAA,CAA5D,CACA,KAAIG,SAAW,IAAI9V,IAAA+V,SACnB;IAAAP,MAAAQ,mBAAA,CAA8B,IAAA1B,MAA9B,CAA0CwB,QAAAG,aAAA,CAAsBN,UAAtB,CAA1C,CACA,OAAOG,SAAAI,QAL2C,CAWtDX,aAAA1R,UAAAY,OAAA,CAAgC0R,QAAS,CAACR,UAAD,CAAa,CAClD3V,IAAA4V,iBAAA,CAAsB,qBAAtB,CAA6C,CAA7C,CAAgD,CAAhD,CAAmDhP,SAAArF,OAAnD,CACA6T,qBAAA,CAAqB,qBAArB,CAA4C,IAAAd,MAA5C,CACAtU,KAAA6V,iBAAA,CAAsB,qBAAtB,CAA6C,CAA7C,CAAgDF,UAAhD,CAA4D,CAAA,CAA5D,CACA,KAAIG,SAAW,IAAI9V,IAAA+V,SACnB,KAAAP,MAAAY,gBAAA,CAA2B,IAAA9B,MAA3B,CAAuC,IAAvC,CAA6CwB,QAAAG,aAAA,CAAsBN,UAAtB,CAA7C,CACA,OAAOG,SAAAI,QAN2C,CAatDX,aAAA1R,UAAAC,IAAA,CAA6BuS,QAAS,CAACjT,KAAD;AAAQuS,UAAR,CAAoB,CACtD3V,IAAA4V,iBAAA,CAAsB,kBAAtB,CAA0C,CAA1C,CAA6C,CAA7C,CAAgDhP,SAAArF,OAAhD,CACA6T,qBAAA,CAAqB,kBAArB,CAAyC,IAAAd,MAAzC,CACAP,wBAAA,CAAwB,kBAAxB,CAA4C,CAA5C,CAA+C3Q,KAA/C,CAAsD,IAAAkR,MAAtD,CAAkE,CAAA,CAAlE,CACAtU,KAAA6V,iBAAA,CAAsB,kBAAtB,CAA0C,CAA1C,CAA6CF,UAA7C,CAAyD,CAAA,CAAzD,CACA,KAAIG,SAAW,IAAI9V,IAAA+V,SACnB,KAAAP,MAAAY,gBAAA,CAA2B,IAAA9B,MAA3B,CAAuClR,KAAvC,CAA8C0S,QAAAG,aAAA,CAAsBN,UAAtB,CAA9C,CACA,OAAOG,SAAAI,QAP+C,CAe1DX,aAAA1R,UAAAyS,gBAAA,CAAyCC,QAAS,CAACnT,KAAD,CAAQvD,QAAR,CAAkB8V,UAAlB,CAA8B,CAC5E3V,IAAA4V,iBAAA,CAAsB,8BAAtB;AAAsD,CAAtD,CAAyD,CAAzD,CAA4DhP,SAAArF,OAA5D,CACA6T,qBAAA,CAAqB,8BAArB,CAAqD,IAAAd,MAArD,CACAP,wBAAA,CAAwB,8BAAxB,CAAwD,CAAxD,CAA2D3Q,KAA3D,CAAkE,IAAAkR,MAAlE,CAA8E,CAAA,CAA9E,CACAS,iBAAA,CAAiB,8BAAjB,CAAiD,CAAjD,CAAoDlV,QAApD,CAA8D,CAAA,CAA9D,CACAG,KAAA6V,iBAAA,CAAsB,8BAAtB,CAAsD,CAAtD,CAAyDF,UAAzD,CAAqE,CAAA,CAArE,CACA,KAAIG,SAAW,IAAI9V,IAAA+V,SACnB,KAAAP,MAAAgB,4BAAA,CAAuC,IAAAlC,MAAvC,CAAmDlR,KAAnD,CAA0DvD,QAA1D,CAAoEiW,QAAAG,aAAA,CAAsBN,UAAtB,CAApE,CACA,OAAOG,SAAAI,QARqE,CAehFX,aAAA1R,UAAAuC,OAAA,CAAgCqQ,QAAS,CAACC,aAAD;AAAgBf,UAAhB,CAA4B,CACjE3V,IAAA4V,iBAAA,CAAsB,qBAAtB,CAA6C,CAA7C,CAAgD,CAAhD,CAAmDhP,SAAArF,OAAnD,CACA6T,qBAAA,CAAqB,qBAArB,CAA4C,IAAAd,MAA5C,CACA,IAAInU,KAAA4G,QAAA,CAAc2P,aAAd,CAAJ,CAAkC,CAE9B,IADA,IAAIC,iBAAmB,EAAvB,CACS7P,EAAI,CAAb,CAAgBA,CAAhB,CAAoB4P,aAAAnV,OAApB,CAA0C,EAAEuF,CAA5C,CACI6P,gBAAA,CAAiB,EAAjB,CAAsB7P,CAAtB,CAAA,CAA2B4P,aAAA,CAAc5P,CAAd,CAE/B4P,cAAA,CAAgBC,gBAChB3O,KAAA,CAAK,8NAAL,CAN8B,CASlC8M,4BAAA,CAA6B,qBAA7B;AAAoD,CAApD,CAAuD4B,aAAvD,CAAsE,IAAApC,MAAtE,CAAkF,CAAA,CAAlF,CACAtU,KAAA6V,iBAAA,CAAsB,qBAAtB,CAA6C,CAA7C,CAAgDF,UAAhD,CAA4D,CAAA,CAA5D,CACIG,iBAAAA,CAAW,IAAI9V,IAAA+V,SACnB,KAAAP,MAAAoB,mBAAA,CAA8B,IAAAtC,MAA9B,CAA0CoC,aAA1C,CAAyDZ,gBAAAG,aAAA,CAAsBN,UAAtB,CAAzD,CACA,OAAOG,iBAAAI,QAhB0D,CAkBrE,OAAOX,aArFmC,CAAZ,EApoDlC,CA4uDIsB,kBAAmC,QAAS,EAAG,CAQ/CA,QAASA,kBAAiB,CAACC,SAAD,CAAYC,QAAZ,CAAsB,CAC5C,IAAAD,UAAA,CAAiBA,SACjB,KAAAC,SAAA,CAAgBA,QAF4B,CAMhDF,iBAAAhT,UAAAmT,OAAA,CAAqCC,QAAS,EAAG,CAC7CjX,IAAA4V,iBAAA,CAAsB,0BAAtB,CAAkD,CAAlD;AAAqD,CAArD,CAAwDhP,SAAArF,OAAxD,CACA,OAAO,CAAEuV,UAAW,IAAAA,UAAb,CAA6BC,SAAU,IAAAA,SAAAC,OAAA,EAAvC,CAFsC,CAIjD,OAAOH,kBAlBwC,CAAZ,EA5uDvC,CA+xDIK,WAAc,QAAS,EAAG,CAK1B,IAAIC,aAAe,CAAnB,CAKIC,cAAgB,EACpB,OAAO,SAAS,CAACC,GAAD,CAAM,CAClB,IAAIC,cAAgBD,GAAhBC,GAAwBH,YAC5BA,aAAA,CAAeE,GACf,KAAIvQ,CAAJ,CACIyQ,eAAqBpX,KAAJ,CAAU,CAAV,CACrB,KAAK2G,CAAL,CAAS,CAAT,CAAiB,CAAjB,EAAYA,CAAZ,CAAoBA,CAAA,EAApB,CACIyQ,cAAA,CAAezQ,CAAf,CAGA,CAlBS0Q,kEAeWtE,OAAA,CAAkBmE,GAAlB,CAAwB,EAAxB,CAGpB,CAAAA,GAAA,CAAM3M,IAAAK,MAAA,CAAWsM,GAAX,CAAiB,EAAjB,CAEVrX,KAAAC,OAAA,CAAoB,CAApB,GAAYoX,GAAZ,CAAuB,gCAAvB,CACIvR,IAAAA,CAAKyR,cAAAhM,KAAA,CAAoB,EAApB,CACT,IAAK+L,aAAL,CAKK,CAGD,IAAKxQ,CAAL;AAAS,EAAT,CAAkB,CAAlB,EAAaA,CAAb,EAA4C,EAA5C,GAAuBsQ,aAAA,CAActQ,CAAd,CAAvB,CAAgDA,CAAA,EAAhD,CACIsQ,aAAA,CAActQ,CAAd,CAAA,CAAmB,CAEvBsQ,cAAA,CAActQ,CAAd,CAAA,EANC,CALL,IACI,KAAKA,CAAL,CAAS,CAAT,CAAgB,EAAhB,CAAYA,CAAZ,CAAoBA,CAAA,EAApB,CACIsQ,aAAA,CAActQ,CAAd,CAAA,CAAmB4D,IAAAK,MAAA,CAA2B,EAA3B,CAAWL,IAAA+M,OAAA,EAAX,CAW3B,KAAK3Q,CAAL,CAAS,CAAT,CAAgB,EAAhB,CAAYA,CAAZ,CAAoBA,CAAA,EAApB,CACIhB,GAAA,EApCS0R,kEAoCHtE,OAAA,CAAkBkE,aAAA,CAActQ,CAAd,CAAlB,CAEV9G,KAAAC,OAAA,CAA0B,EAA1B,GAAY6F,GAAAvE,OAAZ,CAA8B,kCAA9B,CACA,OAAOuE,IA9BW,CAXI,CAAb,EA/xDjB,CAm2DIxE,UAA2B,QAAS,EAAG,CACvCA,QAASA,UAAS,CAAC7B,IAAD,CAAOiY,IAAP,CAAa,CAC3B,IAAAjY,KAAA,CAAYA,IACZ,KAAAiY,KAAA,CAAYA,IAFe,CAU/BpW,SAAAqW,KAAA,CAAiBC,QAAS,CAACnY,IAAD,CAAOiY,IAAP,CAAa,CACnC,MAAO,KAAIpW,SAAJ,CAAc7B,IAAd,CAAoBiY,IAApB,CAD4B,CAGvC,OAAOpW,UAdgC,CAAZ,EAn2D/B;AAw4DIuW,MAAuB,QAAS,EAAG,CACnCA,QAASA,MAAK,EAAG,EAMjBA,KAAAhU,UAAAhC,WAAA,CAA6BiW,QAAS,EAAG,CACrC,MAAO,KAAAC,QAAAtQ,KAAA,CAAkB,IAAlB,CAD8B,CAWzCoQ,MAAAhU,UAAAmU,oBAAA,CAAsCC,QAAS,CAACC,OAAD,CAAUC,OAAV,CAAmB,CAC1DC,OAAAA,CAAa,IAAI9W,SAAJ,CA9/CV4H,YA8/CU,CAAwBgP,OAAxB,CACbG,QAAAA,CAAa,IAAI/W,SAAJ,CA//CV4H,YA+/CU,CAAwBiP,OAAxB,CACjB,OAAgD,EAAhD,GAAO,IAAAJ,QAAA,CAAaK,OAAb,CAAyBC,OAAzB,CAHuD,CASlER,MAAAhU,UAAAyU,QAAA,CAA0BC,QAAS,EAAG,CAClC,MAAOjX,UAAAkX,IAD2B,CAGtC,OAAOX,MA9B4B,CAAZ,EAx4D3B,CAy7DIY,YAz7DJ,CA07DIC,SAA0B,QAAS,CAACC,MAAD,CAAS,CAE5CD,QAASA,SAAQ,EAAG,CAChB,MAAkB,KAAlB,GAAOC,MAAP,EAA0BA,MAAA3R,MAAA,CAAa,IAAb,CAAmBJ,SAAnB,CAA1B,EAA2D,IAD3C,CADpBpD,OAAAoV,UAAA,CAAkBF,QAAlB;AAA4BC,MAA5B,CAIAzV,OAAAC,eAAA,CAAsBuV,QAAtB,CAAgC,cAAhC,CAAgD,CAC5CtU,IAAKA,QAAS,EAAG,CACb,MAAOqU,aADM,CAD2B,CAI5C3U,IAAKA,QAAS,CAACsG,GAAD,CAAM,CAChBqO,YAAA,CAAerO,GADC,CAJwB,CAO5CwC,WAAY,CAAA,CAPgC,CAQ5CC,aAAc,CAAA,CAR8B,CAAhD,CAaA6L,SAAA7U,UAAAkU,QAAA,CAA6Bc,QAAS,CAAC7P,CAAD,CAAIC,CAAJ,CAAO,CACzC,MAAOzJ,YAAA,CAAYwJ,CAAAvJ,KAAZ,CAAoBwJ,CAAAxJ,KAApB,CADkC,CAM7CiZ,SAAA7U,UAAAiV,YAAA,CAAiCC,QAAS,CAACrB,IAAD,CAAO,CAG7C,KAAM1X,KAAAgZ,eAAA,CAAoB,iDAApB,CAAN,CAH6C,CAQjDN,SAAA7U,UAAAmU,oBAAA,CAAyCiB,QAAS,CAACf,OAAD,CAAUC,OAAV,CAAmB,CACjE,MAAO,CAAA,CAD0D,CAMrEO,SAAA7U,UAAAyU,QAAA,CAA6BY,QAAS,EAAG,CACrC,MAAO5X,UAAAkX,IAD8B,CAMzCE,SAAA7U,UAAAsV,QAAA;AAA6BC,QAAS,EAAG,CAGrC,MAAO,KAAI9X,SAAJ,CAvkDA6H,YAukDA,CAAwBsP,YAAxB,CAH8B,CAUzCC,SAAA7U,UAAAwV,SAAA,CAA8BC,QAAS,CAACC,UAAD,CAAa9Z,IAAb,CAAmB,CACtDO,IAAAC,OAAA,CAAkC,QAAlC,GAAY,MAAOsZ,WAAnB,CAA4C,8CAA5C,CAEA,OAAO,KAAIjY,SAAJ,CAAciY,UAAd,CAA0Bd,YAA1B,CAH+C,CAQ1DC,SAAA7U,UAAAe,SAAA,CAA8B4U,QAAS,EAAG,CACtC,MAAO,MAD+B,CAG1C,OAAOd,SAjEqC,CAAlB,CAkE5Bb,KAlE4B,CA17D9B,CA6/DI4B,UAAY,IAAIf,QA7/DpB,CA+gEIgB,QA/gEJ,CAuhEIC,iBAAmBA,QAAS,CAAC9Z,QAAD,CAAW,CACvC,MAAwB,QAAxB,GAAI,MAAOA,SAAX,CACW,SADX,CACuBwK,qBAAA,CAAsBxK,QAAtB,CADvB,CAGW,SAHX,CAGuBA,QAJgB,CAvhE3C,CAkiEI+Z;AAAuBA,QAAS,CAACC,YAAD,CAAe,CAC/C,GAAIA,YAAAjZ,WAAA,EAAJ,CAA+B,CAC3B,IAAIwJ,IAAMyP,YAAAzP,IAAA,EACVpK,KAAAC,OAAA,CAA2B,QAA3B,GAAY,MAAOmK,IAAnB,EACmB,QADnB,GACI,MAAOA,IADX,EAEoB,QAFpB,GAEK,MAAOA,IAFZ,EAEgCpK,IAAAS,SAAA,CAAc2J,GAAd,CAAmB,KAAnB,CAFhC,CAE4D,sCAF5D,CAF2B,CAA/B,IAOIpK,KAAAC,OAAA,CAAY4Z,YAAZ,GAA6BH,QAA7B,EAAyCG,YAAAhZ,QAAA,EAAzC,CAAiE,8BAAjE,CAGJb,KAAAC,OAAA,CAAY4Z,YAAZ,GAA6BH,QAA7B,EAAyCG,YAAAzY,YAAA,EAAAP,QAAA,EAAzC,CAA+E,oDAA/E,CAX+C,CAliEnD,CAgkEIiZ,yBAhkEJ,CAskEI5Z,SAA0B,QAAS,EAAG,CAOtCA,QAASA,SAAQ,CAAC6Z,MAAD;AAASC,aAAT,CAAwB,CACf,IAAK,EAA3B,GAAIA,aAAJ,GAAgCA,aAAhC,CAAgD9Z,QAAA4Z,0BAAA/Z,WAAhD,CACA,KAAAga,OAAA,CAAcA,MACd,KAAAC,cAAA,CAAqBA,aACrB,KAAAC,UAAA,CAAiB,IACjBja,KAAAC,OAAA,CAA4BkU,IAAAA,EAA5B,GAAY,IAAA4F,OAAZ,EAAyD,IAAzD,GAAyC,IAAAA,OAAzC,CAA+D,0DAA/D,CACAH,qBAAA,CAAqB,IAAAI,cAArB,CANqC,CAQzC9W,MAAAC,eAAA,CAAsBjD,QAAtB,CAAgC,2BAAhC,CAA6D,CACzDkE,IAAKA,QAAS,EAAG,CACb,MAAO0V,0BADM,CADwC,CAIzDhW,IAAKA,QAAS,CAACsG,GAAD,CAAM,CAChB0P,yBAAA,CAA4B1P,GADZ,CAJqC,CAOzDwC,WAAY,CAAA,CAP6C,CAQzDC,aAAc,CAAA,CAR2C,CAA7D,CAWA3M;QAAA2D,UAAAjD,WAAA,CAAgCsZ,QAAS,EAAG,CACxC,MAAO,CAAA,CADiC,CAI5Cha,SAAA2D,UAAAzC,YAAA,CAAiC+Y,QAAS,EAAG,CACzC,MAAO,KAAAH,cADkC,CAI7C9Z,SAAA2D,UAAA9C,eAAA,CAAoCqZ,QAAS,CAACC,eAAD,CAAkB,CAC3D,MAAO,KAAIna,QAAJ,CAAa,IAAA6Z,OAAb,CAA0BM,eAA1B,CADoD,CAI/Dna,SAAA2D,UAAAyW,kBAAA,CAAuCC,QAAS,CAACC,SAAD,CAAY,CAExD,MAAkB,WAAlB,GAAIA,SAAJ,CACW,IAAAR,cADX,CAIW9Z,QAAA4Z,0BAAA/Z,WAN6C,CAU5DG,SAAA2D,UAAA4W,SAAA,CAA8BC,QAAS,CAACnL,IAAD,CAAO,CAC1C,MAAIA,KAAA1O,QAAA,EAAJ,CACW,IADX,CAG6B,WAAxB,GAAI0O,IAAAzC,SAAA,EAAJ,CACM,IAAAkN,cADN;AAIM9Z,QAAA4Z,0BAAA/Z,WAR+B,CAc9CG,SAAA2D,UAAA8W,SAAA,CAA8BC,QAAS,EAAG,CACtC,MAAO,CAAA,CAD+B,CAI1C1a,SAAA2D,UAAAgX,wBAAA,CAA6CC,QAAS,CAACN,SAAD,CAAY7Z,SAAZ,CAAuB,CACzE,MAAO,KADkE,CAI7ET,SAAA2D,UAAA/C,qBAAA,CAA0Cia,QAAS,CAACP,SAAD,CAAYQ,YAAZ,CAA0B,CACzE,MAAkB,WAAlB,GAAIR,SAAJ,CACW,IAAAzZ,eAAA,CAAoBia,YAApB,CADX,CAGSA,YAAAna,QAAA,EAAJ,EAA4C,WAA5C,GAA8B2Z,SAA9B,CACM,IADN,CAIMta,QAAA4Z,0BAAA/Z,WAAAe,qBAAA,CAAmE0Z,SAAnE,CAA8EQ,YAA9E,CAAAja,eAAA,CAA2G,IAAAiZ,cAA3G,CAR8D,CAY7E9Z,SAAA2D,UAAAoX,YAAA;AAAiCC,QAAS,CAAC3L,IAAD,CAAOyL,YAAP,CAAqB,CAC3D,IAAIG,MAAQ5L,IAAAzC,SAAA,EACZ,IAAc,IAAd,GAAIqO,KAAJ,CACI,MAAOH,aAEN,IAAIA,YAAAna,QAAA,EAAJ,EAAwC,WAAxC,GAA8Bsa,KAA9B,CACD,MAAO,KAGPnb,KAAAC,OAAA,CAAsB,WAAtB,GAAYkb,KAAZ,EAA0D,CAA1D,GAAqC5L,IAAAvC,UAAA,EAArC,CAA6D,4CAA7D,CACA,OAAO,KAAAlM,qBAAA,CAA0Bqa,KAA1B,CAAiCjb,QAAA4Z,0BAAA/Z,WAAAkb,YAAA,CAA0D1L,IAAArC,SAAA,EAA1D,CAA2E8N,YAA3E,CAAjC,CAVgD,CAc/D9a,SAAA2D,UAAAhD,QAAA,CAA6Bua,QAAS,EAAG,CACrC,MAAO,CAAA,CAD8B,CAIzClb,SAAA2D,UAAAwX,YAAA,CAAiCC,QAAS,EAAG,CACzC,MAAO,EADkC,CAI7Cpb,SAAA2D,UAAA0X,aAAA;AAAkCC,QAAS,CAACC,KAAD,CAAQC,MAAR,CAAgB,CACvD,MAAO,CAAA,CADgD,CAM3Dxb,SAAA2D,UAAAuG,IAAA,CAAyBuR,QAAS,CAACC,YAAD,CAAe,CAC7C,MAAIA,aAAJ,EAAoB,CAAC,IAAAxa,YAAA,EAAAP,QAAA,EAArB,CACW,CACH,SAAU,IAAAgb,SAAA,EADP,CAEH,YAAa,IAAAza,YAAA,EAAAgJ,IAAA,EAFV,CADX,CAMW,IAAAyR,SAAA,EAPkC,CAUjD3b,SAAA2D,UAAAiY,KAAA,CAA0BC,QAAS,EAAG,CAClC,GAAuB,IAAvB,GAAI,IAAA9B,UAAJ,CAA6B,CACzB,IAAI+B,OAAS,EACR,KAAAhC,cAAAnZ,QAAA,EAAL,GACImb,MADJ,EAEQ,WAFR,CAGYrC,gBAAA,CAAiB,IAAAK,cAAA5P,IAAA,EAAjB,CAHZ,CAIY,GAJZ,CAKA,KAAIwH,KAAO,MAAO,KAAAmI,OAClBiC,OAAA,EAAUpK,IAAV,CAAiB,GAEboK,OAAA,CADS,QAAb,GAAIpK,IAAJ,CACIoK,MADJ,CACc3R,qBAAA,CAAsB,IAAA0P,OAAtB,CADd,CAIIiC,MAJJ;AAIc,IAAAjC,OAEd,KAAAE,UAAA,CAAiBlU,IAAA,CAAKiW,MAAL,CAfQ,CAiB7B,MAAO,KAAA/B,UAlB2B,CAwBtC/Z,SAAA2D,UAAAgY,SAAA,CAA8BI,QAAS,EAAG,CACtC,MAAO,KAAAlC,OAD+B,CAM1C7Z,SAAA2D,UAAAqY,UAAA,CAA+BC,QAAS,CAAChN,KAAD,CAAQ,CAC5C,GAAIA,KAAJ,GAAcjP,QAAA4Z,0BAAA/Z,WAAd,CACI,MAAO,EAEN,IAAIoP,KAAJ,WAAqBjP,SAAA4Z,0BAArB,CACD,MAAQ,EAGR9Z,KAAAC,OAAA,CAAYkP,KAAAvO,WAAA,EAAZ,CAAgC,mBAAhC,CACA,OAAO,KAAAwb,mBAAA,CAAwBjN,KAAxB,CATiC,CAkBhDjP,SAAA2D,UAAAuY,mBAAA,CAAwCC,QAAS,CAACC,SAAD,CAAY,CACzD,IAAIC,cAAgB,MAAOD,UAAAvC,OAA3B,CACIyC;AAAe,MAAO,KAAAzC,OAD1B,CAEI0C,WAAavc,QAAAwc,iBAAA7L,QAAA,CAAkC0L,aAAlC,CAFjB,CAGII,UAAYzc,QAAAwc,iBAAA7L,QAAA,CAAkC2L,YAAlC,CAChBxc,KAAAC,OAAA,CAA0B,CAA1B,EAAYwc,UAAZ,CAA6B,qBAA7B,CAAqDF,aAArD,CACAvc,KAAAC,OAAA,CAAyB,CAAzB,EAAY0c,SAAZ,CAA4B,qBAA5B,CAAoDH,YAApD,CACA,OAAIC,WAAJ,GAAmBE,SAAnB,CAEyB,QAArB,GAAIH,YAAJ,CAEW,CAFX,CAMQ,IAAAzC,OAAJ,CAAkBuC,SAAAvC,OAAlB,CACY,EADZ,CAGS,IAAAA,OAAJ,GAAoBuC,SAAAvC,OAApB,CACM,CADN,CAIM,CAfnB,CAoBW4C,SApBX,CAoBuBF,UA3BkC,CAiC7Dvc,SAAA2D,UAAA+Y,UAAA,CAA+BC,QAAS,EAAG,CACvC,MAAO,KADgC,CAM3C3c,SAAA2D,UAAAiZ,UAAA,CAA+BC,QAAS,EAAG,CACvC,MAAO,CAAA,CADgC,CAM3C7c;QAAA2D,UAAAoL,OAAA,CAA4B+N,QAAS,CAAC7N,KAAD,CAAQ,CAIzC,MAAIA,MAAJ,GAAc,IAAd,CACW,CAAA,CADX,CAGSA,KAAAvO,WAAA,EAAJ,CAEO,IAAAmZ,OAFP,GACe5K,KACQ4K,OAFvB,EAGG,IAAAC,cAAA/K,OAAA,CAFYE,KAEc6K,cAA1B,CAHH,CAMM,CAAA,CAb8B,CAsB7C9Z,SAAAwc,iBAAA,CAA4B,CAAC,QAAD,CAAW,SAAX,CAAsB,QAAtB,CAAgC,QAAhC,CAC5B,OAAOxc,SA5O+B,CAAZ,EAtkE9B,CA84EI0B,eAAiB,KA5Dc,QAAS,CAAC+W,MAAD,CAAS,CAEjDsE,QAASA,cAAa,EAAG,CACrB,MAAkB,KAAlB,GAAOtE,MAAP,EAA0BA,MAAA3R,MAAA,CAAa,IAAb,CAAmBJ,SAAnB,CAA1B,EAA2D,IADtC,CADzBpD,OAAAoV,UAAA,CAAkBqE,aAAlB,CAAiCtE,MAAjC,CAOAsE,cAAApZ,UAAAkU,QAAA,CAAkCmF,QAAS,CAAClU,CAAD,CAAIC,CAAJ,CAAO,CAC9C,IAAIkU,UAAYnU,CAAA0O,KAAAtW,YAAA,EAAhB,CACIgc,UAAYnU,CAAAyO,KAAAtW,YAAA,EACZic;SAAAA,CAAWF,SAAAjB,UAAA,CAAoBkB,SAApB,CACf,OAAiB,EAAjB,GAAIC,SAAJ,CACW7d,WAAA,CAAYwJ,CAAAvJ,KAAZ,CAAoBwJ,CAAAxJ,KAApB,CADX,CAIW4d,SARmC,CAclDJ,cAAApZ,UAAAiV,YAAA,CAAsCwE,QAAS,CAAC5F,IAAD,CAAO,CAClD,MAAO,CAACA,IAAAtW,YAAA,EAAAP,QAAA,EAD0C,CAMtDoc,cAAApZ,UAAAmU,oBAAA,CAA8CuF,QAAS,CAACrF,OAAD,CAAUC,OAAV,CAAmB,CACtE,MAAO,CAACD,OAAA9W,YAAA,EAAA6N,OAAA,CAA6BkJ,OAAA/W,YAAA,EAA7B,CAD8D,CAM1E6b,cAAApZ,UAAAyU,QAAA,CAAkCkF,QAAS,EAAG,CAC1C,MAAOlc,UAAAkX,IADmC,CAM9CyE,cAAApZ,UAAAsV,QAAA,CAAkCsE,QAAS,EAAG,CAC1C,MAAO,KAAInc,SAAJ,CAz9DA6H,YAy9DA,CAAwB,IAAIjJ,QAAJ,CAAa,iBAAb,CAAgCwd,UAAhC,CAAxB,CADmC,CAQ9CT;aAAApZ,UAAAwV,SAAA,CAAmCsE,QAAS,CAACpE,UAAD,CAAa9Z,IAAb,CAAmB,CACvDoa,UAAAA,CAAe+D,YAAA,CAAarE,UAAb,CACnB,OAAO,KAAIjY,SAAJ,CAAc7B,IAAd,CAAoB,IAAIS,QAAJ,CAAa,iBAAb,CAAgC2Z,UAAhC,CAApB,CAFoD,CAO/DoD,cAAApZ,UAAAe,SAAA,CAAmCiZ,QAAS,EAAG,CAC3C,MAAO,WADoC,CAG/C,OAAOZ,cA1D0C,CAAlBA,CA2DjCpF,KA3DiCoF,CA4Dd,CA94ErB,CAm6EIa,kBAAmC,QAAS,EAAG,CAS/CA,QAASA,kBAAiB,CAACpG,IAAD,CAAOqG,QAAP,CAAiBC,UAAjB,CAA6BC,UAA7B,CAAyCC,gBAAzC,CAA2D,CACxD,IAAK,EAA9B,GAAIA,gBAAJ,GAAmCA,gBAAnC,CAAsD,IAAtD,CACA,KAAAD,WAAA,CAAkBA,UAClB,KAAAC,iBAAA,CAAwBA,gBAMxB,KAFA,IAAAC,WAEA;AAFkB,EAElB,CAAO,CAACzG,IAAA7W,QAAA,EAAR,CAAA,CAMI,GAJAmO,gBAII,CAJE+O,QAAA,CAAWC,UAAA,CAAWtG,IAAAnX,IAAX,CAAqBwd,QAArB,CAAX,CAA4C,CAI9C,CAFAE,UAEA,GADAjP,gBACA,EADQ,EACR,EAAM,CAAN,CAAAA,gBAAJ,CAGQ0I,IAAA,CADA,IAAAuG,WAAJ,CACWvG,IAAApY,KADX,CAIWoY,IAAAnY,MANf,KASK,IAAY,CAAZ,GAAIyP,gBAAJ,CAAe,CAEhB,IAAAmP,WAAA9c,KAAA,CAAqBqW,IAArB,CACA,MAHgB,CAAf,IAOD,KAAAyG,WAAA9c,KAAA,CAAqBqW,IAArB,CAEI,CAAAA,IAAA,CADA,IAAAuG,WAAJ,CACWvG,IAAAnY,MADX,CAIWmY,IAAApY,KApC8D,CAyCrFwe,iBAAAja,UAAAua,QAAA,CAAsCC,QAAS,EAAG,CAC9C,GAA+B,CAA/B,GAAI,IAAAF,WAAA5c,OAAJ,CACI,MAAO,KACX,KAAImW,KAAO,IAAAyG,WAAApO,IAAA,EAGP,KAAAuO,OADA,IAAAJ,iBAAJ,CACa,IAAAA,iBAAA,CAAsBxG,IAAAnX,IAAtB,CAAgCmX,IAAAtU,MAAhC,CADb;AAGa,CAAE7C,IAAKmX,IAAAnX,IAAP,CAAiB6C,MAAOsU,IAAAtU,MAAxB,CACb,IAAI,IAAA6a,WAAJ,CAEI,IADAvG,IACA,CADOA,IAAApY,KACP,CAAO,CAACoY,IAAA7W,QAAA,EAAR,CAAA,CACI,IAAAsd,WAAA9c,KAAA,CAAqBqW,IAArB,CACA,CAAAA,IAAA,CAAOA,IAAAnY,MAJf,KASI,KADAmY,IACA,CADOA,IAAAnY,MACP,CAAO,CAACmY,IAAA7W,QAAA,EAAR,CAAA,CACI,IAAAsd,WAAA9c,KAAA,CAAqBqW,IAArB,CACA,CAAAA,IAAA,CAAOA,IAAApY,KAGf,OAAOgf,OAvBuC,CAyBlDR,kBAAAja,UAAA0a,QAAA,CAAsCC,QAAS,EAAG,CAC9C,MAAgC,EAAhC,CAAO,IAAAL,WAAA5c,OADuC,CAGlDuc,kBAAAja,UAAA4a,KAAA,CAAmCC,QAAS,EAAG,CAC3C,GAA+B,CAA/B,GAAI,IAAAP,WAAA5c,OAAJ,CACI,MAAO,KACX,KAAImW,KAAO,IAAAyG,WAAA,CAAgB,IAAAA,WAAA5c,OAAhB,CAAyC,CAAzC,CACX,OAAI,KAAA2c,iBAAJ,CACW,IAAAA,iBAAA,CAAsBxG,IAAAnX,IAAtB;AAAgCmX,IAAAtU,MAAhC,CADX,CAIW,CAAE7C,IAAKmX,IAAAnX,IAAP,CAAiB6C,MAAOsU,IAAAtU,MAAxB,CARgC,CAW/C,OAAO0a,kBAzFwC,CAAZ,EAn6EvC,CAigFIa,SAA0B,QAAS,EAAG,CAStCA,QAASA,SAAQ,CAACpe,GAAD,CAAM6C,KAAN,CAAawb,KAAb,CAAoBtf,IAApB,CAA0BC,KAA1B,CAAiC,CAC9C,IAAAgB,IAAA,CAAWA,GACX,KAAA6C,MAAA,CAAaA,KACb,KAAAwb,MAAA,CAAsB,IAAT,EAAAA,KAAA,CAAgBA,KAAhB,CAAwBD,QAAAE,IACrC,KAAAvf,KAAA,CACY,IAAR,EAAAA,IAAA,CAAeA,IAAf,CAAsBwf,SAAA/e,WAC1B,KAAAR,MAAA,CACa,IAAT,EAAAA,KAAA,CAAgBA,KAAhB,CAAwBuf,SAAA/e,WAPkB,CAmBlD4e,QAAA9a,UAAAkb,KAAA,CAA0BC,QAAS,CAACze,GAAD,CAAM6C,KAAN,CAAawb,KAAb,CAAoBtf,IAApB,CAA0BC,KAA1B,CAAiC,CAChE,MAAO,KAAIof,QAAJ,CAAoB,IAAP,EAAApe,GAAA,CAAcA,GAAd,CAAoB,IAAAA,IAAjC,CAAoD,IAAT,EAAA6C,KAAA,CAAgBA,KAAhB,CAAwB,IAAAA,MAAnE,CAAwF,IAAT,EAAAwb,KAAA,CAAgBA,KAAhB,CAAwB,IAAAA,MAAvG,CAA2H,IAAR,EAAAtf,IAAA,CAAeA,IAAf,CAAsB,IAAAA,KAAzI,CAA6J,IAAT;AAAAC,KAAA,CAAgBA,KAAhB,CAAwB,IAAAA,MAA5K,CADyD,CAMpEof,SAAA9a,UAAAob,MAAA,CAA2BC,QAAS,EAAG,CACnC,MAAO,KAAA5f,KAAA2f,MAAA,EAAP,CAA2B,CAA3B,CAA+B,IAAA1f,MAAA0f,MAAA,EADI,CAMvCN,SAAA9a,UAAAhD,QAAA,CAA6Bse,QAAS,EAAG,CACrC,MAAO,CAAA,CAD8B,CAYzCR,SAAA9a,UAAAub,iBAAA,CAAsCC,QAAS,CAAC3D,MAAD,CAAS,CACpD,MAAQ,KAAApc,KAAA8f,iBAAA,CAA2B1D,MAA3B,CAAR,EACIA,MAAA,CAAO,IAAAnb,IAAP,CAAiB,IAAA6C,MAAjB,CADJ,EAEI,IAAA7D,MAAA6f,iBAAA,CAA4B1D,MAA5B,CAHgD,CAaxDiD,SAAA9a,UAAAyb,iBAAA,CAAsCC,QAAS,CAAC7D,MAAD,CAAS,CACpD,MAAQ,KAAAnc,MAAA+f,iBAAA,CAA4B5D,MAA5B,CAAR,EACIA,MAAA,CAAO,IAAAnb,IAAP,CAAiB,IAAA6C,MAAjB,CADJ,EAEI,IAAA9D,KAAAggB,iBAAA,CAA2B5D,MAA3B,CAHgD,CASxDiD,SAAA9a,UAAA2b,KAAA;AAA0BC,QAAS,EAAG,CAClC,MAAI,KAAAngB,KAAAuB,QAAA,EAAJ,CACW,IADX,CAIW,IAAAvB,KAAAkgB,KAAA,EALuB,CAWtCb,SAAA9a,UAAA6b,OAAA,CAA4BC,QAAS,EAAG,CACpC,MAAO,KAAAH,KAAA,EAAAjf,IAD6B,CAMxCoe,SAAA9a,UAAA+b,OAAA,CAA4BC,QAAS,EAAG,CACpC,MAAI,KAAAtgB,MAAAsB,QAAA,EAAJ,CACW,IAAAN,IADX,CAIW,IAAAhB,MAAAqgB,OAAA,EALyB,CAexCjB,SAAA9a,UAAAic,OAAA,CAA4BC,QAAS,CAACxf,GAAD,CAAM6C,KAAN,CAAa4a,UAAb,CAAyB,CAE1D,IAAAgC,EAAI,IACJ,KAAAhR,IAAMgP,UAAA,CAAWzd,GAAX,CAAgByf,CAAAzf,IAAhB,CAEFyf,EAAA,CADM,CAAV,CAAIhR,GAAJ,CACQgR,CAAAjB,KAAA,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyBiB,CAAA1gB,KAAAwgB,OAAA,CAAcvf,GAAd,CAAmB6C,KAAnB,CAA0B4a,UAA1B,CAAzB,CAAgE,IAAhE,CADR,CAGiB,CAAZ,GAAIhP,GAAJ,CACGgR,CAAAjB,KAAA,CAAO,IAAP,CAAa3b,KAAb,CAAoB,IAApB,CAA0B,IAA1B,CAAgC,IAAhC,CADH,CAIG4c,CAAAjB,KAAA,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+BiB,CAAAzgB,MAAAugB,OAAA,CAAevf,GAAf,CAAoB6C,KAApB,CAA2B4a,UAA3B,CAA/B,CAER,OAAOgC,EAAAC,OAAA,EAbmD,CAmB9DtB;QAAA9a,UAAAqc,WAAA,CAAgCC,QAAS,EAAG,CACxC,GAAI,IAAA7gB,KAAAuB,QAAA,EAAJ,CACI,MAAOie,UAAA/e,WAEX,KAAIigB,EAAI,IACHA,EAAA1gB,KAAA8gB,OAAA,EAAL,EAAyBJ,CAAA1gB,KAAAA,KAAA8gB,OAAA,EAAzB,GACIJ,CADJ,CACQA,CAAAK,aAAA,EADR,CAEAL,EAAA,CAAIA,CAAAjB,KAAA,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyBiB,CAAA1gB,KAAA4gB,WAAA,EAAzB,CAA8C,IAA9C,CACJ,OAAOF,EAAAC,OAAA,EARiC,CAe5CtB,SAAA9a,UAAAY,OAAA,CAA4B6b,QAAS,CAAC/f,GAAD,CAAMyd,UAAN,CAAkB,CAEnD,IAAAgC,EAAI,IACJ,IAA6B,CAA7B,CAAIhC,UAAA,CAAWzd,GAAX,CAAgByf,CAAAzf,IAAhB,CAAJ,CACSyf,CAAA1gB,KAAAuB,QAAA,EAGL,EAH0Bmf,CAAA1gB,KAAA8gB,OAAA,EAG1B,EAH8CJ,CAAA1gB,KAAAA,KAAA8gB,OAAA,EAG9C,GAFIJ,CAEJ,CAFQA,CAAAK,aAAA,EAER,EAAAL,CAAA,CAAIA,CAAAjB,KAAA,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyBiB,CAAA1gB,KAAAmF,OAAA,CAAclE,GAAd,CAAmByd,UAAnB,CAAzB,CAAyD,IAAzD,CAJR,KAMK,CACGgC,CAAA1gB,KAAA8gB,OAAA,EAAJ,GACIJ,CADJ,CACQA,CAAAO,aAAA,EADR,CAEKP;CAAAzgB,MAAAsB,QAAA,EAAL,EAA2Bmf,CAAAzgB,MAAA6gB,OAAA,EAA3B,EAAgDJ,CAAAzgB,MAAAD,KAAA8gB,OAAA,EAAhD,GACIJ,CADJ,CACQA,CAAAQ,cAAA,EADR,CAGA,IAA+B,CAA/B,GAAIxC,UAAA,CAAWzd,GAAX,CAAgByf,CAAAzf,IAAhB,CAAJ,CAAkC,CAC9B,GAAIyf,CAAAzgB,MAAAsB,QAAA,EAAJ,CACI,MAAOie,UAAA/e,WAGP,KAAA0gB,SAAWT,CAAAzgB,MAAAigB,KAAA,EACXQ,EAAA,CAAIA,CAAAjB,KAAA,CAAO0B,QAAAlgB,IAAP,CAAqBkgB,QAAArd,MAArB,CAAqC,IAArC,CAA2C,IAA3C,CAAiD4c,CAAAzgB,MAAA2gB,WAAA,EAAjD,CANsB,CASlCF,CAAA,CAAIA,CAAAjB,KAAA,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+BiB,CAAAzgB,MAAAkF,OAAA,CAAelE,GAAf,CAAoByd,UAApB,CAA/B,CAfH,CAiBL,MAAOgC,EAAAC,OAAA,EA1B4C,CAgCvDtB,SAAA9a,UAAAuc,OAAA,CAA4BM,QAAS,EAAG,CACpC,MAAO,KAAA9B,MAD6B,CAOxCD,SAAA9a,UAAAoc,OAAA,CAA4BU,QAAS,EAAG,CACpC,IAAIX,EAAI,IACJA,EAAAzgB,MAAA6gB,OAAA,EAAJ,EAAwB,CAACJ,CAAA1gB,KAAA8gB,OAAA,EAAzB,GACIJ,CADJ,CACQA,CAAAY,YAAA,EADR,CAEIZ,EAAA1gB,KAAA8gB,OAAA,EAAJ;AAAuBJ,CAAA1gB,KAAAA,KAAA8gB,OAAA,EAAvB,GACIJ,CADJ,CACQA,CAAAO,aAAA,EADR,CAEIP,EAAA1gB,KAAA8gB,OAAA,EAAJ,EAAuBJ,CAAAzgB,MAAA6gB,OAAA,EAAvB,GACIJ,CADJ,CACQA,CAAAa,WAAA,EADR,CAEA,OAAOb,EAR6B,CAcxCrB,SAAA9a,UAAAwc,aAAA,CAAkCS,QAAS,EAAG,CAC1C,IAAId,EAAI,IAAAa,WAAA,EACJb,EAAAzgB,MAAAD,KAAA8gB,OAAA,EAAJ,GACIJ,CAEA,CAFIA,CAAAjB,KAAA,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+BiB,CAAAzgB,MAAAghB,aAAA,EAA/B,CAEJ,CADAP,CACA,CADIA,CAAAY,YAAA,EACJ,CAAAZ,CAAA,CAAIA,CAAAa,WAAA,EAHR,CAKA,OAAOb,EAPmC,CAa9CrB,SAAA9a,UAAA2c,cAAA,CAAmCO,QAAS,EAAG,CAC3C,IAAIf,EAAI,IAAAa,WAAA,EACJb,EAAA1gB,KAAAA,KAAA8gB,OAAA,EAAJ,GACIJ,CACA,CADIA,CAAAO,aAAA,EACJ,CAAAP,CAAA,CAAIA,CAAAa,WAAA,EAFR,CAIA,OAAOb,EANoC,CAY/CrB,SAAA9a,UAAA+c,YAAA,CAAiCI,QAAS,EAAG,CACzC,IAAIC,GAAK,IAAAlC,KAAA,CAAU,IAAV,CAAgB,IAAhB;AAAsBJ,QAAAE,IAAtB,CAAoC,IAApC,CAA0C,IAAAtf,MAAAD,KAA1C,CACT,OAAO,KAAAC,MAAAwf,KAAA,CAAgB,IAAhB,CAAsB,IAAtB,CAA4B,IAAAH,MAA5B,CAAwCqC,EAAxC,CAA4C,IAA5C,CAFkC,CAQ7CtC,SAAA9a,UAAA0c,aAAA,CAAkCW,QAAS,EAAG,CAC1C,IAAIC,GAAK,IAAApC,KAAA,CAAU,IAAV,CAAgB,IAAhB,CAAsBJ,QAAAE,IAAtB,CAAoC,IAAAvf,KAAAC,MAApC,CAAqD,IAArD,CACT,OAAO,KAAAD,KAAAyf,KAAA,CAAe,IAAf,CAAqB,IAArB,CAA2B,IAAAH,MAA3B,CAAuC,IAAvC,CAA6CuC,EAA7C,CAFmC,CAQ9CxC,SAAA9a,UAAAgd,WAAA,CAAgCO,QAAS,EAAG,CACxC,IAAI9hB,KAAO,IAAAA,KAAAyf,KAAA,CAAe,IAAf,CAAqB,IAArB,CAA2B,CAAC,IAAAzf,KAAAsf,MAA5B,CAA6C,IAA7C,CAAmD,IAAnD,CAAX,CACIrf,MAAQ,IAAAA,MAAAwf,KAAA,CAAgB,IAAhB,CAAsB,IAAtB,CAA4B,CAAC,IAAAxf,MAAAqf,MAA7B,CAA+C,IAA/C,CAAqD,IAArD,CACZ,OAAO,KAAAG,KAAA,CAAU,IAAV,CAAgB,IAAhB,CAAsB,CAAC,IAAAH,MAAvB,CAAmCtf,IAAnC,CAAyCC,KAAzC,CAHiC,CAW5Cof,SAAA9a,UAAAwd,eAAA,CAAoCC,QAAS,EAAG,CAC5C,IAAIC;AAAa,IAAAC,OAAA,EACjB,OAAO9W,KAAAE,IAAA,CAAS,CAAT,CAAc2W,UAAd,CAAP,EAAoC,IAAAtC,MAAA,EAApC,CAAmD,CAFP,CAQhDN,SAAA9a,UAAA2d,OAAA,CAA4BC,QAAS,EAAG,CAEpC,GAAI,IAAArB,OAAA,EAAJ,EAAqB,IAAA9gB,KAAA8gB,OAAA,EAArB,CACI,KAAUrY,MAAJ,CAAU,yBAAV,CAAsC,IAAAxH,IAAtC,CAAiD,GAAjD,CAAuD,IAAA6C,MAAvD,CAAoE,GAApE,CAAN,CAEJ,GAAI,IAAA7D,MAAA6gB,OAAA,EAAJ,CACI,KAAUrY,MAAJ,CAAU,kBAAV,CAA+B,IAAAxH,IAA/B,CAA0C,GAA1C,CAAgD,IAAA6C,MAAhD,CAA6D,UAA7D,CAAN,CAEJ,IAAAme,WAAa,IAAAjiB,KAAAkiB,OAAA,EACb,IAAID,UAAJ,GAAmB,IAAAhiB,MAAAiiB,OAAA,EAAnB,CACI,KAAUzZ,MAAJ,CAAU,qBAAV,CAAN,CAGA,MAAOwZ,WAAP,EAAqB,IAAAnB,OAAA,EAAA,CAAgB,CAAhB,CAAoB,CAAzC,CAbgC,CAgBxCzB,SAAAE,IAAA,CAAe,CAAA,CACfF,SAAA+C,MAAA,CAAiB,CAAA,CACjB,OAAO/C,SA/Q+B,CAAZ,EAjgF9B,CAqxFIgD;AAA+B,QAAS,EAAG,CAC3CA,QAASA,cAAa,EAAG,EAOzBA,aAAA9d,UAAAkb,KAAA,CAA+B6C,QAAS,CAACrhB,GAAD,CAAM6C,KAAN,CAAawb,KAAb,CAAoBtf,IAApB,CAA0BC,KAA1B,CAAiC,CACrE,MAAO,KAD8D,CAWzEoiB,cAAA9d,UAAAic,OAAA,CAAiC+B,QAAS,CAACthB,GAAD,CAAM6C,KAAN,CAAa4a,UAAb,CAAyB,CAC/D,MAAO,KAAIW,QAAJ,CAAape,GAAb,CAAkB6C,KAAlB,CAAyB,IAAzB,CADwD,CAUnEue,cAAA9d,UAAAY,OAAA,CAAiCqd,QAAS,CAACvhB,GAAD,CAAMyd,UAAN,CAAkB,CACxD,MAAO,KADiD,CAM5D2D,cAAA9d,UAAAob,MAAA,CAAgC8C,QAAS,EAAG,CACxC,MAAO,EADiC,CAM5CJ,cAAA9d,UAAAhD,QAAA,CAAkCmhB,QAAS,EAAG,CAC1C,MAAO,CAAA,CADmC,CAW9CL,cAAA9d,UAAAub,iBAAA,CAA2C6C,QAAS,CAACvG,MAAD,CAAS,CACzD,MAAO,CAAA,CADkD,CAW7DiG,cAAA9d,UAAAyb,iBAAA,CAA2C4C,QAAS,CAACxG,MAAD,CAAS,CACzD,MAAO,CAAA,CADkD,CAM7DiG;aAAA9d,UAAA6b,OAAA,CAAiCyC,QAAS,EAAG,CACzC,MAAO,KADkC,CAM7CR,cAAA9d,UAAA+b,OAAA,CAAiCwC,QAAS,EAAG,CACzC,MAAO,KADkC,CAO7CT,cAAA9d,UAAA2d,OAAA,CAAiCa,QAAS,EAAG,CACzC,MAAO,EADkC,CAO7CV,cAAA9d,UAAAuc,OAAA,CAAiCkC,QAAS,EAAG,CACzC,MAAO,CAAA,CADkC,CAG7C,OAAOX,cA5FoC,CAAZ,EArxFnC,CAu3FI7C,UAA2B,QAAS,EAAG,CAMvCA,QAASA,UAAS,CAACyD,WAAD,CAAcC,KAAd,CAAqB,CACrB,IAAK,EAAnB,GAAIA,KAAJ,GAAwBA,KAAxB,CAAgC1D,SAAA/e,WAAhC,CACA,KAAAwiB,YAAA,CAAmBA,WACnB,KAAAC,MAAA,CAAaA,KAHsB,CAavC1D,SAAAjb,UAAAic,OAAA,CAA6B2C,QAAS,CAACliB,GAAD,CAAM6C,KAAN,CAAa,CAC/C,MAAO,KAAI0b,SAAJ,CAAc,IAAAyD,YAAd,CAAgC,IAAAC,MAAA1C,OAAA,CAC3Bvf,GAD2B,CACtB6C,KADsB;AACf,IAAAmf,YADe,CAAAxD,KAAA,CAE7B,IAF6B,CAEvB,IAFuB,CAEjBJ,QAAA+C,MAFiB,CAED,IAFC,CAEK,IAFL,CAAhC,CADwC,CAWnD5C,UAAAjb,UAAAY,OAAA,CAA6Bie,QAAS,CAACniB,GAAD,CAAM,CACxC,MAAO,KAAIue,SAAJ,CAAc,IAAAyD,YAAd,CAAgC,IAAAC,MAAA/d,OAAA,CAC3BlE,GAD2B,CACtB,IAAAgiB,YADsB,CAAAxD,KAAA,CAE7B,IAF6B,CAEvB,IAFuB,CAEjBJ,QAAA+C,MAFiB,CAED,IAFC,CAEK,IAFL,CAAhC,CADiC,CAY5C5C,UAAAjb,UAAAO,IAAA,CAA0Bue,QAAS,CAACpiB,GAAD,CAAM,CAGrC,IAFA,IAAIyO,GAAJ,CACI0I,KAAO,IAAA8K,MACX,CAAO,CAAC9K,IAAA7W,QAAA,EAAR,CAAA,CAAwB,CACpBmO,GAAA,CAAM,IAAAuT,YAAA,CAAiBhiB,GAAjB,CAAsBmX,IAAAnX,IAAtB,CACN,IAAY,CAAZ,GAAIyO,GAAJ,CACI,MAAO0I,KAAAtU,MAEI,EAAV,CAAI4L,GAAJ,CACD0I,IADC,CACMA,IAAApY,KADN,CAGU,CAHV,CAGI0P,GAHJ,GAID0I,IAJC,CAIMA,IAAAnY,MAJN,CALe,CAYxB,MAAO,KAf8B,CAsBzCuf,UAAAjb,UAAA+e,kBAAA,CAAwCC,QAAS,CAACtiB,GAAD,CAAM,CAEnD,IAFmD,IAC/CyO,GAD+C,CAC1C0I,KAAO,IAAA8K,MADmC;AACvBM,YAAc,IAC1C,CAAO,CAACpL,IAAA7W,QAAA,EAAR,CAAA,CAAwB,CACpBmO,GAAA,CAAM,IAAAuT,YAAA,CAAiBhiB,GAAjB,CAAsBmX,IAAAnX,IAAtB,CACN,IAAY,CAAZ,GAAIyO,GAAJ,CAAe,CACX,GAAK0I,IAAApY,KAAAuB,QAAA,EAAL,CAMK,MAAIiiB,YAAJ,CACMA,WAAAviB,IADN,CAIM,IARP,KADAmX,IACA,CADOA,IAAApY,KACP,CAAO,CAACoY,IAAAnY,MAAAsB,QAAA,EAAR,CAAA,CACI6W,IAAA,CAAOA,IAAAnY,MACX,OAAOmY,KAAAnX,IALA,CAcA,CAAV,CAAIyO,GAAJ,CACD0I,IADC,CACMA,IAAApY,KADN,CAGU,CAHV,CAGI0P,GAHJ,GAID8T,WACA,CADcpL,IACd,CAAAA,IAAA,CAAOA,IAAAnY,MALN,CAhBe,CAwBxB,KAAUwI,MAAJ,CAAU,uEAAV,CAAN,CA1BmD,CA+BvD+W,UAAAjb,UAAAhD,QAAA,CAA8BkiB,QAAS,EAAG,CACtC,MAAO,KAAAP,MAAA3hB,QAAA,EAD+B,CAM1Cie,UAAAjb,UAAAob,MAAA,CAA4B+D,QAAS,EAAG,CACpC,MAAO,KAAAR,MAAAvD,MAAA,EAD6B,CAMxCH;SAAAjb,UAAA6b,OAAA,CAA6BuD,QAAS,EAAG,CACrC,MAAO,KAAAT,MAAA9C,OAAA,EAD8B,CAMzCZ,UAAAjb,UAAA+b,OAAA,CAA6BsD,QAAS,EAAG,CACrC,MAAO,KAAAV,MAAA5C,OAAA,EAD8B,CAYzCd,UAAAjb,UAAAub,iBAAA,CAAuC+D,QAAS,CAACzH,MAAD,CAAS,CACrD,MAAO,KAAA8G,MAAApD,iBAAA,CAA4B1D,MAA5B,CAD8C,CAWzDoD,UAAAjb,UAAAyb,iBAAA,CAAuC8D,QAAS,CAAC1H,MAAD,CAAS,CACrD,MAAO,KAAA8G,MAAAlD,iBAAA,CAA4B5D,MAA5B,CAD8C,CASzDoD,UAAAjb,UAAAwf,YAAA,CAAkCC,QAAS,CAACC,eAAD,CAAkB,CACzD,MAAO,KAAIzF,iBAAJ,CAAsB,IAAA0E,MAAtB,CAAkC,IAAlC,CAAwC,IAAAD,YAAxC,CAA0D,CAAA,CAA1D,CAAiEgB,eAAjE,CADkD,CAG7DzE,UAAAjb,UAAA2f,gBAAA;AAAsCC,QAAS,CAACljB,GAAD,CAAMgjB,eAAN,CAAuB,CAClE,MAAO,KAAIzF,iBAAJ,CAAsB,IAAA0E,MAAtB,CAAkCjiB,GAAlC,CAAuC,IAAAgiB,YAAvC,CAAyD,CAAA,CAAzD,CAAgEgB,eAAhE,CAD2D,CAGtEzE,UAAAjb,UAAA6f,uBAAA,CAA6CC,QAAS,CAACpjB,GAAD,CAAMgjB,eAAN,CAAuB,CACzE,MAAO,KAAIzF,iBAAJ,CAAsB,IAAA0E,MAAtB,CAAkCjiB,GAAlC,CAAuC,IAAAgiB,YAAvC,CAAyD,CAAA,CAAzD,CAA+DgB,eAA/D,CADkE,CAG7EzE,UAAAjb,UAAA+f,mBAAA,CAAyCC,QAAS,CAACN,eAAD,CAAkB,CAChE,MAAO,KAAIzF,iBAAJ,CAAsB,IAAA0E,MAAtB,CAAkC,IAAlC,CAAwC,IAAAD,YAAxC,CAA0D,CAAA,CAA1D,CAAgEgB,eAAhE,CADyD,CAOpEzE,UAAA/e,WAAA,CAAuB,IAAI4hB,aAC3B,OAAO7C,UAlKgC,CAAZ,EAv3F/B,CA4iGIgF,MAAQpZ,IAAAlD,IAAA,CAAS,CAAT,CA5iGZ,CAgjGIuc;AAA2B,QAAS,EAAG,CAIvCA,QAASA,UAAS,CAACxiB,MAAD,CAAS,CAKvB,IAAA0d,MAAA,CAHWvT,QAAA,CAAUhB,IAAAlD,IAAA,CAGCjG,MAHD,CAGU,CAHV,CAAV,CAA0BuiB,KAA1B,CAAkC,EAAlC,CAIX,KAAAE,SAAA,CAAgB,IAAA/E,MAAhB,CAA6B,CAC7B,KAAIgF,KAHmCvY,QAAA,CAASvL,KAAA,CAG7B,IAAA8e,MAH6B,CAAa,CAAb,CAAA1T,KAAA,CAAqB,GAArB,CAAT,CAAoC,CAApC,CAIvC,KAAA2Y,MAAA,CAAc3iB,MAAd,CAAuB,CAAvB,CAA4B0iB,IARL,CAa3BF,SAAAlgB,UAAAsgB,aAAA,CAAmCC,QAAS,EAAG,CAE3C,IAAI9F,OAAS,EAAE,IAAA4F,MAAF,CAAgB,CAAhB,EAAuB,IAAAF,SAAvB,CACb,KAAAA,SAAA,EACA,OAAO1F,OAJoC,CAM/C,OAAOyF,UAvBgC,CAAZ,EAhjG/B,CAwlGItiB,cAAgBA,QAAS,CAAC4iB,SAAD,CAAYrV,GAAZ,CAAiBsV,KAAjB,CAAwBC,SAAxB,CAAmC,CAC5DF,SAAAxa,KAAA,CAAemF,GAAf,CACA,KAAIwV,kBAAoBA,QAAS,CAACC,GAAD,CAAMC,IAAN,CAAY,CACzC,IAAInjB,OAASmjB,IAATnjB,CAAgBkjB,GAGpB,IAAc,CAAd,EAAIljB,MAAJ,CACI,MAAO,KAEN,IAAc,CAAd,EAAIA,MAAJ,CAAiB,CAClBG,MAAA;AAAY2iB,SAAA,CAAUI,GAAV,CACZ,KAAAlkB,IAAM+jB,KAAA,CAAQA,KAAA,CAAM5iB,MAAN,CAAR,CAA2BA,MACjC,OAAO,KAAIid,QAAJ,CAAape,GAAb,CAAkBmB,MAAAgW,KAAlB,CAAkCiH,QAAA+C,MAAlC,CAAkD,IAAlD,CAAwD,IAAxD,CAHW,CAMdiD,MAAAA,CAASjZ,QAAA,CAAUnK,MAAV,CAAmB,CAAnB,CAAuB,EAAvB,CAATojB,CAAsCF,GACtCnlB,IAAAA,CAAOklB,iBAAA,CAAkBC,GAAlB,CAAuBE,MAAvB,CACPplB,KAAAA,CAAQilB,iBAAA,CAAkBG,MAAlB,CAA2B,CAA3B,CAA8BD,IAA9B,CACZhjB,OAAA,CAAY2iB,SAAA,CAAUM,MAAV,CACZpkB,IAAA,CAAM+jB,KAAA,CAAQA,KAAA,CAAM5iB,MAAN,CAAR,CAA2BA,MACjC,OAAO,KAAIid,QAAJ,CAAape,GAAb,CAAkBmB,MAAAgW,KAAlB,CAAkCiH,QAAA+C,MAAlC,CAAkDpiB,GAAlD,CAAwDC,IAAxD,CAlB8B,CAA7C,CA4DIqlB,cAvCmBC,QAAS,CAACC,MAAD,CAAS,CAuBrC,IAtBA,IAAIpN,KAAO,IAAX,CACIkN,KAAO,IADX,CAEInJ,MAAQ4I,SAAA9iB,OAFZ,CAGIwjB,aAAeA,QAAS,CAACC,SAAD,CAAYpG,KAAZ,CAAmB,CAC3C,IAAI6F,IAAMhJ,KAANgJ,CAAcO,SAAlB,CACIN,KAAOjJ,KACXA,MAAA,EAASuJ,SACLC;SAAAA,CAAYT,iBAAA,CAAkBC,GAAlB,CAAwB,CAAxB,CAA2BC,IAA3B,CACZhjB,IAAAA,CAAY2iB,SAAA,CAAUI,GAAV,CACZlkB,KAAAA,CAAM+jB,KAAA,CAAQA,KAAA,CAAM5iB,GAAN,CAAR,CAA2BA,GACvB,MAAA,CAAA,IAAIid,QAAJ,CAAape,IAAb,CAAkBmB,GAAAgW,KAAlB,CAAkCkH,KAAlC,CAAyC,IAAzC,CAA+CqG,SAA/C,CAGVvN,KAAJ,CACIA,IAAApY,KADJ,CACgB4lB,KADhB,CAKIN,IALJ,CAKWM,KAHPxN,KAAA,CAAOwN,KAZgC,CAH/C,CAsBSpe,EAAI,CAAb,CAAgBA,CAAhB,CAAoBge,MAAA7F,MAApB,CAAkC,EAAEnY,CAApC,CAAuC,CACnC,IAAIqe,MAAQL,MAAAX,aAAA,EAAZ,CAEIa,UAAYta,IAAAE,IAAA,CAAS,CAAT,CAAYka,MAAA7F,MAAZ,EAA4BnY,CAA5B,CAAgC,CAAhC,EACZqe,MAAJ,CACIJ,YAAA,CAAaC,SAAb,CAAwBrG,QAAA+C,MAAxB,CADJ,EAKIqD,YAAA,CAAaC,SAAb,CAAwBrG,QAAA+C,MAAxB,CACA,CAAAqD,YAAA,CAAaC,SAAb,CAAwBrG,QAAAE,IAAxB,CANJ,CAJmC,CAavC,MAAO+F,KApC8B,CAuC9B,CADEE,IAAIf,SAAJe,CAAcT,SAAA9iB,OAAdujB,CACF,CACX,OAAO,KAAIhG,SAAJ,CAAcyF,SAAd,EAA2BvV,GAA3B,CAAgC4V,aAAhC,CA/DqD,CAxlGhE;AA0qGIQ,gBA1qGJ,CA2qGIC,eAAiB,EA3qGrB,CAkrGIvjB,SAA0B,QAAS,EAAG,CACtCA,QAASA,SAAQ,CAACwjB,QAAD,CAAWC,SAAX,CAAsB,CACnC,IAAAD,SAAA,CAAgBA,QAChB,KAAAC,UAAA,CAAiBA,SAFkB,CAIvCriB,MAAAC,eAAA,CAAsBrB,QAAtB,CAAgC,SAAhC,CAA2C,CAMvCsC,IAAKA,QAAS,EAAG,CACbpE,IAAAC,OAAA,CAAYolB,cAAZ,EAA8BzjB,cAA9B,CAA8C,qCAA9C,CAIA,OAHAwjB,iBAGA,CAFIA,gBAEJ,EADQ,IAAItjB,QAAJ,CAAa,CAAE,YAAaujB,cAAf,CAAb,CAA8C,CAAE,YAAazjB,cAAf,CAA9C,CAJK,CANsB,CAavCgL,WAAY,CAAA,CAb2B,CAcvCC,aAAc,CAAA,CAdyB,CAA3C,CAqBA/K,SAAA+B,UAAAO,IAAA,CAAyBohB,QAAS,CAACC,QAAD,CAAW,CACzC,IAAIC,UAAY1lB,IAAA2lB,QAAA,CAAa,IAAAL,SAAb;AAA4BG,QAA5B,CAChB,IAAI,CAACC,SAAL,CACI,KAAU3d,MAAJ,CAAU,uBAAV,CAAoC0d,QAApC,CAAN,CACJ,MAAIC,UAAJ,GAAkBL,cAAlB,CAGW,IAHX,CAMWK,SAV8B,CAiB7C5jB,SAAA+B,UAAA+hB,SAAA,CAA8BC,QAAS,CAACC,eAAD,CAAkB,CACrD,MAAO9lB,KAAAS,SAAA,CAAc,IAAA8kB,UAAd,CAA8BO,eAAAlhB,SAAA,EAA9B,CAD8C,CAQzD9C,SAAA+B,UAAAkiB,SAAA,CAA8BC,QAAS,CAACF,eAAD,CAAkBG,gBAAlB,CAAoC,CACvEjmB,IAAAC,OAAA,CAAY6lB,eAAZ,GAAgCrM,SAAhC,CAA2C,qEAA3C,CACA,KAAI4K,UAAY,EAAhB,CACI6B,gBAAkB,CAAA,CAClBC,iBAAAA,CAAOF,gBAAA5C,YAAA,CAA6B/hB,SAAAqW,KAA7B,CAEX;IADA,IAAIyO,KAAOD,gBAAA/H,QAAA,EACX,CAAOgI,IAAP,CAAA,CACIF,eAGA,CAFIA,eAEJ,EAFuBJ,eAAAhN,YAAA,CAA4BsN,IAAA1O,KAA5B,CAEvB,CADA2M,SAAAhjB,KAAA,CAAe+kB,IAAf,CACA,CAAAA,IAAA,CAAOD,gBAAA/H,QAAA,EAIPiI,UAAA,CADAH,eAAJ,CACezkB,aAAA,CAAc4iB,SAAd,CAAyByB,eAAAjkB,WAAA,EAAzB,CADf,CAIewjB,cAEXiB,gBAAAA,CAAYR,eAAAlhB,SAAA,EACZ2hB,iBAAAA,CAAcvmB,IAAAwmB,MAAA,CAAW,IAAAjB,UAAX,CAClBgB,iBAAA,CAAYD,eAAZ,CAAA,CAAyBR,eACrBW,gBAAAA,CAAazmB,IAAAwmB,MAAA,CAAW,IAAAlB,SAAX,CACjBmB,gBAAA,CAAWH,eAAX,CAAA,CAAwBD,SACxB,OAAO,KAAIvkB,QAAJ,CAAa2kB,eAAb;AAAyBF,gBAAzB,CAxBgE,CAgC3EzkB,SAAA+B,UAAA6iB,aAAA,CAAkCC,QAAS,CAACjlB,SAAD,CAAYukB,gBAAZ,CAA8B,CACrE,IAAIW,MAAQ,IAAZ,CACIH,WAAazmB,IAAA6mB,IAAA,CAAS,IAAAvB,SAAT,CAAwB,QAAS,CAACwB,eAAD,CAAkBR,SAAlB,CAA6B,CAC3E,IAAI7K,MAAQzb,IAAA2lB,QAAA,CAAaiB,KAAArB,UAAb,CAA8Be,SAA9B,CACZtmB,KAAAC,OAAA,CAAYwb,KAAZ,CAAmB,mCAAnB,CAAyD6K,SAAzD,CACA,IAAIQ,eAAJ,GAAwBzB,cAAxB,CAAwC,CAEpC,GAAI5J,KAAA3C,YAAA,CAAkBpX,SAAAgW,KAAlB,CAAJ,CAAuC,CAE/B2M,eAAAA,CAAY,EACZ8B,UAAAA,CAAOF,gBAAA5C,YAAA,CAA6B/hB,SAAAqW,KAA7B,CAEX,KADA,IAAIyO,KAAOD,SAAA/H,QAAA,EACX,CAAOgI,IAAP,CAAA,CACQA,IAAA3mB,KAGJ,EAHiBiC,SAAAjC,KAGjB;AAFI4kB,eAAAhjB,KAAA,CAAe+kB,IAAf,CAEJ,CAAAA,IAAA,CAAOD,SAAA/H,QAAA,EAEXiG,gBAAAhjB,KAAA,CAAeK,SAAf,CACA,OAAOD,cAAA,CAAc4iB,eAAd,CAAyB5I,KAAA5Z,WAAA,EAAzB,CAZ4B,CAgBnC,MAAOwjB,eAlByB,CAwBpC,CAFI0B,KAEJ,CAFmBd,gBAAA7hB,IAAA,CAAqB1C,SAAAjC,KAArB,CAEnB,IACIunB,eADJ,CACkBA,eAAAviB,OAAA,CAAmB,IAAInD,SAAJ,CAAcI,SAAAjC,KAAd,CAA8BsnB,KAA9B,CAAnB,CADlB,CAGA,OAAOC,gBAAAlH,OAAA,CAAmBpe,SAAnB,CAA8BA,SAAAgW,KAA9B,CA9BgE,CAA9D,CAiCjB,OAAO,KAAI5V,QAAJ,CAAa2kB,UAAb,CAAyB,IAAAlB,UAAzB,CAnC8D,CA2CzEzjB,SAAA+B,UAAAojB,kBAAA,CAAuCC,QAAS,CAACxlB,SAAD,CAAYukB,gBAAZ,CAA8B,CAC1E,IAAIQ,WAAazmB,IAAA6mB,IAAA,CAAS,IAAAvB,SAAT;AAAwB,QAAS,CAACwB,eAAD,CAAkB,CAChE,GAAIA,eAAJ,GAAwBzB,cAAxB,CAEI,MAAOyB,gBAGP,KAAIC,aAAed,gBAAA7hB,IAAA,CAAqB1C,SAAAjC,KAArB,CACnB,OAAIsnB,aAAJ,CACWD,eAAAriB,OAAA,CAAuB,IAAInD,SAAJ,CAAcI,SAAAjC,KAAd,CAA8BsnB,YAA9B,CAAvB,CADX,CAKWD,eAZiD,CAAnD,CAgBjB,OAAO,KAAIhlB,QAAJ,CAAa2kB,UAAb,CAAyB,IAAAlB,UAAzB,CAjBmE,CAmB9E,OAAOzjB,SAjJ+B,CAAZ,EAlrG9B,CA82GI/B,UA92GJ,CAu3GID,aAA8B,QAAS,EAAG,CAQ1CA,QAASA,aAAY,CAACqnB,SAAD,CAAYnN,aAAZ,CAA2BoN,SAA3B,CAAsC,CACvD,IAAAD,UAAA,CAAiBA,SACjB,KAAAnN,cAAA,CAAqBA,aACrB,KAAAoN,UAAA,CAAiBA,SACjB,KAAAnN,UAAA;AAAiB,IAMb,KAAAD,cAAJ,EACIJ,oBAAA,CAAqB,IAAAI,cAArB,CAEA,KAAAmN,UAAAtmB,QAAA,EAAJ,EACIb,IAAAC,OAAA,CAAY,CAAC,IAAA+Z,cAAb,EAAmC,IAAAA,cAAAnZ,QAAA,EAAnC,CAAiE,sCAAjE,CAdmD,CAiB3DqC,MAAAC,eAAA,CAAsBrD,YAAtB,CAAoC,YAApC,CAAkD,CAC9CsE,IAAKA,QAAS,EAAG,CACb,MAAQrE,WAAR,GACKA,UADL,CACkB,IAAID,YAAJ,CAAiB,IAAIgf,SAAJ,CAAcpf,eAAd,CAAjB,CAAiD,IAAjD,CAAuDoC,QAAAC,QAAvD,CADlB,CADa,CAD6B,CAK9C6K,WAAY,CAAA,CALkC,CAM9CC,aAAc,CAAA,CANgC,CAAlD,CASA/M,aAAA+D,UAAAjD,WAAA,CAAoCymB,QAAS,EAAG,CAC5C,MAAO,CAAA,CADqC,CAIhDvnB,aAAA+D,UAAAzC,YAAA,CAAqCkmB,QAAS,EAAG,CAC7C,MAAO,KAAAtN,cAAP;AAA6Bja,UADgB,CAIjDD,aAAA+D,UAAA9C,eAAA,CAAwCwmB,QAAS,CAAClN,eAAD,CAAkB,CAC/D,MAAI,KAAA8M,UAAAtmB,QAAA,EAAJ,CAEW,IAFX,CAKW,IAAIf,YAAJ,CAAiB,IAAAqnB,UAAjB,CAAiC9M,eAAjC,CAAkD,IAAA+M,UAAlD,CANoD,CAUnEtnB,aAAA+D,UAAAyW,kBAAA,CAA2CkN,QAAS,CAAChN,SAAD,CAAY,CAE5D,GAAkB,WAAlB,GAAIA,SAAJ,CACI,MAAO,KAAApZ,YAAA,EAGHD,UAAAA,CAAQ,IAAAgmB,UAAA/iB,IAAA,CAAmBoW,SAAnB,CACZ,OAAiB,KAAV,GAAArZ,SAAA,CAAiBpB,UAAjB,CAA8BoB,SAPmB,CAWhErB,aAAA+D,UAAA4W,SAAA,CAAkCgN,QAAS,CAAClY,IAAD,CAAO,CAC9C,IAAI4L,MAAQ5L,IAAAzC,SAAA,EACZ,OAAc,KAAd,GAAIqO,KAAJ,CACW,IADX,CAEO,IAAAb,kBAAA,CAAuBa,KAAvB,CAAAV,SAAA,CAAuClL,IAAArC,SAAA,EAAvC,CAJuC,CAOlDpN;YAAA+D,UAAA8W,SAAA,CAAkC+M,QAAS,CAAClN,SAAD,CAAY,CACnD,MAAyC,KAAzC,GAAO,IAAA2M,UAAA/iB,IAAA,CAAmBoW,SAAnB,CAD4C,CAIvD1a,aAAA+D,UAAA/C,qBAAA,CAA8C6mB,QAAS,CAACnN,SAAD,CAAYQ,YAAZ,CAA0B,CAC7Ehb,IAAAC,OAAA,CAAY+a,YAAZ,CAA0B,4CAA1B,CACA,IAAkB,WAAlB,GAAIR,SAAJ,CACI,MAAO,KAAAzZ,eAAA,CAAoBia,YAApB,CAGP,KAAItZ,UAAY,IAAIJ,SAAJ,CAAckZ,SAAd,CAAyBQ,YAAzB,CAEZA,aAAAna,QAAA,EAAJ,EACImmB,SACA,CADc,IAAAG,UAAA1iB,OAAA,CAAsB+V,SAAtB,CACd,CAAAoN,SAAA,CAAc,IAAAR,UAAAH,kBAAA,CAAiCvlB,SAAjC,CAA4C,IAAAylB,UAA5C,CAFlB;CAKIH,SACA,CADc,IAAAG,UAAArH,OAAA,CAAsBtF,SAAtB,CAAiCQ,YAAjC,CACd,CAAA4M,SAAA,CAAc,IAAAR,UAAAV,aAAA,CAA4BhlB,SAA5B,CAAuC,IAAAylB,UAAvC,CANlB,CAQAU,aAAA,CAAcb,SAAAnmB,QAAA,EAAA,CAAwBd,UAAxB,CAAqC,IAAAia,cACnD,OAAO,KAAIla,YAAJ,CAAiBknB,SAAjB,CAA8Ba,YAA9B,CAA2CD,SAA3C,CAjBkE,CAqBjF9nB,aAAA+D,UAAAoX,YAAA,CAAqC6M,QAAS,CAACvY,IAAD,CAAOyL,YAAP,CAAqB,CAC/D,IAAIG,MAAQ5L,IAAAzC,SAAA,EACZ,IAAc,IAAd,GAAIqO,KAAJ,CACI,MAAOH,aAGPhb,KAAAC,OAAA,CAAgC,WAAhC,GAAYsP,IAAAzC,SAAA,EAAZ,EAAoE,CAApE,GAA+CyC,IAAAvC,UAAA,EAA/C,CAAuE,4CAAvE,CACI+a,KAAAA,CAAoB,IAAAzN,kBAAA,CAAuBa,KAAvB,CAAAF,YAAA,CAA0C1L,IAAArC,SAAA,EAA1C;AAA2D8N,YAA3D,CACxB,OAAO,KAAAla,qBAAA,CAA0Bqa,KAA1B,CAAiC4M,IAAjC,CARoD,CAYnEjoB,aAAA+D,UAAAhD,QAAA,CAAiCmnB,QAAS,EAAG,CACzC,MAAO,KAAAb,UAAAtmB,QAAA,EADkC,CAI7Cf,aAAA+D,UAAAwX,YAAA,CAAqC4M,QAAS,EAAG,CAC7C,MAAO,KAAAd,UAAAlI,MAAA,EADsC,CAIjDnf,aAAA+D,UAAAuG,IAAA,CAA6B8d,QAAS,CAACtM,YAAD,CAAe,CACjD,GAAI,IAAA/a,QAAA,EAAJ,CACI,MAAO,KACX,KAAI4I,IAAM,EAAV,CACI0e,QAAU,CADd,CACiBvI,OAAS,CAD1B,CAC6BwI,eAAiB,CAAA,CAC9C,KAAA7M,aAAA,CAAkB3Z,cAAlB,CAAkC,QAAS,CAACrB,GAAD,CAAMI,SAAN,CAAiB,CACxD8I,GAAA,CAAIlJ,GAAJ,CAAA,CAAWI,SAAAyJ,IAAA,CAAcwR,YAAd,CACXuM,QAAA,EACIC,eAAJ,EAAsBtoB,YAAA+L,gBAAAC,KAAA,CAAkCvL,GAAlC,CAAtB,CACIqf,MADJ;AACalV,IAAAiF,IAAA,CAASiQ,MAAT,CAAiBzX,MAAA,CAAO5H,GAAP,CAAjB,CADb,CAII6nB,cAJJ,CAIqB,CAAA,CAPmC,CAA5D,CAUA,IAAI,CAACxM,YAAL,EAAqBwM,cAArB,EAAuCxI,MAAvC,CAAgD,CAAhD,CAAoDuI,OAApD,CAA6D,CAEzD,IAAIE,MAAQ,EAAZ,CACS9nB,YAAT,KAASA,YAAT,GAAgBkJ,IAAhB,CACI4e,KAAA,CAAM9nB,YAAN,CAAA,CAAakJ,GAAA,CAAIlJ,YAAJ,CACjB,OAAO8nB,MALkD,CAQrDzM,YAAJ,EAAoB,CAAC,IAAAxa,YAAA,EAAAP,QAAA,EAArB,GACI4I,GAAA,CAAI,WAAJ,CADJ,CACuB,IAAArI,YAAA,EAAAgJ,IAAA,EADvB,CAGA,OAAOX,IA1BsC,CA8BrD3J,aAAA+D,UAAAiY,KAAA,CAA8BwM,QAAS,EAAG,CACtC,GAAuB,IAAvB,GAAI,IAAArO,UAAJ,CAA6B,CACzB,IAAIsO,SAAW,EACV,KAAAnnB,YAAA,EAAAP,QAAA,EAAL,GACI0nB,QADJ,EAEQ,WAFR,CAGY5O,gBAAA,CAAiB,IAAAvY,YAAA,EAAAgJ,IAAA,EAAjB,CAHZ,CAIY,GAJZ,CAKA,KAAAmR,aAAA,CAAkB3Z,cAAlB;AAAkC,QAAS,CAACrB,GAAD,CAAMI,SAAN,CAAiB,CACpD6nB,SAAAA,CAAY7nB,SAAAmb,KAAA,EACE,GAAlB,GAAI0M,SAAJ,GACID,QADJ,EACgB,GADhB,CACsBhoB,GADtB,CAC4B,GAD5B,CACkCioB,SADlC,CAFwD,CAA5D,CAKA,KAAAvO,UAAA,CAA8B,EAAb,GAAAsO,QAAA,CAAkB,EAAlB,CAAuBxiB,IAAA,CAAKwiB,QAAL,CAZf,CAc7B,MAAO,KAAAtO,UAf+B,CAkB1Cna,aAAA+D,UAAAgX,wBAAA,CAAiD4N,QAAS,CAACjO,SAAD,CAAY7Z,SAAZ,CAAuB8a,KAAvB,CAA8B,CAEpF,MAAA,CADIiN,KACJ,CADU,IAAAC,cAAA,CAAmBlN,KAAnB,CACV,EAEW,CADHmN,SACG,CADWF,KAAA9F,kBAAA,CAAsB,IAAIthB,SAAJ,CAAckZ,SAAd,CAAyB7Z,SAAzB,CAAtB,CACX,EAAcioB,SAAAnpB,KAAd,CAAiC,IAF5C,CAKW,IAAA0nB,UAAAvE,kBAAA,CAAiCpI,SAAjC,CAPyE,CAcxF1a,aAAA+D,UAAAglB,kBAAA,CAA2CC,QAAS,CAAChD,eAAD,CAAkB,CAElE,MAAA,CADI4C,eACJ;AADU,IAAAC,cAAA,CAAmB7C,eAAnB,CACV,GACQpG,eADR,CACiBgJ,eAAAhJ,OAAA,EADjB,GAEqBA,eAAAjgB,KAFrB,CAKW,IAAA0nB,UAAAzH,OAAA,EAPuD,CActE5f,aAAA+D,UAAAklB,cAAA,CAAuCC,QAAS,CAAClD,eAAD,CAAkB,CAE9D,MAAA,CADIpG,eACJ,CADa,IAAAmJ,kBAAA,CAAuB/C,eAAvB,CACb,EACW,IAAIxkB,SAAJ,CAAcoe,eAAd,CAAsB,IAAAyH,UAAA/iB,IAAA,CAAmBsb,eAAnB,CAAtB,CADX,CAIW,IANmD,CAclE5f,aAAA+D,UAAAolB,iBAAA,CAA0CC,QAAS,CAACpD,eAAD,CAAkB,CAEjE,MAAA,CADI4C,eACJ,CADU,IAAAC,cAAA,CAAmB7C,eAAnB,CACV,GACQlG,eADR,CACiB8I,eAAA9I,OAAA,EADjB,GAEqBA,eAAAngB,KAFrB;AAKW,IAAA0nB,UAAAvH,OAAA,EAPsD,CAcrE9f,aAAA+D,UAAAslB,aAAA,CAAsCC,QAAS,CAACtD,eAAD,CAAkB,CAE7D,MAAA,CADIlG,eACJ,CADa,IAAAqJ,iBAAA,CAAsBnD,eAAtB,CACb,EACW,IAAIxkB,SAAJ,CAAcse,eAAd,CAAsB,IAAAuH,UAAA/iB,IAAA,CAAmBwb,eAAnB,CAAtB,CADX,CAIW,IANkD,CAYjE9f,aAAA+D,UAAA0X,aAAA,CAAsC8N,QAAS,CAAC5N,KAAD,CAAQC,MAAR,CAAgB,CAE3D,MAAA,CADIgN,KACJ,CADU,IAAAC,cAAA,CAAmBlN,KAAnB,CACV,EACWiN,KAAAtJ,iBAAA,CAAqB,QAAS,CAACkK,WAAD,CAAc,CAC/C,MAAO5N,OAAA,CAAO4N,WAAA7pB,KAAP,CAAyB6pB,WAAA5R,KAAzB,CADwC,CAA5C,CADX,CAMW,IAAAyP,UAAA/H,iBAAA,CAAgC1D,MAAhC,CARgD,CAe/D5b,aAAA+D,UAAAwf,YAAA,CAAqCkG,QAAS,CAACzD,eAAD,CAAkB,CAC5D,MAAO,KAAAtC,gBAAA,CAAqBsC,eAAAxN,QAAA,EAArB;AAAgDwN,eAAhD,CADqD,CAShEhmB,aAAA+D,UAAA2f,gBAAA,CAAyCgG,QAAS,CAACC,SAAD,CAAY3D,eAAZ,CAA6B,CAC3E,IAAI4C,IAAM,IAAAC,cAAA,CAAmB7C,eAAnB,CACV,IAAI4C,GAAJ,CACI,MAAOA,IAAAlF,gBAAA,CAAoBiG,SAApB,CAA+B,QAAS,CAAClpB,GAAD,CAAM,CAAE,MAAOA,IAAT,CAA9C,CAGHmpB,IAAAA,CAAW,IAAAvC,UAAA3D,gBAAA,CAA+BiG,SAAAhqB,KAA/B,CAA+C6B,SAAAqW,KAA/C,CAEf,KADA,IAAIyO,KAAOsD,GAAAjL,KAAA,EACX,CAAe,IAAf,EAAO2H,IAAP,EAAkE,CAAlE,CAAuBN,eAAA/N,QAAA,CAAwBqO,IAAxB,CAA8BqD,SAA9B,CAAvB,CAAA,CACIC,GAAAtL,QAAA,EACA,CAAAgI,IAAA,CAAOsD,GAAAjL,KAAA,EAEX,OAAOiL,IAZgE,CAmB/E5pB,aAAA+D,UAAA+f,mBAAA,CAA4C+F,QAAS,CAAC7D,eAAD,CAAkB,CACnE,MAAO,KAAApC,uBAAA,CAA4BoC,eAAA3M,QAAA,EAA5B;AAAuD2M,eAAvD,CAD4D,CAQvEhmB,aAAA+D,UAAA6f,uBAAA,CAAgDkG,QAAS,CAACC,OAAD,CAAU/D,eAAV,CAA2B,CAChF,IAAI4C,IAAM,IAAAC,cAAA,CAAmB7C,eAAnB,CACV,IAAI4C,GAAJ,CACI,MAAOA,IAAAhF,uBAAA,CAA2BmG,OAA3B,CAAoC,QAAS,CAACtpB,GAAD,CAAM,CACtD,MAAOA,IAD+C,CAAnD,CAKHmpB,IAAAA,CAAW,IAAAvC,UAAAzD,uBAAA,CAAsCmG,OAAApqB,KAAtC,CAAoD6B,SAAAqW,KAApD,CAEf,KADA,IAAIyO,KAAOsD,GAAAjL,KAAA,EACX,CAAe,IAAf,EAAO2H,IAAP,EAAgE,CAAhE,CAAuBN,eAAA/N,QAAA,CAAwBqO,IAAxB,CAA8ByD,OAA9B,CAAvB,CAAA,CACIH,GAAAtL,QAAA,EACA,CAAAgI,IAAA,CAAOsD,GAAAjL,KAAA,EAEX,OAAOiL,IAdqE,CAoBpF5pB,aAAA+D,UAAAqY,UAAA,CAAmC4N,QAAS,CAAC3a,KAAD,CAAQ,CAChD,MAAI,KAAAtO,QAAA,EAAJ,CACQsO,KAAAtO,QAAA,EAAJ,CACW,CADX,CAIY,EALhB,CAQSsO,KAAAvO,WAAA,EAAJ;AAA0BuO,KAAAtO,QAAA,EAA1B,CACM,CADN,CAGIsO,KAAJ,GAAc4a,UAAd,CACO,EADP,CAKM,CAjBqC,CAuBpDjqB,aAAA+D,UAAA+Y,UAAA,CAAmCoN,QAAS,CAAClE,eAAD,CAAkB,CAC1D,GAAIA,eAAJ,GAAwBrM,SAAxB,EACI,IAAA2N,UAAAxB,SAAA,CAAwBE,eAAxB,CADJ,CAEI,MAAO,KAGH8B,gBAAAA,CAAc,IAAAR,UAAArB,SAAA,CAAwBD,eAAxB,CAAyC,IAAAqB,UAAzC,CAClB,OAAO,KAAIrnB,YAAJ,CAAiB,IAAAqnB,UAAjB,CAAiC,IAAAnN,cAAjC,CAAqD4N,eAArD,CAP+C,CAa9D9nB,aAAA+D,UAAAiZ,UAAA,CAAmCmN,QAAS,CAACxO,KAAD,CAAQ,CAChD,MAAOA,MAAP,GAAiBhC,SAAjB,EAA8B,IAAA2N,UAAAxB,SAAA,CAAwBnK,KAAxB,CADkB,CAMpD3b,aAAA+D,UAAAoL,OAAA,CAAgCib,QAAS,CAAC/a,KAAD,CAAQ,CAC7C,GAAIA,KAAJ,GAAc,IAAd,CACI,MAAO,CAAA,CAEN;GAAIA,KAAAvO,WAAA,EAAJ,CACD,MAAO,CAAA,CAIP,IAAK,IAAAQ,YAAA,EAAA6N,OAAA,CADmBE,KACO/N,YAAA,EAA1B,CAAL,EAGS,IAAA+lB,UAAAlI,MAAA,EAHT,GADwB9P,KAIYgY,UAAAlI,MAAA,EAHpC,CAGyE,CACrE,IAAIkL,SAAW,IAAA9G,YAAA,CAAiBzhB,cAAjB,CACXwoB,MAAAA,CANgBjb,KAMJkU,YAAA,CAA8BzhB,cAA9B,CAGhB,KAFA,IAAIyoB,YAAcF,QAAA/L,QAAA,EAAlB,CACIkM,aAAeF,KAAAhM,QAAA,EACnB,CAAOiM,WAAP,EAAsBC,YAAtB,CAAA,CAAoC,CAChC,GAAID,WAAA5qB,KAAJ,GAAyB6qB,YAAA7qB,KAAzB,EACI,CAAC4qB,WAAA3S,KAAAzI,OAAA,CAAwBqb,YAAA5S,KAAxB,CADL,CAEI,MAAO,CAAA,CAEX2S,YAAA,CAAcF,QAAA/L,QAAA,EACdkM,aAAA,CAAeF,KAAAhM,QAAA,EANiB,CAQpC,MAAuB,KAAvB,GAAOiM,WAAP,EAAgD,IAAhD;AAA+BC,YAbsC,CAFrE,MAAO,CAAA,CAV8B,CAwCjDxqB,aAAA+D,UAAA8kB,cAAA,CAAuC4B,QAAS,CAACzE,eAAD,CAAkB,CAC9D,MAAIA,gBAAJ,GAAwBrM,SAAxB,CACW,IADX,CAIW,IAAA2N,UAAAhjB,IAAA,CAAmB0hB,eAAAlhB,SAAA,EAAnB,CALmD,CAYlE9E,aAAA+L,gBAAA,CAA+B,gBAC/B,OAAO/L,aA7YmC,CAAZ,EAv3GlC,CA4yHIiqB,WAAa,KAjCY,QAAS,CAACpR,MAAD,CAAS,CAE3C6R,QAASA,QAAO,EAAG,CACf,MAAO7R,OAAA8R,KAAA,CAAY,IAAZ,CAAkB,IAAI3L,SAAJ,CAAcpf,eAAd,CAAlB,CAAkDI,YAAAC,WAAlD,CAA2E+B,QAAAC,QAA3E,CAAP,EAAuG,IADxF,CADnByB,OAAAoV,UAAA,CAAkB4R,OAAlB,CAA2B7R,MAA3B,CAIA6R,QAAA3mB,UAAAqY,UAAA,CAA8BwO,QAAS,CAACvb,KAAD,CAAQ,CAC3C,MAAIA,MAAJ,GAAc,IAAd,CACW,CADX,CAIW,CALgC,CAQ/Cqb;OAAA3mB,UAAAoL,OAAA,CAA2B0b,QAAS,CAACxb,KAAD,CAAQ,CAExC,MAAOA,MAAP,GAAiB,IAFuB,CAI5Cqb,QAAA3mB,UAAAzC,YAAA,CAAgCwpB,QAAS,EAAG,CACxC,MAAO,KADiC,CAG5CJ,QAAA3mB,UAAAyW,kBAAA,CAAsCuQ,QAAS,CAACrQ,SAAD,CAAY,CACvD,MAAO1a,aAAAC,WADgD,CAG3DyqB,QAAA3mB,UAAAhD,QAAA,CAA4BiqB,QAAS,EAAG,CACpC,MAAO,CAAA,CAD6B,CAGxC,OAAON,QA1BoC,CAAlBA,CA2B3B1qB,YA3B2B0qB,CAiCZ,CACjBtnB,OAAA6nB,iBAAA,CAAwBzpB,SAAxB,CAAmC,CAC/BkX,IAAK,CACDpV,MAAO,IAAI9B,SAAJ,CAl5GA4H,YAk5GA,CAAwBpJ,YAAAC,WAAxB,CADN,CAD0B,CAI/BirB,IAAK,CACD5nB,MAAO,IAAI9B,SAAJ,CAh5GA6H,YAg5GA,CAAwB4gB,UAAxB,CADN,CAJ0B,CAAnC,CAWArR,SAAAD,aAAA,CAAwB3Y,YAAAC,WACxBG,SAAA4Z,0BAAA;AAAqCha,YA9+CjC,KAAA4d,WA1TAhE,QA0TAgE,CA++COqM,UAl/CP,KAAAnM,aA4kDYje,cAiFhB,KAAIsrB,YAAc,KA1Dc,QAAS,CAACtS,MAAD,CAAS,CAE9CuS,QAASA,WAAU,EAAG,CAClB,MAAkB,KAAlB,GAAOvS,MAAP,EAA0BA,MAAA3R,MAAA,CAAa,IAAb,CAAmBJ,SAAnB,CAA1B,EAA2D,IADzC,CADtBpD,OAAAoV,UAAA,CAAkBsS,UAAlB,CAA8BvS,MAA9B,CAOAuS,WAAArnB,UAAAkU,QAAA,CAA+BoT,QAAS,CAACniB,CAAD,CAAIC,CAAJ,CAAO,CAC3C,IAAIoU,SAAWrU,CAAA0O,KAAAwE,UAAA,CAAiBjT,CAAAyO,KAAjB,CACf,OAAiB,EAAjB,GAAI2F,QAAJ,CACW7d,WAAA,CAAYwJ,CAAAvJ,KAAZ,CAAoBwJ,CAAAxJ,KAApB,CADX,CAIW4d,QANgC,CAY/C6N,WAAArnB,UAAAiV,YAAA,CAAmCsS,QAAS,CAAC1T,IAAD,CAAO,CAC/C,MAAO,CAAA,CADwC,CAMnDwT,WAAArnB,UAAAmU,oBAAA,CAA2CqT,QAAS,CAACnT,OAAD,CAAUC,OAAV,CAAmB,CACnE,MAAO,CAACD,OAAAjJ,OAAA,CAAekJ,OAAf,CAD2D,CAMvE+S;UAAArnB,UAAAyU,QAAA,CAA+BgT,QAAS,EAAG,CACvC,MAAOhqB,UAAAkX,IADgC,CAM3C0S,WAAArnB,UAAAsV,QAAA,CAA+BoS,QAAS,EAAG,CACvC,MAAOjqB,UAAA0pB,IADgC,CAQ3CE,WAAArnB,UAAAwV,SAAA,CAAgCmS,QAAS,CAACjS,UAAD,CAAa9Z,IAAb,CAAmB,CACpDgsB,UAAAA,CAAY9rB,cAAA,CAAe4Z,UAAf,CAChB,OAAO,KAAIjY,SAAJ,CAAc7B,IAAd,CAAoBgsB,UAApB,CAFiD,CAO5DP,WAAArnB,UAAAe,SAAA,CAAgC8mB,QAAS,EAAG,CACxC,MAAO,QADiC,CAG5C,OAAOR,WAxDuC,CAAlBA,CAyD9BrT,KAzD8BqT,CA0Dd,CAAlB,CAuBIS,UAA2B,QAAS,CAAChT,MAAD,CAAS,CAE7CgT,QAASA,UAAS,CAACC,UAAD,CAAa,CAC3B,IAAIhF,MAAQjO,MAAA8R,KAAA,CAAY,IAAZ,CAAR7D,EAA6B,IACjCA,MAAAgF,WAAA,CAAmBA,UACnB5rB,KAAAC,OAAA,CAAY,CAAC2rB,UAAA/qB,QAAA,EAAb,EAA+D,WAA/D;AAAqC+qB,UAAA9e,SAAA,EAArC,CAA4E,yDAA5E,CACA,OAAO8Z,MAJoB,CAD/BpjB,OAAAoV,UAAA,CAAkB+S,SAAlB,CAA6BhT,MAA7B,CAYAgT,UAAA9nB,UAAAgoB,aAAA,CAAmCC,QAAS,CAACC,IAAD,CAAO,CAC/C,MAAOA,KAAAtR,SAAA,CAAc,IAAAmR,WAAd,CADwC,CAMnDD,UAAA9nB,UAAAiV,YAAA,CAAkCkT,QAAS,CAACtU,IAAD,CAAO,CAC9C,MAAO,CAACA,IAAA+C,SAAA,CAAc,IAAAmR,WAAd,CAAA/qB,QAAA,EADsC,CAMlD8qB,UAAA9nB,UAAAkU,QAAA,CAA8BkU,QAAS,CAACjjB,CAAD,CAAIC,CAAJ,CAAO,CAC1C,IAAIijB,OAAS,IAAAL,aAAA,CAAkB7iB,CAAA0O,KAAlB,CAAb,CACIyU,OAAS,IAAAN,aAAA,CAAkB5iB,CAAAyO,KAAlB,CACT2F,OAAAA,CAAW6O,MAAAhQ,UAAA,CAAiBiQ,MAAjB,CACf,OAAiB,EAAjB,GAAI9O,MAAJ,CACW7d,WAAA,CAAYwJ,CAAAvJ,KAAZ,CAAoBwJ,CAAAxJ,KAApB,CADX;AAIW4d,MAR+B,CAc9CsO,UAAA9nB,UAAAwV,SAAA,CAA+B+S,QAAS,CAAC7S,UAAD,CAAa9Z,IAAb,CAAmB,CACnDgsB,UAAAA,CAAY9rB,cAAA,CAAe4Z,UAAf,CACZ7B,WAAAA,CAAO5X,YAAAC,WAAAkb,YAAA,CAAoC,IAAA2Q,WAApC,CAAqDH,UAArD,CACX,OAAO,KAAInqB,SAAJ,CAAc7B,IAAd,CAAoBiY,UAApB,CAHgD,CAQ3DiU,UAAA9nB,UAAAsV,QAAA,CAA8BkT,QAAS,EAAG,CACtC,IAAI3U,KAAO5X,YAAAC,WAAAkb,YAAA,CAAoC,IAAA2Q,WAApC,CAAqD7B,UAArD,CACX,OAAO,KAAIzoB,SAAJ,CA3oHA6H,YA2oHA,CAAwBuO,IAAxB,CAF+B,CAO1CiU,UAAA9nB,UAAAe,SAAA,CAA+B0nB,QAAS,EAAG,CACvC,MAAO,KAAAV,WAAAhe,MAAA,EAAArC,KAAA,CAA6B,GAA7B,CADgC,CAG3C,OAAOogB,UAzDsC,CAAlB,CA0D7B9T,KA1D6B,CAvB/B,CAuGI0U,aAA8B,QAAS,EAAG,CAM1CA,QAASA,aAAY,CAACC,KAAD;AAAQC,IAAR,CAAcC,MAAd,CAAsB,CACvC,IAAAF,MAAA,CAAaA,KACb,KAAAC,KAAA,CAAYA,IACZ,KAAAC,OAAA,CAAcA,MAHyB,CAW3CH,YAAA1oB,UAAAuG,IAAA,CAA6BuiB,QAAS,EAAG,CACrC3sB,IAAA4V,iBAAA,CAAsB,kBAAtB,CAA0C,CAA1C,CAA6C,CAA7C,CAAgDhP,SAAArF,OAAhD,CACA,OAAO,KAAAirB,MAAApiB,IAAA,EAF8B,CASzCmiB,aAAA1oB,UAAA+oB,UAAA,CAAmCC,QAAS,EAAG,CAC3C7sB,IAAA4V,iBAAA,CAAsB,wBAAtB,CAAgD,CAAhD,CAAmD,CAAnD,CAAsDhP,SAAArF,OAAtD,CACA,OAAO,KAAAirB,MAAApiB,IAAA,CAAe,CAAA,CAAf,CAFoC,CAM/CmiB,aAAA1oB,UAAAmT,OAAA,CAAgC8V,QAAS,EAAG,CAExC9sB,IAAA4V,iBAAA,CAAsB,qBAAtB,CAA6C,CAA7C,CAAgD,CAAhD,CAAmDhP,SAAArF,OAAnD,CACA,OAAO,KAAAqrB,UAAA,EAHiC,CAU5CL,aAAA1oB,UAAAkpB,OAAA,CAAgCC,QAAS,EAAG,CACxChtB,IAAA4V,iBAAA,CAAsB,qBAAtB;AAA6C,CAA7C,CAAgD,CAAhD,CAAmDhP,SAAArF,OAAnD,CACA,OAAO,CAAC,IAAAirB,MAAA3rB,QAAA,EAFgC,CAU5C0rB,aAAA1oB,UAAA1C,MAAA,CAA+B8rB,QAAS,CAACC,eAAD,CAAkB,CACtDltB,IAAA4V,iBAAA,CAAsB,oBAAtB,CAA4C,CAA5C,CAA+C,CAA/C,CAAkDhP,SAAArF,OAAlD,CAEA2rB,gBAAA,CAAkBvf,MAAA,CAAOuf,eAAP,CAClB/X,mBAAA,CAAmB,oBAAnB,CAAyC,CAAzC,CAA4C+X,eAA5C,CAA6D,CAAA,CAA7D,CACA,KAAIC,UAAY,IAAI9gB,IAAJ,CAAS6gB,eAAT,CAAhB,CACIE,SAAW,IAAAX,KAAAtrB,MAAA,CAAgBgsB,SAAhB,CACf,OAAO,KAAIZ,YAAJ,CAAiB,IAAAC,MAAA/R,SAAA,CAAoB0S,SAApB,CAAjB,CAAiDC,QAAjD,CAA2DxrB,cAA3D,CAP+C,CAe1D2qB,aAAA1oB,UAAA8W,SAAA,CAAkC0S,QAAS,CAACH,eAAD,CAAkB,CACzDltB,IAAA4V,iBAAA,CAAsB,uBAAtB;AAA+C,CAA/C,CAAkD,CAAlD,CAAqDhP,SAAArF,OAArD,CACA4T,mBAAA,CAAmB,uBAAnB,CAA4C,CAA5C,CAA+C+X,eAA/C,CAAgE,CAAA,CAAhE,CACA,KAAIC,UAAY,IAAI9gB,IAAJ,CAAS6gB,eAAT,CAChB,OAAO,CAAC,IAAAV,MAAA/R,SAAA,CAAoB0S,SAApB,CAAAtsB,QAAA,EAJiD,CAW7D0rB,aAAA1oB,UAAAzC,YAAA,CAAqCksB,QAAS,EAAG,CAC7CttB,IAAA4V,iBAAA,CAAsB,0BAAtB,CAAkD,CAAlD,CAAqD,CAArD,CAAwDhP,SAAArF,OAAxD,CAEA,OAAO,KAAAirB,MAAAprB,YAAA,EAAAgJ,IAAA,EAHsC,CAajDmiB,aAAA1oB,UAAAvD,QAAA,CAAiCitB,QAAS,CAAC7R,MAAD,CAAS,CAC/C,IAAIkL,MAAQ,IACZ5mB,KAAA4V,iBAAA,CAAsB,sBAAtB,CAA8C,CAA9C,CAAiD,CAAjD,CAAoDhP,SAAArF,OAApD,CACAvB,KAAA6V,iBAAA,CAAsB,sBAAtB;AAA8C,CAA9C,CAAiD6F,MAAjD,CAAyD,CAAA,CAAzD,CACA,OAAI,KAAA8Q,MAAA5rB,WAAA,EAAJ,CACW,CAAA,CADX,CAIO,CAAC,CAFW,IAAA4rB,MAEVjR,aAAA,CAA0B,IAAAmR,OAA1B,CAAuC,QAAS,CAACnsB,GAAD,CAAMmX,IAAN,CAAY,CACjE,MAAOgE,OAAA,CAAO,IAAI6Q,YAAJ,CAAiB7U,IAAjB,CAAuBkP,KAAA6F,KAAAtrB,MAAA,CAAiBZ,GAAjB,CAAvB,CAA8CqB,cAA9C,CAAP,CAD0D,CAA5D,CARsC,CAgBnD2qB,aAAA1oB,UAAA2pB,YAAA,CAAqCC,QAAS,EAAG,CAC7CztB,IAAA4V,iBAAA,CAAsB,0BAAtB,CAAkD,CAAlD,CAAqD,CAArD,CAAwDhP,SAAArF,OAAxD,CACA,OAAI,KAAAirB,MAAA5rB,WAAA,EAAJ,CACW,CAAA,CADX,CAGW,CAAC,IAAA4rB,MAAA3rB,QAAA,EALiC,CAOjDqC,OAAAC,eAAA,CAAsBopB,YAAA1oB,UAAtB,CAA8C,KAA9C,CAAqD,CACjDO,IAAKA,QAAS,EAAG,CACb,MAAO,KAAAqoB,KAAAiB,OAAA,EADM,CADgC,CAIjD9gB,WAAY,CAAA,CAJqC,CAKjDC,aAAc,CAAA,CALmC,CAArD,CAWA0f,aAAA1oB,UAAAwX,YAAA;AAAqCsS,QAAS,EAAG,CAC7C3tB,IAAA4V,iBAAA,CAAsB,0BAAtB,CAAkD,CAAlD,CAAqD,CAArD,CAAwDhP,SAAArF,OAAxD,CACA,OAAO,KAAAirB,MAAAnR,YAAA,EAFsC,CAOjDkR,aAAA1oB,UAAA+pB,OAAA,CAAgCC,QAAS,EAAG,CACxC7tB,IAAA4V,iBAAA,CAAsB,kBAAtB,CAA0C,CAA1C,CAA6C,CAA7C,CAAgDhP,SAAArF,OAAhD,CACA,OAAO,KAAAkrB,KAFiC,CAI5CvpB,OAAAC,eAAA,CAAsBopB,YAAA1oB,UAAtB,CAA8C,KAA9C,CAAqD,CACjDO,IAAKA,QAAS,EAAG,CACb,MAAO,KAAAwpB,OAAA,EADM,CADgC,CAIjDhhB,WAAY,CAAA,CAJqC,CAKjDC,aAAc,CAAA,CALmC,CAArD,CAOA,OAAO0f,aA/ImC,CAAZ,EAvGlC,CA6QIuB,UAA2B,QAAS,EAAG,CAOvCA,QAASA,UAAS,CAAC7Y,SAAD,CAAY8Y,iBAAZ,CAA+BhX,QAA/B,CAAyCiX,QAAzC,CAAmD,CACjE,IAAA/Y,UAAA,CAAiBA,SACjB,KAAA8Y,kBAAA;AAAyBA,iBACzB,KAAAhX,SAAA,CAAgBA,QAChB,KAAAiX,SAAA,CAAgBA,QAJiD,CASrEF,SAAAjqB,UAAAoqB,QAAA,CAA8BC,QAAS,EAAG,CACtC,IAAIC,IAAM,IAAApX,SAAA6W,OAAA,EACV,OAAuB,OAAvB,GAAI,IAAA3Y,UAAJ,CACWkZ,GAAA5e,KADX,CAIW4e,GAAAC,UAAA,EAAA7e,KAN2B,CAY1Cue,UAAAjqB,UAAAwqB,aAAA,CAAmCC,QAAS,EAAG,CAC3C,MAAO,KAAArZ,UADoC,CAM/C6Y,UAAAjqB,UAAA0qB,eAAA,CAAqCC,QAAS,EAAG,CAC7C,MAAO,KAAAT,kBAAAQ,eAAA,CAAsC,IAAtC,CADsC,CAMjDT,UAAAjqB,UAAAe,SAAA,CAA+B6pB,QAAS,EAAG,CACvC,MAAQ,KAAAR,QAAA,EAAArpB,SAAA,EAAR,CACI,GADJ,CAEI,IAAAqQ,UAFJ,CAGI,GAHJ,CAIIjV,IAAAmE,UAAA,CAAe,IAAA4S,SAAA6V,UAAA,EAAf,CALmC,CAO3C,OAAOkB,UA/CgC,CAAZ,EA7Q/B;AA8TIY,YAA6B,QAAS,EAAG,CAMzCA,QAASA,YAAW,CAACX,iBAAD,CAAoBlmB,KAApB,CAA2B0H,IAA3B,CAAiC,CACjD,IAAAwe,kBAAA,CAAyBA,iBACzB,KAAAlmB,MAAA,CAAaA,KACb,KAAA0H,KAAA,CAAYA,IAHqC,CAQrDmf,WAAA7qB,UAAAoqB,QAAA,CAAgCU,QAAS,EAAG,CACxC,MAAO,KAAApf,KADiC,CAM5Cmf,YAAA7qB,UAAAwqB,aAAA,CAAqCO,QAAS,EAAG,CAC7C,MAAO,QADsC,CAMjDF,YAAA7qB,UAAA0qB,eAAA,CAAuCM,QAAS,EAAG,CAC/C,MAAO,KAAAd,kBAAAQ,eAAA,CAAsC,IAAtC,CADwC,CAMnDG,YAAA7qB,UAAAe,SAAA,CAAiCkqB,QAAS,EAAG,CACzC,MAAO,KAAAvf,KAAA3K,SAAA,EAAP,CAA8B,SADW,CAG7C,OAAO8pB,YAnCkC,CAAZ,EA9TjC,CAuXIK,uBAAwC,QAAS,EAAG,CAMpDA,QAASA,uBAAsB,CAACC,SAAD;AAAYC,eAAZ,CAA6BC,QAA7B,CAAuC,CAClE,IAAAF,UAAA,CAAiBA,SACjB,KAAAC,gBAAA,CAAuBA,eACvB,KAAAC,SAAA,CAAgBA,QAHkD,CAQtEH,sBAAAlrB,UAAAsrB,WAAA,CAA8CC,QAAS,CAACna,SAAD,CAAY,CAC/D,MAAqB,OAArB,GAAOA,SADwD,CAMnE8Z,uBAAAlrB,UAAAwrB,YAAA,CAA+CC,QAAS,CAACC,MAAD,CAASC,KAAT,CAAgB,CACpE,IAAI/T,MAAQ+T,KAAAC,eAAA,EAAAC,SAAA,EACZ,OAAO,KAAI5B,SAAJ,CAAc,OAAd,CAAuB,IAAvB,CAA6B,IAAIvB,YAAJ,CAAiBgD,MAAAI,aAAjB,CAAsCH,KAAA5B,OAAA,EAAtC,CAAsDnS,KAAtD,CAA7B,CAF6D,CAOxEsT,uBAAAlrB,UAAA0qB,eAAA,CAAkDqB,QAAS,CAACC,SAAD,CAAY,CACnE,IAAIC,IAAM,IAAAZ,SACV,IAAiC,QAAjC;AAAIW,SAAAxB,aAAA,EAAJ,CAA2C,CACvCruB,IAAAC,OAAA,CAAY,IAAAgvB,gBAAZ,CAAkC,8DAAlC,CACA,KAAIc,WAAa,IAAAd,gBACjB,OAAO,SAAS,EAAG,CAEfc,UAAAtF,KAAA,CAAgBqF,GAAhB,CAAqBD,SAAAhoB,MAArB,CAFe,CAHoB,CASvC,IAAImoB,KAAO,IAAAhB,UACX,OAAO,SAAS,EAAG,CACfgB,IAAAvF,KAAA,CAAUqF,GAAV,CAAeD,SAAA9Y,SAAf,CADe,CAZ4C,CAoBvEgY,uBAAAlrB,UAAAosB,kBAAA,CAAqDC,QAAS,CAACroB,KAAD,CAAQ0H,IAAR,CAAc,CACxE,MAAI,KAAA0f,gBAAJ,CACW,IAAIP,WAAJ,CAAgB,IAAhB,CAAsB7mB,KAAtB,CAA6B0H,IAA7B,CADX,CAIW,IAL6D,CAW5Ewf,uBAAAlrB,UAAAssB,QAAA,CAA2CC,QAAS,CAACjhB,KAAD,CAAQ,CACxD,MAAMA,MAAN;AAAuB4f,sBAAvB,CAGU5f,KAAA6f,UAAL,EAAyB,IAAAA,UAAzB,CAKO7f,KAAA6f,UALP,GAK2B,IAAAA,UAL3B,EAK6C7f,KAAA+f,SAL7C,GAKgE,IAAAA,SALhE,CAEM,CAAA,CALX,CACW,CAAA,CAF6C,CAe5DH,uBAAAlrB,UAAAwsB,eAAA,CAAkDC,QAAS,EAAG,CAC1D,MAA0B,KAA1B,GAAO,IAAAtB,UADmD,CAG9D,OAAOD,uBA5E6C,CAAZ,EAvX5C,CA8cIwB,uBAAwC,QAAS,EAAG,CAMpDA,QAASA,uBAAsB,CAACC,UAAD,CAAavB,eAAb,CAA8BC,QAA9B,CAAwC,CACnE,IAAAsB,WAAA,CAAkBA,UAClB,KAAAvB,gBAAA,CAAuBA,eACvB,KAAAC,SAAA,CAAgBA,QAHmD,CAQvEqB,sBAAA1sB,UAAAsrB,WAAA,CAA8CsB,QAAS,CAACxb,SAAD,CAAY,CAC3Dyb,SAAAA;AAA6B,gBAAd,GAAAzb,SAAA,CAAiC,aAAjC,CAAiDA,SAGpE,OAAOjV,KAAAS,SAAA,CAAc,IAAA+vB,WAAd,CADc,kBAAjBE,GAAAA,SAAAA,CAAsC,eAAtCA,CAAwDA,SACrD,CAJwD,CASnEH,uBAAA1sB,UAAAosB,kBAAA,CAAqDU,QAAS,CAAC9oB,KAAD,CAAQ0H,IAAR,CAAc,CACxE,MAAI,KAAA0f,gBAAJ,CACW,IAAIP,WAAJ,CAAgB,IAAhB,CAAsB7mB,KAAtB,CAA6B0H,IAA7B,CADX,CAIW,IAL6D,CAW5EghB,uBAAA1sB,UAAAwrB,YAAA,CAA+CuB,QAAS,CAACrB,MAAD,CAASC,KAAT,CAAgB,CACpExvB,IAAAC,OAAA,CAAgC,IAAhC,EAAYsvB,MAAA/U,UAAZ,CAAsC,uCAAtC,CACA,KAAI2T,IAAMqB,KAAA5B,OAAA,EAAAzsB,MAAA,CAA6CouB,MAAA/U,UAA7C,CACNiB,MAAAA,CAAQ+T,KAAAC,eAAA,EAAAC,SAAA,EACZ;MAAO,KAAI5B,SAAJ,CAAcyB,MAAA3d,KAAd,CAA2B,IAA3B,CAAiC,IAAI2a,YAAJ,CAAiBgD,MAAAI,aAAjB,CAAsCxB,GAAtC,CAA2C1S,KAA3C,CAAjC,CAAoF8T,MAAAvB,SAApF,CAJ6D,CASxEuC,uBAAA1sB,UAAA0qB,eAAA,CAAkDsC,QAAS,CAAChB,SAAD,CAAY,CACnE,IAAIC,IAAM,IAAAZ,SACV,IAAiC,QAAjC,GAAIW,SAAAxB,aAAA,EAAJ,CAA2C,CACvCruB,IAAAC,OAAA,CAAY,IAAAgvB,gBAAZ,CAAkC,8DAAlC,CACA,KAAI6B,WAAa,IAAA7B,gBACjB,OAAO,SAAS,EAAG,CAEf6B,UAAArG,KAAA,CAAgBqF,GAAhB,CAAqBD,SAAAhoB,MAArB,CAFe,CAHoB,CASvC,IAAIkpB,KAAO,IAAAP,WAAA,CAAgBX,SAAA5a,UAAhB,CACX,OAAO,SAAS,EAAG,CACf8b,IAAAtG,KAAA,CAAUqF,GAAV;AAAeD,SAAA9Y,SAAf,CAAmC8Y,SAAA7B,SAAnC,CADe,CAZ4C,CAoBvEuC,uBAAA1sB,UAAAssB,QAAA,CAA2Ca,QAAS,CAAC7hB,KAAD,CAAQ,CACxD,GAAIA,KAAJ,WAAqBohB,uBAArB,CAA6C,CACzC,GAAI,CAAC,IAAAC,WAAL,EAAwB,CAACrhB,KAAAqhB,WAAzB,CACI,MAAO,CAAA,CAEN,IAAI,IAAAtB,SAAJ,GAAsB/f,KAAA+f,SAAtB,CAAsC,CACvC,IAAI+B,WAAajxB,IAAAkxB,SAAA,CAAc/hB,KAAAqhB,WAAd,CAAjB,CACIW,UAAYnxB,IAAAkxB,SAAA,CAAc,IAAAV,WAAd,CAChB,IAAIS,UAAJ,GAAmBE,SAAnB,CAII,MAAmB,EAAnB,GAAIF,UAAJ,EACQG,UAEI,CAF8BpxB,IAAAqxB,UAAA,CAAeliB,KAAAqhB,WAAf,CAE9B,CADJc,SACI,CAD6BtxB,IAAAqxB,UAAA,CAAe,IAAAb,WAAf,CAC7B,CAAAc,SAAA,GAAYF,UAAZ,GACH,CAACjiB,KAAAqhB,WAAA,CAAiBY,UAAjB,CADE;AAEA,CAAC,IAAAZ,WAAA,CAAgBc,SAAhB,CAFD,EAGAniB,KAAAqhB,WAAA,CAAiBY,UAAjB,CAHA,GAG+B,IAAAZ,WAAA,CAAgBc,SAAhB,CAH/B,CAHZ,EAUWtxB,IAAAuxB,MAAA,CAAW,IAAAf,WAAX,CAA4B,QAAS,CAACvb,SAAD,CAAYuc,EAAZ,CAAgB,CAAE,MAAOriB,MAAAqhB,WAAA,CAAiBvb,SAAjB,CAAP,GAAuCuc,EAAzC,CAArD,CAjBwB,CAJF,CA0B7C,MAAO,CAAA,CA3BiD,CAgC5DjB,uBAAA1sB,UAAAwsB,eAAA,CAAkDoB,QAAS,EAAG,CAC1D,MAA2B,KAA3B,GAAO,IAAAjB,WADmD,CAG9D,OAAOD,uBAlG6C,CAAZ,EA9c5C,CAmkBImB,sBAnkBJ,CA0kBI9uB,MAAuB,QAAS,EAAG,CACnCA,QAASA,MAAK,CAAC+uB,IAAD,CAAOpiB,IAAP,CAAaqiB,YAAb,CAA2BC,cAA3B,CAA2C,CACrD,IAAAF,KAAA,CAAYA,IACZ,KAAApiB,KAAA,CAAYA,IACZ,KAAAqiB,aAAA,CAAoBA,YACpB,KAAAC,eAAA,CAAsBA,cAJ+B;AAMzD3uB,MAAAC,eAAA,CAAsBP,KAAtB,CAA6B,wBAA7B,CAAuD,CACnDwB,IAAKA,QAAS,EAAG,CACbpE,IAAAC,OAAA,CAAYyxB,sBAAZ,CAAoC,kCAApC,CACA,OAAOA,uBAFM,CADkC,CAKnD5tB,IAAKA,QAAS,CAACsG,GAAD,CAAM,CAChBsnB,sBAAA,CAAyBtnB,GADT,CAL+B,CAQnDwC,WAAY,CAAA,CARuC,CASnDC,aAAc,CAAA,CATqC,CAAvD,CAgBAjK,MAAAkvB,wBAAA,CAAgCC,QAAS,CAAClgB,MAAD,CAAS,CAC9C,IAAImgB,UAAY,IAAhB,CACIC,QAAU,IACVpgB,OAAAqgB,SAAA,EAAJ,GACIF,SADJ,CACgBngB,MAAAsgB,mBAAA,EADhB,CAGItgB,OAAAugB,OAAA,EAAJ,GACIH,OADJ,CACcpgB,MAAAwgB,iBAAA,EADd,CAGA,IAAIxgB,MAAA6d,SAAA,EAAJ,GAA0BjW,SAA1B,CAAqC,CAKjC,GAAI5H,MAAAqgB,SAAA,EAAJ,CAAuB,CAEnB,GAzrIDhpB,YAyrIC;AADgB2I,MAAAygB,kBAAAC,EAChB,CACI,KAAUxqB,MAAJ,CAPSyqB,kGAOT,CAAN,CAEC,GAAyB,QAAzB,GAAI,MAAOR,UAAX,CACD,KAAUjqB,MAAJ,CARU0qB,uGAQV,CAAN,CANe,CASvB,GAAI5gB,MAAAugB,OAAA,EAAJ,CAAqB,CAEjB,GA7rIDjpB,YA6rIC,EADc0I,MAAA6gB,gBAAAC,EACd,CACI,KAAU5qB,MAAJ,CAhBSyqB,kGAgBT,CAAN,CAEC,GAAuB,QAAvB,GAAI,MAAOP,QAAX,CACD,KAAUlqB,MAAJ,CAjBU0qB,uGAiBV,CAAN;AANa,CAdY,CAArC,IAwBK,IAAI5gB,MAAA6d,SAAA,EAAJ,GAA0B9tB,cAA1B,CACD,IAAkB,IAAlB,EAAKowB,SAAL,EAA0B,CAACle,eAAA,CAAgBke,SAAhB,CAA3B,EACgB,IADhB,EACKC,OADL,EACwB,CAACne,eAAA,CAAgBme,OAAhB,CADzB,CAEI,KAAUlqB,MAAJ,CAAU,+JAAV,CAAN,CAFJ,CADC,IAUD,IAFA/H,IAAAC,OAAA,CAAY4R,MAAA6d,SAAA,EAAZ,UAAyC/D,UAAzC,EACI9Z,MAAA6d,SAAA,EADJ,GAC0BzE,WAD1B,CACuC,qBADvC,CAEI,CAAc,IAAd,EAAC+G,SAAD,EAA2C,QAA3C,GAAsB,MAAOA,UAA7B,EACY,IADZ,EACCC,OADD,EACuC,QADvC,GACoB,MAAOA,QAD/B,CAEI,KAAUlqB,MAAJ,CAAU,uFAAV,CAAN;AA7CsC,CAuDlDnF,MAAAgwB,eAAA,CAAuBC,QAAS,CAAChhB,MAAD,CAAS,CACrC,GAAIA,MAAAqgB,SAAA,EAAJ,EACIrgB,MAAAugB,OAAA,EADJ,EAEIvgB,MAAAihB,SAAA,EAFJ,EAGI,CAACjhB,MAAAkhB,iBAAA,EAHL,CAII,KAAUhrB,MAAJ,CAAU,oGAAV,CAAN,CALiC,CAazCnF,MAAAiB,UAAAmvB,+BAAA,CAAiDC,QAAS,CAACjf,MAAD,CAAS,CAC/D,GAA4B,CAAA,CAA5B,GAAI,IAAA6d,eAAJ,CACI,KAAU9pB,MAAJ,CAAUiM,MAAV,CAAmB,6CAAnB,CAAN,CAF2D,CAQnEpR,MAAAiB,UAAA4rB,eAAA,CAAiCyD,QAAS,EAAG,CACzC,MAAO,KAAAtB,aADkC,CAM7ChvB,MAAAiB,UAAA+pB,OAAA,CAAyBuF,QAAS,EAAG,CACjCnzB,IAAA4V,iBAAA,CAAsB,WAAtB;AAAmC,CAAnC,CAAsC,CAAtC,CAAyChP,SAAArF,OAAzC,CAIA,OAAO,KAAIqB,KAAA8uB,uBAAJ,CAAiC,IAAAC,KAAjC,CAA4C,IAAApiB,KAA5C,CAL0B,CAcrC3M,MAAAiB,UAAAuvB,GAAA,CAAqBC,QAAS,CAACpe,SAAD,CAAYqe,QAAZ,CAAsBC,uBAAtB,CAA+CC,OAA/C,CAAwD,CAClFxzB,IAAA4V,iBAAA,CAAsB,UAAtB,CAAkC,CAAlC,CAAqC,CAArC,CAAwChP,SAAArF,OAAxC,CACAyT,kBAAA,CAAkB,UAAlB,CAA8B,CAA9B,CAAiCC,SAAjC,CAA4C,CAAA,CAA5C,CACAjV,KAAA6V,iBAAA,CAAsB,UAAtB,CAAkC,CAAlC,CAAqCyd,QAArC,CAA+C,CAAA,CAA/C,CACA,KAAIG,IAAM7wB,KAAA8wB,yBAAA,CAA+B,UAA/B,CAA2CH,uBAA3C,CAAoEC,OAApE,CACV,IAAkB,OAAlB,GAAIve,SAAJ,CACI,IAAA0e,aAAA,CAAkBL,QAAlB,CAA4BG,GAAAhe,OAA5B,CAAwCge,GAAAD,QAAxC,CADJ,KAGK,CACD,IAAII,UAAY,EAChBA,UAAA,CAAU3e,SAAV,CAAA;AAAuBqe,QACvB,KAAAO,aAAA,CAAkBD,SAAlB,CAA6BH,GAAAhe,OAA7B,CAAyCge,GAAAD,QAAzC,CAHC,CAKL,MAAOF,SAb2E,CAqBtF1wB,MAAAiB,UAAA8vB,aAAA,CAA+BG,QAAS,CAACR,QAAD,CAAWS,cAAX,CAA2BP,OAA3B,CAAoC,CACpEQ,QAAAA,CAAY,IAAIjF,sBAAJ,CAA2BuE,QAA3B,CAAqCS,cAArC,EAAuD,IAAvD,CAA6DP,OAA7D,EAAwE,IAAxE,CAChB,KAAA7B,KAAAsC,yBAAA,CAAmC,IAAnC,CAAyCD,QAAzC,CAFwE,CAU5EpxB,MAAAiB,UAAAgwB,aAAA,CAA+BK,QAAS,CAACN,SAAD,CAAYG,cAAZ,CAA4BP,OAA5B,CAAqC,CACrEQ,SAAAA,CAAY,IAAIzD,sBAAJ,CAA2BqD,SAA3B,CAAsCG,cAAtC,CAAsDP,OAAtD,CAChB,KAAA7B,KAAAsC,yBAAA,CAAmC,IAAnC,CAAyCD,SAAzC,CAFyE,CAS7EpxB,MAAAiB,UAAAswB,IAAA,CAAsBC,QAAS,CAACnf,SAAD;AAAYqe,QAAZ,CAAsBE,OAAtB,CAA+B,CAC1DxzB,IAAA4V,iBAAA,CAAsB,WAAtB,CAAmC,CAAnC,CAAsC,CAAtC,CAAyChP,SAAArF,OAAzC,CACAyT,kBAAA,CAAkB,WAAlB,CAA+B,CAA/B,CAAkCC,SAAlC,CAA6C,CAAA,CAA7C,CACAjV,KAAA6V,iBAAA,CAAsB,WAAtB,CAAmC,CAAnC,CAAsCyd,QAAtC,CAAgD,CAAA,CAAhD,CACAtzB,KAAAq0B,sBAAA,CAA2B,WAA3B,CAAwC,CAAxC,CAA2Cb,OAA3C,CAAoD,CAAA,CAApD,CACA,KAAIQ,UAAY,IAAhB,CACIJ,UAAY,IACE,QAAlB,GAAI3e,SAAJ,CAEI+e,SAFJ,CAEgB,IAAIjF,sBAAJ,CADQuE,QACR,EADoB,IACpB,CAA0C,IAA1C,CAAgDE,OAAhD,EAA2D,IAA3D,CAFhB,CAISve,SAJT,GAKQqe,QAIJ,GAHIM,SACA,CADY,EACZ,CAAAA,SAAA,CAAU3e,SAAV,CAAA,CAAuBqe,QAE3B,EAAAU,SAAA,CAAY,IAAIzD,sBAAJ,CAA2BqD,SAA3B,CAAsC,IAAtC,CAA4CJ,OAA5C,EAAuD,IAAvD,CAThB,CAWA,KAAA7B,KAAA2C,4BAAA,CAAsC,IAAtC;AAA4CN,SAA5C,CAlB0D,CA4B9DpxB,MAAAiB,UAAA0wB,KAAA,CAAuBC,QAAS,CAACvf,SAAD,CAAYwf,YAAZ,CAA0BC,eAA1B,CAA2ClB,OAA3C,CAAoD,CAChF,IAAI5M,MAAQ,IACZ5mB,KAAA4V,iBAAA,CAAsB,YAAtB,CAAoC,CAApC,CAAuC,CAAvC,CAA0ChP,SAAArF,OAA1C,CACAyT,kBAAA,CAAkB,YAAlB,CAAgC,CAAhC,CAAmCC,SAAnC,CAA8C,CAAA,CAA9C,CACAjV,KAAA6V,iBAAA,CAAsB,YAAtB,CAAoC,CAApC,CAAuC4e,YAAvC,CAAqD,CAAA,CAArD,CACA,KAAIhB,IAAM7wB,KAAA8wB,yBAAA,CAA+B,YAA/B,CAA6CgB,eAA7C,CAA8DlB,OAA9D,CAAV,CAKImB,UAAY,CAAA,CALhB,CAMI7e,SAAW,IAAI9V,IAAA+V,SAEnBD,SAAAI,QAAA0e,MAAA,CAAuB,QAAS,EAAG,EAAnC,CACA,KAAIC,aAAeA,QAAS,CAAC9d,QAAD,CAAW,CAG/B4d,SAAJ,GACIA,SAKA,CALY,CAAA,CAKZ,CAJA/N,KAAAuN,IAAA,CAAUlf,SAAV,CAAqB4f,YAArB,CAIA;AAHIJ,YAGJ,EAFIA,YAAAhtB,KAAA,CAAkBgsB,GAAAD,QAAlB,CAAA,CAA+Bzc,QAA/B,CAEJ,CAAAjB,QAAAgf,QAAA,CAAiB/d,QAAjB,CANJ,CAHmC,CAYvC,KAAAqc,GAAA,CAAQne,SAAR,CAAmB4f,YAAnB,CACY,QAAS,CAACE,GAAD,CAAM,CACvBnO,KAAAuN,IAAA,CAAUlf,SAAV,CAAqB4f,YAArB,CACIpB,IAAAhe,OAAJ,EACIge,GAAAhe,OAAAhO,KAAA,CAAgBgsB,GAAAD,QAAhB,CAAA,CAA6BuB,GAA7B,CACJjf,SAAAkf,OAAA,CAAgBD,GAAhB,CAJuB,CAD3B,CAOA,OAAOjf,SAAAI,QAjCyE,CAwCpFtT,MAAAiB,UAAAoxB,aAAA,CAA+BC,QAAS,CAACC,KAAD,CAAQ,CAC5Cn1B,IAAA4V,iBAAA,CAAsB,oBAAtB,CAA4C,CAA5C,CAA+C,CAA/C,CAAkDhP,SAAArF,OAAlD,CACA,IAAqB,QAArB,GAAI,MAAO4zB,MAAX,EACIzqB,IAAAK,MAAA,CAAWoqB,KAAX,CADJ,GAC0BA,KAD1B,EAEa,CAFb,EAEIA,KAFJ,CAGI,KAAUptB,MAAJ,CAAU,gEAAV,CAAN;AAEJ,GAAI,IAAA6pB,aAAAkB,SAAA,EAAJ,CACI,KAAU/qB,MAAJ,CAAU,qGAAV,CAAN,CAGJ,MAAO,KAAInF,KAAJ,CAAU,IAAA+uB,KAAV,CAAqB,IAAApiB,KAArB,CAAgC,IAAAqiB,aAAAqD,aAAA,CAA+BE,KAA/B,CAAhC,CAAuE,IAAAtD,eAAvE,CAXqC,CAkBhDjvB,MAAAiB,UAAAuxB,YAAA,CAA8BC,QAAS,CAACF,KAAD,CAAQ,CAC3Cn1B,IAAA4V,iBAAA,CAAsB,mBAAtB,CAA2C,CAA3C,CAA8C,CAA9C,CAAiDhP,SAAArF,OAAjD,CACA,IAAqB,QAArB,GAAI,MAAO4zB,MAAX,EACIzqB,IAAAK,MAAA,CAAWoqB,KAAX,CADJ,GAC0BA,KAD1B,EAEa,CAFb,EAEIA,KAFJ,CAGI,KAAUptB,MAAJ,CAAU,+DAAV,CAAN,CAEJ,GAAI,IAAA6pB,aAAAkB,SAAA,EAAJ,CACI,KAAU/qB,MAAJ,CAAU,oGAAV,CAAN;AAGJ,MAAO,KAAInF,KAAJ,CAAU,IAAA+uB,KAAV,CAAqB,IAAApiB,KAArB,CAAgC,IAAAqiB,aAAAwD,YAAA,CAA8BD,KAA9B,CAAhC,CAAsE,IAAAtD,eAAtE,CAXoC,CAkB/CjvB,MAAAiB,UAAAyxB,aAAA,CAA+BC,QAAS,CAAChmB,IAAD,CAAO,CAC3CvP,IAAA4V,iBAAA,CAAsB,oBAAtB,CAA4C,CAA5C,CAA+C,CAA/C,CAAkDhP,SAAArF,OAAlD,CACA,IAAa,MAAb,GAAIgO,IAAJ,CACI,KAAUxH,MAAJ,CAAU,yEAAV,CAAN,CAEC,GAAa,WAAb,GAAIwH,IAAJ,CACD,KAAUxH,MAAJ,CAAU,mFAAV,CAAN,CAEC,GAAa,QAAb,GAAIwH,IAAJ,CACD,KAAUxH,MAAJ,CAAU,6EAAV,CAAN;AAEJoN,kBAAA,CAAmB,oBAAnB,CAAyC,CAAzC,CAA4C5F,IAA5C,CAAkD,CAAA,CAAlD,CACA,KAAAyjB,+BAAA,CAAoC,oBAApC,CACA,KAAIwC,WAAa,IAAInpB,IAAJ,CAASkD,IAAT,CACjB,IAAIimB,UAAA30B,QAAA,EAAJ,CACI,KAAUkH,MAAJ,CAAU,mFAAV,CAAN,CAEA0T,UAAAA,CAAQ,IAAIkQ,SAAJ,CAAc6J,UAAd,CACRC,WAAAA,CAAY,IAAA7D,aAAA8D,QAAA,CAA0Bja,UAA1B,CAChB7Y,MAAAkvB,wBAAA,CAA8B2D,UAA9B,CACA,OAAO,KAAI7yB,KAAJ,CAAU,IAAA+uB,KAAV,CAAqB,IAAApiB,KAArB,CAAgCkmB,UAAhC,CAA8D,CAAA,CAA9D,CApBoC,CA0B/C7yB,MAAAiB,UAAA8xB,WAAA,CAA6BC,QAAS,EAAG,CACrC51B,IAAA4V,iBAAA,CAAsB,kBAAtB;AAA0C,CAA1C,CAA6C,CAA7C,CAAgDhP,SAAArF,OAAhD,CACA,KAAAyxB,+BAAA,CAAoC,kBAApC,CACA,KAAIyC,UAAY,IAAA7D,aAAA8D,QAAA,CAA0Bjc,SAA1B,CAChB7W,MAAAkvB,wBAAA,CAA8B2D,SAA9B,CACA,OAAO,KAAI7yB,KAAJ,CAAU,IAAA+uB,KAAV,CAAqB,IAAApiB,KAArB,CAAgCkmB,SAAhC,CAA8D,CAAA,CAA9D,CAL8B,CAWzC7yB,MAAAiB,UAAAgyB,gBAAA,CAAkCC,QAAS,EAAG,CAC1C91B,IAAA4V,iBAAA,CAAsB,uBAAtB,CAA+C,CAA/C,CAAkD,CAAlD,CAAqDhP,SAAArF,OAArD,CACA,KAAAyxB,+BAAA,CAAoC,uBAApC,CACA,KAAIyC,UAAY,IAAA7D,aAAA8D,QAAA,CAA0B9zB,cAA1B,CAChBgB,MAAAkvB,wBAAA,CAA8B2D,SAA9B,CACA,OAAO,KAAI7yB,KAAJ,CAAU,IAAA+uB,KAAV;AAAqB,IAAApiB,KAArB,CAAgCkmB,SAAhC,CAA8D,CAAA,CAA9D,CALmC,CAW9C7yB,MAAAiB,UAAAkyB,aAAA,CAA+BC,QAAS,EAAG,CACvCh2B,IAAA4V,iBAAA,CAAsB,oBAAtB,CAA4C,CAA5C,CAA+C,CAA/C,CAAkDhP,SAAArF,OAAlD,CACA,KAAAyxB,+BAAA,CAAoC,oBAApC,CACA,KAAIyC,UAAY,IAAA7D,aAAA8D,QAAA,CAA0BzK,WAA1B,CAChBroB,MAAAkvB,wBAAA,CAA8B2D,SAA9B,CACA,OAAO,KAAI7yB,KAAJ,CAAU,IAAA+uB,KAAV,CAAqB,IAAApiB,KAArB,CAAgCkmB,SAAhC,CAA8D,CAAA,CAA9D,CALgC,CAY3C7yB,MAAAiB,UAAAoyB,QAAA,CAA0BC,QAAS,CAAC9yB,KAAD,CAAQ3D,IAAR,CAAc,CAC/B,IAAK,EAAnB,GAAI2D,KAAJ,GAAwBA,KAAxB,CAAgC,IAAhC,CACApD,KAAA4V,iBAAA,CAAsB,eAAtB,CAAuC,CAAvC,CAA0C,CAA1C,CAA6ChP,SAAArF,OAA7C,CACAwS,wBAAA,CAAwB,eAAxB;AAAyC,CAAzC,CAA4C3Q,KAA5C,CAAmD,IAAAmM,KAAnD,CAA8D,CAAA,CAA9D,CACA2F,YAAA,CAAY,eAAZ,CAA6B,CAA7B,CAAgCzV,IAAhC,CAAsC,CAAA,CAAtC,CACA,KAAIg2B,UAAY,IAAA7D,aAAAqE,QAAA,CAA0B7yB,KAA1B,CAAiC3D,IAAjC,CAChBmD,MAAAgwB,eAAA,CAAqB6C,SAArB,CACA7yB,MAAAkvB,wBAAA,CAA8B2D,SAA9B,CACA,IAAI,IAAA7D,aAAAM,SAAA,EAAJ,CACI,KAAUnqB,MAAJ,CAAU,wFAAV,CAAN,CAIUoM,IAAAA,EAAd,GAAI/Q,KAAJ,GAEI3D,IAFJ,CACI2D,KADJ,CACY,IADZ,CAIA,OAAO,KAAIR,KAAJ,CAAU,IAAA+uB,KAAV,CAAqB,IAAApiB,KAArB,CAAgCkmB,SAAhC,CAA2C,IAAA5D,eAA3C,CAjBsC,CAwBjDjvB,MAAAiB,UAAAsyB,MAAA,CAAwBC,QAAS,CAAChzB,KAAD,CAAQ3D,IAAR,CAAc,CAC7B,IAAK,EAAnB,GAAI2D,KAAJ,GAAwBA,KAAxB,CAAgC,IAAhC,CACApD,KAAA4V,iBAAA,CAAsB,aAAtB;AAAqC,CAArC,CAAwC,CAAxC,CAA2ChP,SAAArF,OAA3C,CACAwS,wBAAA,CAAwB,aAAxB,CAAuC,CAAvC,CAA0C3Q,KAA1C,CAAiD,IAAAmM,KAAjD,CAA4D,CAAA,CAA5D,CACA2F,YAAA,CAAY,aAAZ,CAA2B,CAA3B,CAA8BzV,IAA9B,CAAoC,CAAA,CAApC,CACA,KAAIg2B,UAAY,IAAA7D,aAAAuE,MAAA,CAAwB/yB,KAAxB,CAA+B3D,IAA/B,CAChBmD,MAAAgwB,eAAA,CAAqB6C,SAArB,CACA7yB,MAAAkvB,wBAAA,CAA8B2D,SAA9B,CACA,IAAI,IAAA7D,aAAAQ,OAAA,EAAJ,CACI,KAAUrqB,MAAJ,CAAU,kFAAV,CAAN,CAGJ,MAAO,KAAInF,KAAJ,CAAU,IAAA+uB,KAAV,CAAqB,IAAApiB,KAArB,CAAgCkmB,SAAhC,CAA2C,IAAA5D,eAA3C,CAZoC,CAqB/CjvB,MAAAiB,UAAAwyB,QAAA,CAA0BC,QAAS,CAAClzB,KAAD,CAAQ3D,IAAR,CAAc,CAC7CO,IAAA4V,iBAAA,CAAsB,eAAtB;AAAuC,CAAvC,CAA0C,CAA1C,CAA6ChP,SAAArF,OAA7C,CACAwS,wBAAA,CAAwB,eAAxB,CAAyC,CAAzC,CAA4C3Q,KAA5C,CAAmD,IAAAmM,KAAnD,CAA8D,CAAA,CAA9D,CACA2F,YAAA,CAAY,eAAZ,CAA6B,CAA7B,CAAgCzV,IAAhC,CAAsC,CAAA,CAAtC,CACA,IAAI,IAAAmyB,aAAAM,SAAA,EAAJ,CACI,KAAUnqB,MAAJ,CAAU,wFAAV,CAAN,CAGJ,GAAI,IAAA6pB,aAAAQ,OAAA,EAAJ,CACI,KAAUrqB,MAAJ,CAAU,oFAAV,CAAN,CAGJ,MAAO,KAAAkuB,QAAA,CAAa7yB,KAAb,CAAoB3D,IAApB,CAAA02B,MAAA,CAAgC/yB,KAAhC,CAAuC3D,IAAvC,CAZsC,CAiBjDmD,MAAAiB,UAAAe,SAAA,CAA2B2xB,QAAS,EAAG,CACnCv2B,IAAA4V,iBAAA,CAAsB,gBAAtB;AAAwC,CAAxC,CAA2C,CAA3C,CAA8ChP,SAAArF,OAA9C,CACA,OAAO,KAAAowB,KAAA/sB,SAAA,EAAP,CAA8B,IAAA2K,KAAA/B,mBAAA,EAFK,CAMvC5K,MAAAiB,UAAAmT,OAAA,CAAyBwf,QAAS,EAAG,CAEjCx2B,IAAA4V,iBAAA,CAAsB,cAAtB,CAAsC,CAAtC,CAAyC,CAAzC,CAA4ChP,SAAArF,OAA5C,CACA,OAAO,KAAAqD,SAAA,EAH0B,CASrChC,MAAAiB,UAAA4yB,YAAA,CAA8BC,QAAS,EAAG,CACtC,MAAO,KAAA9E,aAAA+E,eAAA,EAD+B,CAM1C/zB,MAAAiB,UAAA+yB,gBAAA,CAAkCC,QAAS,EAAG,CAC1C,IAAIptB,IAAM,IAAAgtB,YAAA,EACN3wB,IAAAA,CAAK4D,iBAAA,CAAkBD,GAAlB,CACT,OAAc,IAAP,GAAA3D,GAAA,CAAc,SAAd,CAA0BA,GAHS,CAU9ClD,MAAAiB,UAAAizB,QAAA,CAA0BC,QAAS,CAAC5nB,KAAD,CAAQ,CACvCnP,IAAA4V,iBAAA,CAAsB,eAAtB,CAAuC,CAAvC,CAA0C,CAA1C,CAA6ChP,SAAArF,OAA7C,CACA;GAAI,EAAE4N,KAAF,WAAmBvM,MAAnB,CAAJ,CAEI,KAAUmF,MAAJ,CADMF,sFACN,CAAN,CAEJ,IAAImvB,SAAW,IAAArF,KAAXqF,GAAyB7nB,KAAAwiB,KAA7B,CACIsF,SAAW,IAAA1nB,KAAAN,OAAA,CAAiBE,KAAAI,KAAjB,CADf,CAEI2nB,oBAAsB,IAAAN,gBAAA,EAAtBM,GAAiD/nB,KAAAynB,gBAAA,EACrD,OAAOI,SAAP,EAAmBC,QAAnB,EAA+BC,mBATQ,CAmB3Ct0B,MAAA8wB,yBAAA,CAAiCyD,QAAS,CAACnjB,MAAD,CAAS0gB,eAAT,CAA0BlB,OAA1B,CAAmC,CACzE,IAAIC,IAAM,CAAEhe,OAAQ,IAAV,CAAgB+d,QAAS,IAAzB,CACV,IAAIkB,eAAJ,EAAuBlB,OAAvB,CACIC,GAAAhe,OAGA,CAHaif,eAGb,CAFA10B,IAAA6V,iBAAA,CAAsB7B,MAAtB;AAA8B,CAA9B,CAAiCyf,GAAAhe,OAAjC,CAA6C,CAAA,CAA7C,CAEA,CADAge,GAAAD,QACA,CADcA,OACd,CAAAxzB,IAAAq0B,sBAAA,CAA2BrgB,MAA3B,CAAmC,CAAnC,CAAsCyf,GAAAD,QAAtC,CAAmD,CAAA,CAAnD,CAJJ,KAMK,IAAIkB,eAAJ,CAED,GAA+B,QAA/B,GAAI,MAAOA,gBAAX,EAA+D,IAA/D,GAA2CA,eAA3C,CAEIjB,GAAAD,QAAA,CAAckB,eAFlB,KAIK,IAA+B,UAA/B,GAAI,MAAOA,gBAAX,CACDjB,GAAAhe,OAAA,CAAaif,eADZ,KAID,MAAU3sB,MAAJ,CAAU/H,IAAAqU,YAAA,CAAiBL,MAAjB,CAAyB,CAAzB,CAA4B,CAAA,CAA5B,CAAV,CACF,wDADE,CAAN,CAIR,MAAOyf,IAtBkE,CAwB7EvwB,OAAAC,eAAA,CAAsBP,KAAAiB,UAAtB,CAAuC,KAAvC,CAA8C,CAC1CO,IAAKA,QAAS,EAAG,CACb,MAAO,KAAAwpB,OAAA,EADM,CADyB,CAI1ChhB,WAAY,CAAA,CAJ8B,CAK1CC,aAAc,CAAA,CAL4B,CAA9C,CAOA;MAAOjK,MAld4B,CAAZ,EA1kB3B,CAojCIw0B,WAA4B,QAAS,EAAG,CACxCA,QAASA,WAAU,EAAG,CAClB,IAAAtzB,IAAA,CAAW,EADO,CAOtBszB,UAAAvzB,UAAAwzB,IAAA,CAA2BC,QAAS,CAACC,IAAD,CAAOntB,GAAP,CAAY,CAC5C,IAAAtG,IAAA,CAASyzB,IAAT,CAAA,CAAyB,IAAR,GAAAntB,GAAA,CAAeA,GAAf,CAAqB,CAAA,CADM,CAOhDgtB,WAAAvzB,UAAApD,SAAA,CAAgC+2B,QAAS,CAACj3B,GAAD,CAAM,CAC3C,MAAOP,KAAAS,SAAA,CAAc,IAAAqD,IAAd,CAAwBvD,GAAxB,CADoC,CAO/C62B,WAAAvzB,UAAAO,IAAA,CAA2BqzB,QAAS,CAACF,IAAD,CAAO,CACvC,MAAO,KAAA92B,SAAA,CAAc82B,IAAd,CAAA,CAAsB,IAAAzzB,IAAA,CAASyzB,IAAT,CAAtB,CAAuCpjB,IAAAA,EADP,CAM3CijB,WAAAvzB,UAAAY,OAAA,CAA8BizB,QAAS,CAACH,IAAD,CAAO,CAC1C,OAAO,IAAAzzB,IAAA,CAASyzB,IAAT,CADmC,CAM9CH,WAAAvzB,UAAA8zB,MAAA,CAA6BC,QAAS,EAAG,CACrC,IAAA9zB,IAAA,CAAW,EAD0B,CAOzCszB,WAAAvzB,UAAAhD,QAAA,CAA+Bg3B,QAAS,EAAG,CACvC,MAAO73B,KAAAa,QAAA,CAAa,IAAAiD,IAAb,CADgC,CAM3CszB;UAAAvzB,UAAAob,MAAA,CAA6B6Y,QAAS,EAAG,CACrC,MAAO93B,KAAAkxB,SAAA,CAAc,IAAAptB,IAAd,CAD8B,CAOzCszB,WAAAvzB,UAAAsG,KAAA,CAA4B4tB,QAAS,CAACxvB,EAAD,CAAK,CACtCvI,IAAAM,QAAA,CAAa,IAAAwD,IAAb,CAAuB,QAAS,CAAC8F,CAAD,CAAIU,CAAJ,CAAO,CAAE,MAAO/B,GAAA,CAAGqB,CAAH,CAAMU,CAAN,CAAT,CAAvC,CADsC,CAO1C8sB,WAAAvzB,UAAA8F,KAAA,CAA4BquB,QAAS,EAAG,CACpC,IAAIruB,KAAO,EACX3J,KAAAM,QAAA,CAAa,IAAAwD,IAAb,CAAuB,QAAS,CAAC8F,CAAD,CAAI,CAChCD,IAAAtI,KAAA,CAAUuI,CAAV,CADgC,CAApC,CAGA,OAAOD,KAL6B,CAOxC,OAAOytB,WApEiC,CAAZ,EApjChC,CAgpCIa,mBAAoC,QAAS,EAAG,CAChDA,QAASA,mBAAkB,EAAG,CAU1B,IAAA9Q,UAAA,CALA,IAAApN,OAKA,CALc,IALY,CAkB9Bke,kBAAAp0B,UAAAq0B,KAAA,CAAoCC,QAAS,CAAC5oB,IAAD,CAAO,CAChD,GAAmB,IAAnB,EAAI,IAAAwK,OAAJ,CACI,MAAO,KAAAA,OAAAU,SAAA,CAAqBlL,IAArB,CAEN,IAAKA,IAAA1O,QAAA,EAAL;AAAyC,IAAzC,EAAuB,IAAAsmB,UAAvB,CAYD,MAAO,KAXP,KAAIiR,SAAW7oB,IAAAzC,SAAA,EACfyC,KAAA,CAAOA,IAAArC,SAAA,EACP,OAAI,KAAAia,UAAA1mB,SAAA,CAAwB23B,QAAxB,CAAJ,CACoB,IAAAjR,UAAA/iB,IAAA6gB,CAAmBmT,QAAnBnT,CACTiT,KAAA,CAAe3oB,IAAf,CAFX,CAKW,IAZiC,CA0BpD0oB,mBAAAp0B,UAAAw0B,SAAA,CAAwCC,QAAS,CAAC/oB,IAAD,CAAOrH,IAAP,CAAa,CAC1D,GAAIqH,IAAA1O,QAAA,EAAJ,CACI,IAAAkZ,OACA,CADc7R,IACd,CAAA,IAAAif,UAAA,CAAiB,IAFrB,KAIK,IAAoB,IAApB,GAAI,IAAApN,OAAJ,CACD,IAAAA,OAAA,CAAc,IAAAA,OAAAkB,YAAA,CAAwB1L,IAAxB,CAA8BrH,IAA9B,CADb,KAGA,CACqB,IAAtB,EAAI,IAAAif,UAAJ,GACI,IAAAA,UADJ,CACqB,IAAIiQ,UADzB,CAGA,KAAIgB,SAAW7oB,IAAAzC,SAAA,EACV,KAAAqa,UAAA1mB,SAAA,CAAwB23B,QAAxB,CAAL,EACI,IAAAjR,UAAAkQ,IAAA,CAAmBe,QAAnB;AAA6B,IAAIH,kBAAjC,CAEA92B,SAAAA,CAAQ,IAAAgmB,UAAA/iB,IAAA,CAAmBg0B,QAAnB,CACZ7oB,KAAA,CAAOA,IAAArC,SAAA,EACP/L,SAAAk3B,SAAA,CAAe9oB,IAAf,CAAqBrH,IAArB,CAVC,CARqD,CA2B9D+vB,mBAAAp0B,UAAA00B,OAAA,CAAsCC,QAAS,CAACjpB,IAAD,CAAO,CAClD,GAAIA,IAAA1O,QAAA,EAAJ,CAGI,MADA,KAAAsmB,UACO,CAFP,IAAApN,OAEO,CAFO,IAEP,CAAA,CAAA,CAGP,IAAoB,IAApB,GAAI,IAAAA,OAAJ,CAA0B,CACtB,GAAI,IAAAA,OAAAnZ,WAAA,EAAJ,CAEI,MAAO,CAAA,CAGP,KAAIwC,MAAQ,IAAA2W,OACZ,KAAAA,OAAA,CAAc,IACd,KAAI0e,OAAS,IACbr1B,MAAAmY,aAAA,CAAmB3Z,cAAnB,CAAmC,QAAS,CAACrB,GAAD,CAAMm4B,IAAN,CAAY,CACpDD,MAAAJ,SAAA,CAAgB,IAAIhsB,IAAJ,CAAS9L,GAAT,CAAhB,CAA+Bm4B,IAA/B,CADoD,CAAxD,CAGA,OAAO,KAAAH,OAAA,CAAYhpB,IAAZ,CAZW,CAerB,MAAuB,KAAvB,GAAI,IAAA4X,UAAJ,EACGiR,KAQJ,CARe7oB,IAAAzC,SAAA,EAQf;AAPAyC,IAOA,CAPOA,IAAArC,SAAA,EAOP,CANI,IAAAia,UAAA1mB,SAAA,CAAwB23B,KAAxB,CAMJ,EALuB,IAAAjR,UAAA/iB,IAAA,CAAmBg0B,KAAnB,CAAAG,OAAAI,CAAoCppB,IAApCopB,CAKvB,EAHQ,IAAAxR,UAAA1iB,OAAA,CAAsB2zB,KAAtB,CAGR,CAAI,IAAAjR,UAAAtmB,QAAA,EAAJ,EACI,IAAAsmB,UACO,CADU,IACV,CAAA,CAAA,CAFX,EAKW,CAAA,CAdV,EAkBM,CAAA,CAxCmC,CAmDtD8Q,mBAAAp0B,UAAA+0B,YAAA,CAA2CC,QAAS,CAACC,UAAD,CAAaC,IAAb,CAAmB,CAC/C,IAApB,GAAI,IAAAhf,OAAJ,CACIgf,IAAA,CAAKD,UAAL,CAAiB,IAAA/e,OAAjB,CADJ,CAII,IAAAwB,aAAA,CAAkB,QAAS,CAAChb,GAAD,CAAMm4B,IAAN,CAAY,CAC/BnpB,GAAAA,CAAO,IAAIlD,IAAJ,CAASysB,UAAAl0B,SAAA,EAAT,CAAiC,GAAjC,CAAuCrE,GAAvC,CACXm4B,KAAAE,YAAA,CAAiBrpB,GAAjB,CAAuBwpB,IAAvB,CAFmC,CAAvC,CAL+D,CAgBvEd,mBAAAp0B,UAAA0X,aAAA,CAA4Cyd,QAAS,CAACD,IAAD,CAAO,CACjC,IAAvB,GAAI,IAAA5R,UAAJ,EACI,IAAAA,UAAAhd,KAAA,CAAoB,QAAS,CAAC5J,GAAD;AAAMm4B,IAAN,CAAY,CACrCK,IAAA,CAAKx4B,GAAL,CAAUm4B,IAAV,CADqC,CAAzC,CAFoD,CAO5D,OAAOT,mBAlJyC,CAAZ,EAhpCxC,CAs0CIgB,qBAAuBA,QAAS,CAAC71B,KAAD,CAAQ81B,YAAR,CAAsB,CACtD,MAAK91B,MAAL,EAA+B,QAA/B,GAAc,MAAOA,MAArB,EAIIpD,IAAAC,OAAA,CAAY,KAAZ,EAAqBmD,MAArB,CAA4B,2CAA5B,CACO,CAAA81B,YAAA,CAAa91B,KAAA,CAAM,KAAN,CAAb,CALX,EACWA,KAF2C,CAt0C1D,CAs1CI+1B,yBAA2BA,QAAS,CAACT,IAAD,CAAOQ,YAAP,CAAqB,CACzD,IAAIE,aAAe,IAAInB,kBACvBS,KAAAE,YAAA,CAAiB,IAAIvsB,IAAJ,CAAS,EAAT,CAAjB,CAA+B,QAAS,CAACkD,IAAD,CAAOmI,IAAP,CAAa,CACjD0hB,YAAAf,SAAA,CAAsB9oB,IAAtB,CAA4B8pB,4BAAA,CAA6B3hB,IAA7B,CAAmCwhB,YAAnC,CAA5B,CADiD,CAArD,CAGA,OAAOE,aALkD,CAt1C7D,CAq2CIC;AAA+BA,QAAS,CAAC3hB,IAAD,CAAOwhB,YAAP,CAAqB,CAC7D,IAAII,OAAS5hB,IAAAtW,YAAA,EAAAgJ,IAAA,EACTvK,OAAAA,CAAWo5B,oBAAA,CAAqBK,MAArB,CAA6BJ,YAA7B,CAEf,IAAIxhB,IAAA9W,WAAA,EAAJ,CAAuB,CAEnB,IAAIwC,MAAQ61B,oBAAA,CADGvhB,IACkBmE,SAAA,EAArB,CAA0Cqd,YAA1C,CACZ,OAAI91B,MAAJ,GAFesU,IAEDmE,SAAA,EAAd,EACIhc,MADJ,GAFe6X,IAGEtW,YAAA,EAAAgJ,IAAA,EADjB,CAEW,IAAIlK,QAAJ,CAAakD,KAAb,CAAoBzD,cAAA,CAAeE,MAAf,CAApB,CAFX,CAKW6X,IARQ,CAanB,IAAAS,QADmBT,IAEf7X,OAAJ,GAFmB6X,IAEFtW,YAAA,EAAAgJ,IAAA,EAAjB,GACI+N,OADJ,CACcA,OAAApX,eAAA,CAAuB,IAAIb,QAAJ,CAAaL,MAAb,CAAvB,CADd,CAFmB6X,KAKnB6D,aAAA,CAA0B3Z,cAA1B,CAA0C,QAAS,CAAC4Y,SAAD,CAAY7Z,SAAZ,CAAuB,CACtE,IAAIqa,aAAeqe,4BAAA,CAA6B14B,SAA7B;AAAwCu4B,YAAxC,CACfle,aAAJ,GAAqBra,SAArB,GACIwX,OADJ,CACcA,OAAArX,qBAAA,CAA6B0Z,SAA7B,CAAwCQ,YAAxC,CADd,CAFsE,CAA1E,CAMA,OAAO7C,QA3BkD,CAr2CjE,CAw5CIohB,aACH,UAAS,CAACA,aAAD,CAAgB,CACtBA,aAAA,CAAcA,aAAA,UAAd,CAA2C,CAA3C,CAAA,CAAgD,WAChDA,cAAA,CAAcA,aAAA,MAAd,CAAuC,CAAvC,CAAA,CAA4C,OAC5CA,cAAA,CAAcA,aAAA,eAAd,CAAgD,CAAhD,CAAA,CAAqD,gBACrDA,cAAA,CAAcA,aAAA,gBAAd,CAAiD,CAAjD,CAAA,CAAsD,iBAJhC,CAAzB,CAAD,CAKGA,aALH,GAKqBA,aALrB,CAKqC,EALrC,EAaA,KAAIC,gBAAiC,QAAS,EAAG,CAC7CA,QAASA,gBAAe,CAACC,QAAD,CAAWC,UAAX,CAAuBC,OAAvB;AAAgCC,MAAhC,CAAwC,CAC5D,IAAAH,SAAA,CAAgBA,QAChB,KAAAC,WAAA,CAAkBA,UAClB,KAAAC,QAAA,CAAeA,OACf,KAAAC,OAAA,CAAcA,MACd55B,KAAAC,OAAA,CAAY,CAAC25B,MAAb,EAAuBF,UAAvB,CAAmC,qCAAnC,CAL4D,CAWhEF,eAAAK,KAAA,CAAuB,IAAIL,eAAJ,CACT,CAAA,CADS,CACH,CAAA,CADG,CACI,IADJ,CAEX,CAAA,CAFW,CAOvBA,gBAAAM,OAAA,CAAyB,IAAIN,eAAJ,CAAoB,CAAA,CAApB,CACT,CAAA,CADS,CACH,IADG,CAEb,CAAA,CAFa,CAOzBA,gBAAAO,qBAAA,CAAuCC,QAAS,CAACL,OAAD,CAAU,CACtD,MAAO,KAAIH,eAAJ,CAAoB,CAAA,CAApB,CACS,CAAA,CADT,CACeG,OADf,CAEK,CAAA,CAFL,CAD+C,CAK1D,OAAOH,gBA/BsC,CAAZ,EAArC,CAkDIS,aAA8B,QAAS,EAAG,CAO1CA,QAASA,aAAY,CACH1qB,IADG,CAEH2qB,YAFG,CAGHC,MAHG,CAGK,CACtB,IAAA5qB,KAAA,CAAYA,IACZ,KAAA2qB,aAAA;AAAoBA,YACpB,KAAAC,OAAA,CAAcA,MAEd,KAAAvoB,KAAA,CAAY2nB,aAAAa,eAEZ,KAAAC,OAAA,CAAcb,eAAAK,KAPQ,CAY1BI,YAAAp2B,UAAAy2B,kBAAA,CAA2CC,QAAS,CAAC/f,SAAD,CAAY,CAC5D,GAAK,IAAAjL,KAAA1O,QAAA,EAAL,CAIK,CAAA,GAA+B,IAA/B,EAAI,IAAAq5B,aAAA92B,MAAJ,CAGD,MAFApD,KAAAC,OAAA,CAAY,IAAAi6B,aAAAM,SAAA35B,QAAA,EAAZ,CAAkD,0DAAlD,CAEO,CAAA,IAGHokB,UAAAA,CAAY,IAAAiV,aAAAO,QAAA,CAA0B,IAAIpuB,IAAJ,CAASmO,SAAT,CAA1B,CAChB,OAAO,KAAIyf,YAAJ,CAAiB5tB,IAAAquB,MAAjB,CAA6BzV,SAA7B,CAAwC,IAAAkV,OAAxC,CAPN,CAHDn6B,IAAAC,OAAA,CAAY,IAAAsP,KAAAzC,SAAA,EAAZ,GAAqC0N,SAArC;AAAgD,+CAAhD,CACA,OAAO,KAAIyf,YAAJ,CAAiB,IAAA1qB,KAAArC,SAAA,EAAjB,CAAuC,IAAAgtB,aAAvC,CAA0D,IAAAC,OAA1D,CAHiD,CAehE,OAAOF,aArCmC,CAAZ,EAlDlC,CA0GIU,sBA1GJ,CA0HIC,cAA+B,QAAS,EAAG,CAM3CA,QAASA,cAAa,CAACx3B,KAAD,CAAQo3B,QAAR,CAAkB,CACnB,IAAK,EAAtB,GAAIA,QAAJ,GAfCG,sBAGL,GAFIA,sBAEJ,CAF6B,IAAI7b,SAAJ,CAAcvV,aAAd,CAE7B,EAAA,QAAA,CAAOoxB,sBAYH,CACA,KAAAv3B,MAAA,CAAaA,KACb,KAAAo3B,SAAA,CAAgBA,QAHoB,CAUxCI,aAAAC,WAAA,CAA2BC,QAAS,CAACrxB,GAAD,CAAM,CACtC,IAAIivB,KAAOkC,aAAAF,MACX16B,KAAAM,QAAA,CAAamJ,GAAb,CAAkB,QAAS,CAAC0jB,SAAD;AAAY4N,SAAZ,CAAuB,CAC9CrC,IAAA,CAAOA,IAAA50B,IAAA,CAAS,IAAIuI,IAAJ,CAAS8gB,SAAT,CAAT,CAA8B4N,SAA9B,CADuC,CAAlD,CAGA,OAAOrC,KAL+B,CAW1CkC,cAAA/2B,UAAAhD,QAAA,CAAkCm6B,QAAS,EAAG,CAC1C,MAAsB,KAAtB,GAAO,IAAA53B,MAAP,EAA8B,IAAAo3B,SAAA35B,QAAA,EADY,CAe9C+5B,cAAA/2B,UAAAo3B,iCAAA,CAA2DC,QAAS,CAAC5sB,YAAD,CAAe6sB,SAAf,CAA0B,CAC1F,GAAkB,IAAlB,EAAI,IAAA/3B,MAAJ,EAA0B+3B,SAAA,CAAU,IAAA/3B,MAAV,CAA1B,CACI,MAAO,CAAEmM,KAAMlD,IAAAquB,MAAR,CAAoBt3B,MAAO,IAAAA,MAA3B,CAGP,IAAIkL,YAAAzN,QAAA,EAAJ,CACI,MAAO,KAGP,KAAIsa,MAAQ7M,YAAAxB,SAAA,EAAZ,CACI3L,MAAQ,IAAAq5B,SAAAp2B,IAAA,CAAkB+W,KAAlB,CACZ,OAAc,KAAd,GAAIha,KAAJ,EACQi6B,YACJ,CADgCj6B,KAAA85B,iCAAA,CAAuC3sB,YAAApB,SAAA,EAAvC;AAAgEiuB,SAAhE,CAChC,CAAiC,IAAjC,EAAIC,YAAJ,CAEW,CAAE7rB,KADMpO,CAAA,IAAIkL,IAAJ,CAAS8O,KAAT,CAAAha,OAAAk6B,CAAsBD,YAAA7rB,KAAtB8rB,CACR,CAAkBj4B,MAAOg4B,YAAAh4B,MAAzB,CAFX,CAKW,IAPf,EAWW,IAtBuE,CAiC9Fw3B,cAAA/2B,UAAAy3B,yBAAA,CAAmDC,QAAS,CAACjtB,YAAD,CAAe,CACvE,MAAO,KAAA2sB,iCAAA,CAAsC3sB,YAAtC,CAAoD,QAAS,EAAG,CAAE,MAAO,CAAA,CAAT,CAAhE,CADgE,CAO3EssB,cAAA/2B,UAAA42B,QAAA,CAAkCe,QAAS,CAACltB,YAAD,CAAe,CACtD,GAAIA,YAAAzN,QAAA,EAAJ,CACI,MAAO,KAGP,KAAIsa,MAAQ7M,YAAAxB,SAAA,EACRmY,MAAAA,CAAY,IAAAuV,SAAAp2B,IAAA,CAAkB+W,KAAlB,CAChB,OAAkB,KAAlB,GAAI8J,KAAJ,CACWA,KAAAwV,QAAA,CAAkBnsB,YAAApB,SAAA,EAAlB,CADX,CAIW0tB,aAAAF,MAXuC,CAsB1DE;aAAA/2B,UAAAC,IAAA,CAA8B23B,QAAS,CAACntB,YAAD,CAAeotB,KAAf,CAAsB,CACzD,GAAIptB,YAAAzN,QAAA,EAAJ,CACI,MAAO,KAAI+5B,aAAJ,CAAkBc,KAAlB,CAAyB,IAAAlB,SAAzB,CAGP,KAAIrf,MAAQ7M,YAAAxB,SAAA,EAER6uB,aAAAA,CAAW73B,CADH,IAAA02B,SAAAp2B,IAAA,CAAkB+W,KAAlB,CACGrX,EADyB82B,aAAAF,MACzB52B,KAAA,CAAUwK,YAAApB,SAAA,EAAV,CAAmCwuB,KAAnC,CACX1U,MAAAA,CAAc,IAAAwT,SAAA1a,OAAA,CAAqB3E,KAArB,CAA4BwgB,YAA5B,CAClB,OAAO,KAAIf,aAAJ,CAAkB,IAAAx3B,MAAlB,CAA8B4jB,KAA9B,CAT8C,CAkB7D4T,cAAA/2B,UAAAY,OAAA,CAAiCm3B,QAAS,CAACttB,YAAD,CAAe,CACrD,GAAIA,YAAAzN,QAAA,EAAJ,CACI,MAAI,KAAA25B,SAAA35B,QAAA,EAAJ,CACW+5B,aAAAF,MADX,CAIW,IAAIE,aAAJ,CAAkB,IAAlB;AAAwB,IAAAJ,SAAxB,CAIX,KAAIrf,MAAQ7M,YAAAxB,SAAA,EAAZ,CACI3L,MAAQ,IAAAq5B,SAAAp2B,IAAA,CAAkB+W,KAAlB,CACZ,OAAIha,MAAJ,EACQw6B,YAQJ,CARex6B,KAAAsD,OAAA,CAAa6J,YAAApB,SAAA,EAAb,CAQf,CALI8Z,KAKJ,CANI2U,YAAA96B,QAAA,EAAJ,CACkB,IAAA25B,SAAA/1B,OAAA,CAAqB0W,KAArB,CADlB,CAIkB,IAAAqf,SAAA1a,OAAA,CAAqB3E,KAArB,CAA4BwgB,YAA5B,CAElB,CAAmB,IAAnB,GAAI,IAAAv4B,MAAJ,EAA2B4jB,KAAAnmB,QAAA,EAA3B,CACW+5B,aAAAF,MADX,CAIW,IAAIE,aAAJ,CAAkB,IAAAx3B,MAAlB,CAA8B4jB,KAA9B,CAbf,EAiBW,IA7BsC,CAuCzD4T,cAAA/2B,UAAAO,IAAA,CAA8By3B,QAAS,CAACvtB,YAAD,CAAe,CAClD,GAAIA,YAAAzN,QAAA,EAAJ,CACI,MAAO,KAAAuC,MAGP,KAAI+X,MAAQ7M,YAAAxB,SAAA,EAEZ,OAAA,CADI3L,KACJ,CADY,IAAAq5B,SAAAp2B,IAAA,CAAkB+W,KAAlB,CACZ;AACWha,KAAAiD,IAAA,CAAUkK,YAAApB,SAAA,EAAV,CADX,CAIW,IAXmC,CAsBtD0tB,cAAA/2B,UAAAi4B,QAAA,CAAkCC,QAAS,CAACztB,YAAD,CAAe0tB,OAAf,CAAwB,CAC/D,GAAI1tB,YAAAzN,QAAA,EAAJ,CACI,MAAOm7B,QAGP,KAAI7gB,MAAQ7M,YAAAxB,SAAA,EAER6uB,aAAAA,CAAWG,CADH,IAAAtB,SAAAp2B,IAAA,CAAkB+W,KAAlB,CACG2gB,EADyBlB,aAAAF,MACzBoB,SAAA,CAAcxtB,YAAApB,SAAA,EAAd,CAAuC8uB,OAAvC,CAGXhV,MAAA,CADA2U,YAAA96B,QAAA,EAAJ,CACkB,IAAA25B,SAAA/1B,OAAA,CAAqB0W,KAArB,CADlB,CAIkB,IAAAqf,SAAA1a,OAAA,CAAqB3E,KAArB,CAA4BwgB,YAA5B,CAElB,OAAO,KAAIf,aAAJ,CAAkB,IAAAx3B,MAAlB,CAA8B4jB,KAA9B,CAfoD,CA0BnE4T,cAAA/2B,UAAAo4B,KAAA,CAA+BC,QAAS,CAAC3zB,EAAD,CAAK,CACzC,MAAO,KAAA4zB,MAAA,CAAW9vB,IAAAquB,MAAX,CAAuBnyB,EAAvB,CADkC,CAW7CqyB,cAAA/2B,UAAAs4B,MAAA;AAAgCC,QAAS,CAACC,SAAD,CAAY9zB,EAAZ,CAAgB,CACrD,IAAI+zB,MAAQ,EACZ,KAAA9B,SAAApb,iBAAA,CAA+B,QAAS,CAACgZ,QAAD,CAAWnT,SAAX,CAAsB,CAC1DqX,KAAA,CAAMlE,QAAN,CAAA,CAAkBnT,SAAAkX,MAAA,CAAgBE,SAAAl7B,MAAA,CAAgBi3B,QAAhB,CAAhB,CAA2C7vB,EAA3C,CADwC,CAA9D,CAGA,OAAOA,GAAA,CAAG8zB,SAAH,CAAc,IAAAj5B,MAAd,CAA0Bk5B,KAA1B,CAL8C,CAczD1B,cAAA/2B,UAAA04B,WAAA,CAAqCC,QAAS,CAACjtB,IAAD,CAAOhF,CAAP,CAAU,CACpD,MAAO,KAAAkyB,YAAA,CAAiBltB,IAAjB,CAAuBlD,IAAAquB,MAAvB,CAAmCnwB,CAAnC,CAD6C,CAGxDqwB,cAAA/2B,UAAA44B,YAAA,CAAsCC,QAAS,CAACC,YAAD,CAAeN,SAAf,CAA0B9xB,CAA1B,CAA6B,CACxE,IAAI+T,OAAS,IAAAlb,MAAA,CAAamH,CAAA,CAAE8xB,SAAF,CAAa,IAAAj5B,MAAb,CAAb,CAAwC,CAAA,CACrD,IAAIkb,MAAJ,CACI,MAAOA,OAGP,IAAIqe,YAAA97B,QAAA,EAAJ,CACI,MAAO,KAGHsa,OAAAA,CAAQwhB,YAAA7vB,SAAA,EACZ;IAAI8vB,UAAY,IAAApC,SAAAp2B,IAAA,CAAkB+W,MAAlB,CAChB,OAAIyhB,UAAJ,CACWA,SAAAH,YAAA,CAAsBE,YAAAzvB,SAAA,EAAtB,CAA+CmvB,SAAAl7B,MAAA,CAAgBga,MAAhB,CAA/C,CAAuE5Q,CAAvE,CADX,CAIW,IAhBqD,CA2B5EqwB,cAAA/2B,UAAAg5B,cAAA,CAAwCC,QAAS,CAACvtB,IAAD,CAAOhF,CAAP,CAAU,CACvD,MAAO,KAAAwyB,eAAA,CAAoBxtB,IAApB,CAA0BlD,IAAAquB,MAA1B,CAAsCnwB,CAAtC,CADgD,CAG3DqwB,cAAA/2B,UAAAk5B,eAAA,CAAyCC,QAAS,CAACL,YAAD,CAAeM,mBAAf,CAAoC1yB,CAApC,CAAuC,CACrF,GAAIoyB,YAAA97B,QAAA,EAAJ,CACI,MAAO,KAGH,KAAAuC,MAAJ,EACImH,CAAA,CAAE0yB,mBAAF,CAAuB,IAAA75B,MAAvB,CAEJ,KAAI+X,MAAQwhB,YAAA7vB,SAAA,EAAZ,CACI8vB,UAAY,IAAApC,SAAAp2B,IAAA,CAAkB+W,KAAlB,CAChB,OAAIyhB,UAAJ,CACWA,SAAAG,eAAA,CAAyBJ,YAAAzvB,SAAA,EAAzB;AAAkD+vB,mBAAA97B,MAAA,CAA0Bga,KAA1B,CAAlD,CAAoF5Q,CAApF,CADX,CAIWqwB,aAAAF,MAdsE,CAyBzFE,cAAA/2B,UAAAq5B,QAAA,CAAkCC,QAAS,CAAC5yB,CAAD,CAAI,CAC3C,IAAA6yB,SAAA,CAAc/wB,IAAAquB,MAAd,CAA0BnwB,CAA1B,CAD2C,CAG/CqwB,cAAA/2B,UAAAu5B,SAAA,CAAmCC,QAAS,CAACJ,mBAAD,CAAsB1yB,CAAtB,CAAyB,CACjE,IAAAiwB,SAAApb,iBAAA,CAA+B,QAAS,CAAC5E,SAAD,CAAYyK,SAAZ,CAAuB,CAC3DA,SAAAmY,SAAA,CAAmBH,mBAAA97B,MAAA,CAA0BqZ,SAA1B,CAAnB,CAAyDjQ,CAAzD,CAD2D,CAA/D,CAGI,KAAAnH,MAAJ,EACImH,CAAA,CAAE0yB,mBAAF,CAAuB,IAAA75B,MAAvB,CAL6D,CAYrEw3B,cAAA/2B,UAAAy5B,aAAA,CAAuCC,QAAS,CAAChzB,CAAD,CAAI,CAChD,IAAAiwB,SAAApb,iBAAA,CAA+B,QAAS,CAAC5E,SAAD,CAAYyK,SAAZ,CAAuB,CACvDA,SAAA7hB,MAAJ,EACImH,CAAA,CAAEiQ,SAAF;AAAayK,SAAA7hB,MAAb,CAFuD,CAA/D,CADgD,CAOpDw3B,cAAAF,MAAA,CAAsB,IAAIE,aAAJ,CAAkB,IAAlB,CACtB,OAAOA,cA3ToC,CAAZ,EA1HnC,CA8cI4C,eAAgC,QAAS,EAAG,CAC5CA,QAASA,eAAc,CAACnD,MAAD,CAAS9qB,IAAT,CAAe,CAClC,IAAA8qB,OAAA,CAAcA,MACd,KAAA9qB,KAAA,CAAYA,IAEZ,KAAAqC,KAAA,CAAY2nB,aAAAkE,gBAJsB,CAMtCD,cAAA35B,UAAAy2B,kBAAA,CAA6CoD,QAAS,CAACljB,SAAD,CAAY,CAC9D,MAAI,KAAAjL,KAAA1O,QAAA,EAAJ,CACW,IAAI28B,cAAJ,CAAmB,IAAAnD,OAAnB,CAAgChuB,IAAAquB,MAAhC,CADX,CAIW,IAAI8C,cAAJ,CAAmB,IAAAnD,OAAnB,CAAgC,IAAA9qB,KAAArC,SAAA,EAAhC,CALmD,CAQlE,OAAOswB,eAfqC,CAAZ,EA9cpC,CAufIG,UAA2B,QAAS,EAAG,CACvCA,QAASA,UAAS,CAACtD,MAAD,CAAS9qB,IAAT,CAAewc,IAAf,CAAqB,CACnC,IAAAsO,OAAA;AAAcA,MACd,KAAA9qB,KAAA,CAAYA,IACZ,KAAAwc,KAAA,CAAYA,IAEZ,KAAAna,KAAA,CAAY2nB,aAAAqE,UALuB,CAOvCD,SAAA95B,UAAAy2B,kBAAA,CAAwCuD,QAAS,CAACrjB,SAAD,CAAY,CACzD,MAAI,KAAAjL,KAAA1O,QAAA,EAAJ,CACW,IAAI88B,SAAJ,CAAc,IAAAtD,OAAd,CAA2BhuB,IAAAquB,MAA3B,CAAuC,IAAA3O,KAAAzR,kBAAA,CAA4BE,SAA5B,CAAvC,CADX,CAIW,IAAImjB,SAAJ,CAAc,IAAAtD,OAAd,CAA2B,IAAA9qB,KAAArC,SAAA,EAA3B,CAAiD,IAAA6e,KAAjD,CAL8C,CAQ7D,OAAO4R,UAhBgC,CAAZ,EAvf/B,CAiiBIG,MAAuB,QAAS,EAAG,CACnCA,QAASA,MAAK,CACIzD,MADJ,CAEI9qB,IAFJ,CAGIirB,QAHJ,CAGc,CACxB,IAAAH,OAAA,CAAcA,MACd,KAAA9qB,KAAA,CAAYA,IACZ,KAAAirB,SAAA,CAAgBA,QAEhB,KAAA5oB,KAAA,CAAY2nB,aAAAwE,MALY,CAU5BD,KAAAj6B,UAAAy2B,kBAAA,CAAoC0D,QAAS,CAACxjB,SAAD,CAAY,CACrD,GAAI,IAAAjL,KAAA1O,QAAA,EAAJ,CAEI,MADIokB,UACJ;AADgB,IAAAuV,SAAAC,QAAA,CAAsB,IAAIpuB,IAAJ,CAASmO,SAAT,CAAtB,CAChB,CAAIyK,SAAApkB,QAAA,EAAJ,CAEW,IAFX,CAISokB,SAAA7hB,MAAJ,CAEM,IAAIu6B,SAAJ,CAAc,IAAAtD,OAAd,CAA2BhuB,IAAAquB,MAA3B,CAAuCzV,SAAA7hB,MAAvC,CAFN,CAMM,IAAI06B,KAAJ,CAAU,IAAAzD,OAAV,CAAuBhuB,IAAAquB,MAAvB,CAAmCzV,SAAnC,CAIXjlB,KAAAC,OAAA,CAAY,IAAAsP,KAAAzC,SAAA,EAAZ,GAAqC0N,SAArC,CAAgD,gEAAhD,CACA,OAAO,KAAIsjB,KAAJ,CAAU,IAAAzD,OAAV,CAAuB,IAAA9qB,KAAArC,SAAA,EAAvB,CAA6C,IAAAstB,SAA7C,CAlB0C,CAwBzDsD,MAAAj6B,UAAAe,SAAA,CAA2Bq5B,QAAS,EAAG,CACnC,MAAQ,YAAR,CACI,IAAA1uB,KADJ,CAEI,IAFJ,CAGI,IAAA8qB,OAAAz1B,SAAA,EAHJ,CAII,UAJJ,CAKI,IAAA41B,SAAA51B,SAAA,EALJ,CAMI,GAP+B,CASvC,OAAOk5B,MA/C4B,CAAZ,EAjiB3B;AAymBII,UAA2B,QAAS,EAAG,CAMvCA,QAASA,UAAS,CAAC1R,KAAD,CAAQ2R,iBAAR,CAA2BC,SAA3B,CAAsC,CACpD,IAAA5R,MAAA,CAAaA,KACb,KAAA2R,kBAAA,CAAyBA,iBACzB,KAAAC,UAAA,CAAiBA,SAHmC,CASxDF,SAAAr6B,UAAAw6B,mBAAA,CAAyCC,QAAS,EAAG,CACjD,MAAO,KAAAH,kBAD0C,CAOrDD,UAAAr6B,UAAA06B,WAAA,CAAiCC,QAAS,EAAG,CACzC,MAAO,KAAAJ,UADkC,CAO7CF,UAAAr6B,UAAA46B,kBAAA,CAAwCC,QAAS,CAACnvB,IAAD,CAAO,CACpD,GAAIA,IAAA1O,QAAA,EAAJ,CACI,MAAO,KAAAw9B,mBAAA,EAAP,EAAoC,CAAC,IAAAD,UAErChG,KAAAA,CAAW7oB,IAAAzC,SAAA,EACf,OAAO,KAAA6xB,mBAAA,CAAwBvG,IAAxB,CAL6C,CAWxD8F,UAAAr6B,UAAA86B,mBAAA;AAAyCC,QAAS,CAACr+B,GAAD,CAAM,CACpD,MAAS,KAAA89B,mBAAA,EAAT,EAAsC,CAAC,IAAAD,UAAvC,EAA0D,IAAA5R,MAAA7R,SAAA,CAAoBpa,GAApB,CADN,CAMxD29B,UAAAr6B,UAAAg7B,QAAA,CAA8BC,QAAS,EAAG,CACtC,MAAO,KAAAtS,MAD+B,CAG1C,OAAO0R,UAjDgC,CAAZ,EAzmB/B,CAorBIa,UAA2B,QAAS,EAAG,CAMvCA,QAASA,UAAS,CAACC,WAAD,CAAcC,YAAd,CAA4B,CAC1C,IAAAD,YAAA,CAAmBA,WACnB,KAAAC,aAAA,CAAoBA,YAFsB,CAU9CF,SAAAl7B,UAAAq7B,gBAAA,CAAsCC,QAAS,CAACC,SAAD,CAAYC,QAAZ,CAAsBC,QAAtB,CAAgC,CAC3E,MAAO,KAAIP,SAAJ,CAAc,IAAIb,SAAJ,CAAckB,SAAd,CAAyBC,QAAzB,CAAmCC,QAAnC,CAAd,CAA4D,IAAAL,aAA5D,CADoE,CAS/EF,UAAAl7B,UAAA07B,iBAAA,CAAuCC,QAAS,CAACC,UAAD;AAAaJ,QAAb,CAAuBC,QAAvB,CAAiC,CAC7E,MAAO,KAAIP,SAAJ,CAAc,IAAAC,YAAd,CAAgC,IAAId,SAAJ,CAAcuB,UAAd,CAA0BJ,QAA1B,CAAoCC,QAApC,CAAhC,CADsE,CAMjFP,UAAAl7B,UAAA67B,cAAA,CAAoCC,QAAS,EAAG,CAC5C,MAAO,KAAAX,YADqC,CAMhDD,UAAAl7B,UAAA+7B,qBAAA,CAA2CC,QAAS,EAAG,CACnD,MAAO,KAAAb,YAAAX,mBAAA,EAAA,CACD,IAAAW,YAAAH,QAAA,EADC,CAED,IAH6C,CAQvDE,UAAAl7B,UAAAi8B,eAAA,CAAqCC,QAAS,EAAG,CAC7C,MAAO,KAAAd,aADsC,CAMjDF,UAAAl7B,UAAAm8B,sBAAA,CAA4CC,QAAS,EAAG,CACpD,MAAO,KAAAhB,aAAAZ,mBAAA,EAAA,CACD,IAAAY,aAAAJ,QAAA,EADC;AAED,IAH8C,CASxDE,UAAArE,MAAA,CAAkB,IAAIqE,SAAJ,CAAc,IAAIb,SAAJ,CAAcp+B,YAAAC,WAAd,CACV,CAAA,CADU,CAElB,CAAA,CAFkB,CAAd,CAEI,IAAIm+B,SAAJ,CAAcp+B,YAAAC,WAAd,CACA,CAAA,CADA,CAER,CAAA,CAFQ,CAFJ,CAKlB,OAAOg/B,UAjEgC,CAAZ,EAprB/B,CAixBImB,OAAwB,QAAS,EAAG,CACpCA,QAASA,OAAM,CAACtuB,IAAD,CAAO+d,YAAP,CAAqBnV,SAArB,CAAgC2lB,OAAhC,CAAyCnS,QAAzC,CAAmD,CAC9D,IAAApc,KAAA,CAAYA,IACZ,KAAA+d,aAAA,CAAoBA,YACpB,KAAAnV,UAAA,CAAiBA,SACjB,KAAA2lB,QAAA,CAAeA,OACf,KAAAnS,SAAA,CAAgBA,QAL8C,CAWlEkS,MAAAE,YAAA,CAAqBC,QAAS,CAACtpB,QAAD,CAAW,CACrC,MAAO,KAAImpB,MAAJ,CAAWA,MAAAI,MAAX,CAAyBvpB,QAAzB,CAD8B,CAQzCmpB,OAAAK,iBAAA,CAA0BC,QAAS,CAACpI,QAAD,CAAWrhB,QAAX,CAAqB,CACpD,MAAO,KAAImpB,MAAJ,CAAWA,MAAAO,YAAX;AAA+B1pB,QAA/B,CAAyCqhB,QAAzC,CAD6C,CAQxD8H,OAAAQ,mBAAA,CAA4BC,QAAS,CAACvI,QAAD,CAAWrhB,QAAX,CAAqB,CACtD,MAAO,KAAImpB,MAAJ,CAAWA,MAAAU,cAAX,CAAiC7pB,QAAjC,CAA2CqhB,QAA3C,CAD+C,CAS1D8H,OAAAW,mBAAA,CAA4BC,QAAS,CAAC1I,QAAD,CAAW2I,WAAX,CAAwBC,WAAxB,CAAqC,CACtE,MAAO,KAAId,MAAJ,CAAWA,MAAAe,cAAX,CAAiCF,WAAjC,CAA8C3I,QAA9C,CAAwD4I,WAAxD,CAD+D,CAQ1Ed,OAAAgB,iBAAA,CAA0BC,QAAS,CAAC/I,QAAD,CAAWrhB,QAAX,CAAqB,CACpD,MAAO,KAAImpB,MAAJ,CAAWA,MAAAkB,YAAX,CAA+BrqB,QAA/B,CAAyCqhB,QAAzC,CAD6C,CAKxD8H,OAAAO,YAAA,CAAqB,aAErBP,OAAAU,cAAA,CAAuB,eAEvBV,OAAAe,cAAA,CAAuB,eAEvBf,OAAAkB,YAAA;AAAqB,aAErBlB,OAAAI,MAAA,CAAe,OACf,OAAOJ,OA3D6B,CAAZ,EAjxB5B,CAs2BImB,cAA+B,QAAS,EAAG,CAC3CA,QAASA,cAAa,CAAC3U,MAAD,CAAS,CAC3B,IAAAA,OAAA,CAAcA,MADa,CAG/B2U,aAAAx9B,UAAAoX,YAAA,CAAsCqmB,QAAS,CAACvV,IAAD,CAAOxrB,GAAP,CAAYo7B,QAAZ,CAAsB4F,YAAtB,CAAoClH,MAApC,CAA4CmH,oBAA5C,CAAkE,CAC7GxhC,IAAAC,OAAA,CAAY8rB,IAAAjP,UAAA,CAAe,IAAA4P,OAAf,CAAZ,CAAyC,mDAAzC,CACI+U,OAAAA,CAAW1V,IAAAzR,kBAAA,CAAuB/Z,GAAvB,CAEf,IAAIkhC,MAAAhnB,SAAA,CAAkB8mB,YAAlB,CAAAtyB,OAAA,CAAuC0sB,QAAAlhB,SAAA,CAAkB8mB,YAAlB,CAAvC,CAAJ,EAIQE,MAAA5gC,QAAA,EAJR,EAI8B86B,QAAA96B,QAAA,EAJ9B,CAQQ,MAAOkrB,KAGa,KAA5B,EAAIyV,oBAAJ;CACQ7F,QAAA96B,QAAA,EAAJ,CACQkrB,IAAApR,SAAA,CAAcpa,GAAd,CAAJ,CACIihC,oBAAAE,iBAAA,CAAsCxB,MAAAQ,mBAAA,CAA0BngC,GAA1B,CAA+BkhC,MAA/B,CAAtC,CADJ,CAIIzhC,IAAAC,OAAA,CAAY8rB,IAAAnrB,WAAA,EAAZ,CAA+B,qEAA/B,CALR,CAQS6gC,MAAA5gC,QAAA,EAAJ,CACD2gC,oBAAAE,iBAAA,CAAsCxB,MAAAK,iBAAA,CAAwBhgC,GAAxB,CAA6Bo7B,QAA7B,CAAtC,CADC,CAID6F,oBAAAE,iBAAA,CAAsCxB,MAAAW,mBAAA,CAA0BtgC,GAA1B,CAA+Bo7B,QAA/B,CAAyC8F,MAAzC,CAAtC,CAbR,CAgBA,OAAI1V,KAAAnrB,WAAA,EAAJ,EAAyB+6B,QAAA96B,QAAA,EAAzB,CACWkrB,IADX,CAKWA,IAAAjrB,qBAAA,CAA0BP,GAA1B,CAA+Bo7B,QAA/B,CAAA/e,UAAA,CAAmD,IAAA8P,OAAnD,CApCkG,CA0CjH2U;aAAAx9B,UAAA89B,eAAA,CAAyCC,QAAS,CAACzB,OAAD,CAAU0B,OAAV,CAAmBL,oBAAnB,CAAyC,CAC3D,IAA5B,EAAIA,oBAAJ,GACSrB,OAAAv/B,WAAA,EAOL,EANIu/B,OAAA5kB,aAAA,CAAqB3Z,cAArB,CAAqC,QAAS,CAACrB,GAAD,CAAMI,SAAN,CAAiB,CACtDkhC,OAAAlnB,SAAA,CAAiBpa,GAAjB,CAAL,EACIihC,oBAAAE,iBAAA,CAAsCxB,MAAAQ,mBAAA,CAA0BngC,GAA1B,CAA+BI,SAA/B,CAAtC,CAFuD,CAA/D,CAMJ,CAAKkhC,OAAAjhC,WAAA,EAAL,EACIihC,OAAAtmB,aAAA,CAAqB3Z,cAArB,CAAqC,QAAS,CAACrB,GAAD,CAAMI,SAAN,CAAiB,CAC3D,GAAIw/B,OAAAxlB,SAAA,CAAiBpa,GAAjB,CAAJ,CAA2B,CACvB,IAAIkhC,SAAWtB,OAAA7lB,kBAAA,CAA0B/Z,GAA1B,CACVkhC,SAAAxyB,OAAA,CAAgBtO,SAAhB,CAAL,EACI6gC,oBAAAE,iBAAA,CAAsCxB,MAAAW,mBAAA,CAA0BtgC,GAA1B;AAA+BI,SAA/B,CAA0C8gC,QAA1C,CAAtC,CAHmB,CAA3B,IAOID,qBAAAE,iBAAA,CAAsCxB,MAAAK,iBAAA,CAAwBhgC,GAAxB,CAA6BI,SAA7B,CAAtC,CARuD,CAA/D,CATR,CAsBA,OAAOkhC,QAAAjlB,UAAA,CAAkB,IAAA8P,OAAlB,CAvBgF,CA4B3F2U,cAAAx9B,UAAA9C,eAAA,CAAyC+gC,QAAS,CAAC3B,OAAD,CAAUtY,WAAV,CAAuB,CACrE,MAAIsY,QAAAt/B,QAAA,EAAJ,CACWf,YAAAC,WADX,CAIWogC,OAAAp/B,eAAA,CAAuB8mB,WAAvB,CAL0D,CAWzEwZ,cAAAx9B,UAAAk+B,aAAA,CAAuCC,QAAS,EAAG,CAC/C,MAAO,CAAA,CADwC,CAMnDX,cAAAx9B,UAAAo+B,iBAAA,CAA2CC,QAAS,EAAG,CACnD,MAAO,KAD4C,CAMvDb,cAAAx9B,UAAA6rB,SAAA,CAAmCyS,QAAS,EAAG,CAC3C,MAAO,KAAAzV,OADoC,CAG/C,OAAO2U,cApGoC,CAAZ,EAt2BnC;AAg+BIe,uBAAwC,QAAS,EAAG,CACpDA,QAASA,uBAAsB,EAAG,CAC9B,IAAAC,WAAA,CAAkB,EADY,CAMlCD,sBAAAv+B,UAAA69B,iBAAA,CAAoDY,QAAS,CAAC/S,MAAD,CAAS,CAClE,IAAI3d,KAAO2d,MAAA3d,KAAX,CACIwmB,SAAkC7I,MAAA/U,UACtCxa,KAAAC,OAAA,CAAY2R,IAAZ,EAAoBsuB,MAAAO,YAApB,EACI7uB,IADJ,EACYsuB,MAAAe,cADZ,EAEIrvB,IAFJ,EAEYsuB,MAAAU,cAFZ,CAEkC,2CAFlC,CAGA5gC,KAAAC,OAAA,CAAyB,WAAzB,GAAYm4B,QAAZ,CAAsC,iDAAtC,CACA,KAAImK,UAAYviC,IAAA2lB,QAAA,CAAa,IAAA0c,WAAb,CAA8BjK,QAA9B,CAChB,IAAImK,SAAJ,CAAe,CACX,IAAIC;AAAUD,SAAA3wB,KACd,IAAIA,IAAJ,EAAYsuB,MAAAO,YAAZ,EAAkC+B,OAAlC,EAA6CtC,MAAAU,cAA7C,CACI,IAAAyB,WAAA,CAAgBjK,QAAhB,CAAA,CAA4B8H,MAAAW,mBAAA,CAA0BzI,QAA1B,CAAoC7I,MAAAI,aAApC,CAAyD4S,SAAA5S,aAAzD,CADhC,KAGK,IAAI/d,IAAJ,EAAYsuB,MAAAU,cAAZ,EACD4B,OADC,EACUtC,MAAAO,YADV,CAED,OAAO,IAAA4B,WAAA,CAAgBjK,QAAhB,CAFN,KAIA,IAAIxmB,IAAJ,EAAYsuB,MAAAU,cAAZ,EACD4B,OADC,EACUtC,MAAAe,cADV,CAED,IAAAoB,WAAA,CAAgBjK,QAAhB,CAAA,CAA4B8H,MAAAQ,mBAAA,CAA0BtI,QAA1B,CAAoCmK,SAAApC,QAApC,CAF3B,KAIA,IAAIvuB,IAAJ,EAAYsuB,MAAAe,cAAZ,EACDuB,OADC,EACUtC,MAAAO,YADV,CAED,IAAA4B,WAAA,CAAgBjK,QAAhB,CAAA;AAA4B8H,MAAAK,iBAAA,CAAwBnI,QAAxB,CAAkC7I,MAAAI,aAAlC,CAF3B,KAIA,IAAI/d,IAAJ,EAAYsuB,MAAAe,cAAZ,EACDuB,OADC,EACUtC,MAAAe,cADV,CAED,IAAAoB,WAAA,CAAgBjK,QAAhB,CAAA,CAA4B8H,MAAAW,mBAAA,CAA0BzI,QAA1B,CAAoC7I,MAAAI,aAApC,CAAyD4S,SAAApC,QAAzD,CAF3B,KAKD,MAAMngC,KAAAgZ,eAAA,CAAoB,kCAApB,CACFuW,MADE,CAEF,kBAFE,CAGFgT,SAHE,CAAN,CAtBO,CAAf,IA6BI,KAAAF,WAAA,CAAgBjK,QAAhB,CAAA,CAA4B7I,MArCkC,CA2CtE6S,uBAAAv+B,UAAA4+B,WAAA,CAA8CC,QAAS,EAAG,CACtD,MAAO1iC,KAAA2iC,UAAA,CAAe,IAAAN,WAAf,CAD+C,CAG1D,OAAOD,uBArD6C,CAAZ,EAh+B5C,CAqkCIQ;AAA2B,KAtBa,QAAS,EAAG,CACpDC,QAASA,uBAAsB,EAAG,EAKlCA,sBAAAh/B,UAAAi/B,iBAAA,CAAoDC,QAAS,CAAC3K,QAAD,CAAW,CACpE,MAAO,KAD6D,CAMxEyK,uBAAAh/B,UAAAm/B,mBAAA,CAAsDC,QAAS,CAACxnB,KAAD,CAAQta,KAAR,CAAemK,OAAf,CAAwB,CACnF,MAAO,KAD4E,CAGvF,OAAOu3B,uBAf6C,CAAZA,EAsBb,CArkC/B,CA6kCIK,6BAA8C,QAAS,EAAG,CAM1DA,QAASA,6BAA4B,CAACC,OAAD,CAAUC,UAAV,CAAsBC,uBAAtB,CAA+C,CAChD,IAAK,EAArC,GAAIA,uBAAJ,GAA0CA,uBAA1C,CAAoE,IAApE,CACA,KAAAF,QAAA,CAAeA,OACf,KAAAC,WAAA,CAAkBA,UAClB,KAAAC,wBAAA;AAA+BA,uBAJiD,CASpFH,4BAAAr/B,UAAAi/B,iBAAA,CAA0DQ,QAAS,CAAClL,QAAD,CAAW,CAC1E,IAAI1gB,KAAO,IAAA0rB,WAAA1D,cAAA,EACX,IAAIhoB,IAAAinB,mBAAA,CAAwBvG,QAAxB,CAAJ,CACI,MAAO1gB,KAAAmnB,QAAA,EAAAvkB,kBAAA,CAAiC8d,QAAjC,CAGHmL,KAAAA,CAA6C,IAAhC,EAAA,IAAAF,wBAAA,CACX,IAAInF,SAAJ,CAAc,IAAAmF,wBAAd,CAA4C,CAAA,CAA5C,CAAkD,CAAA,CAAlD,CADW,CAEX,IAAAD,WAAAtD,eAAA,EACN,OAAO,KAAAqD,QAAAK,kBAAA,CAA+BpL,QAA/B,CAAyCmL,IAAzC,CAT+D,CAe9EL,6BAAAr/B,UAAAm/B,mBAAA,CAA4DS,QAAS,CAAChoB,KAAD,CAAQta,KAAR,CAAemK,OAAf,CAAwB,CACzF,IAAIo4B;AAAqD,IAAhC,EAAA,IAAAL,wBAAA,CACnB,IAAAA,wBADmB,CAEnB,IAAAD,WAAApD,sBAAA,EACF2D,MAAAA,CAAQ,IAAAR,QAAAS,iBAAA,CAA8BF,kBAA9B,CAAkDviC,KAAlD,CAAyD,CAAzD,CAA4DmK,OAA5D,CAAqEmQ,KAArE,CACZ,OAAqB,EAArB,GAAIkoB,KAAApiC,OAAJ,CACW,IADX,CAIWoiC,KAAA,CAAM,CAAN,CAT8E,CAY7F,OAAOT,6BA1CmD,CAAZ,EA7kClD,CA8oCIW,gBAAiC,QAAS,EAAG,CAS7C,MAJAA,SAAwB,CAACC,SAAD,CAAYC,OAAZ,CAAqB,CACzC,IAAAD,UAAA,CAAiBA,SACjB,KAAAC,QAAA,CAAeA,OAF0B,CALA,CAAZ,EA9oCrC,CA4pCIC,cAA+B,QAAS,EAAG,CAI3CA,QAASA,cAAa,CAACC,OAAD,CAAU,CAC5B,IAAAA,QAAA,CAAeA,OADa,CAMhCD,aAAAngC,UAAAqgC,cAAA,CAAwCC,QAAS,CAACL,SAAD,CAAY,CACzD9jC,IAAAC,OAAA,CAAY6jC,SAAApE,cAAA,EAAAb,QAAA,EAAA/hB,UAAA,CAGG,IAAAmnB,QAAAvU,SAAA,EAHH,CAAZ;AAGyC,wBAHzC,CAIA1vB,KAAAC,OAAA,CAAY6jC,SAAAhE,eAAA,EAAAjB,QAAA,EAAA/hB,UAAA,CAGG,IAAAmnB,QAAAvU,SAAA,EAHH,CAAZ,CAGyC,yBAHzC,CALyD,CAiB7DsU,cAAAngC,UAAAugC,eAAA,CAAyCC,QAAS,CAACC,YAAD,CAAeC,SAAf,CAA0BC,WAA1B,CAAuCC,aAAvC,CAAsD,CACpG,IAAIC,YAAc,IAAItC,sBAEtB,IAAImC,SAAA3yB,KAAJ,GAAuB2nB,aAAAqE,UAAvB,CAEI,GADgB2G,SACZlK,OAAAZ,SAAJ,CACIkL,SAAA,CAAe,IAAAC,oBAAA,CAAyBN,YAAzB,CAFHC,SAE0Ch1B,KAAvC,CAFHg1B,SAE0DxY,KAAvD,CAAuEyY,WAAvE,CAAoFC,aAApF,CAAmGC,WAAnG,CADnB,KAGK,CACD1kC,IAAAC,OAAA,CALYskC,SAKAlK,OAAAX,WAAZ;AAAyC,iBAAzC,CAIA,KAAAmL,iBATYN,SAURlK,OAAAT,OADJiL,EAESP,YAAAxE,eAAA,EAAAvB,WAAA,EAFTsG,EAGY,CAZAN,SAYCh1B,KAAA1O,QAAA,EACb8jC,UAAA,CAAe,IAAAG,sBAAA,CAA2BR,YAA3B,CAbHC,SAa4Ch1B,KAAzC,CAbHg1B,SAa4DxY,KAAzD,CAAyEyY,WAAzE,CAAsFC,aAAtF,CAAqGI,gBAArG,CAAuHH,WAAvH,CATd,CALT,IAiBK,IAAIH,SAAA3yB,KAAJ,GAAuB2nB,aAAAwE,MAAvB,CACWwG,SACRlK,OAAAZ,SAAJ,CACIkL,SADJ,CACmB,IAAAI,gBAAA,CAAqBT,YAArB,CAFPC,SAE0Ch1B,KAAnC,CAFPg1B,SAEsD/J,SAA/C,CAA+DgK,WAA/D,CAA4EC,aAA5E,CAA2FC,WAA3F,CADnB,EAII1kC,IAAAC,OAAA,CALQskC,SAKIlK,OAAAX,WAAZ,CAAqC,iBAArC,CAIA;AAFAmL,gBAEA,CATQN,SAQJlK,OAAAT,OACJ,EAD2B0K,YAAAxE,eAAA,EAAAvB,WAAA,EAC3B,CAAAoG,SAAA,CAAe,IAAAK,kBAAA,CAAuBV,YAAvB,CATPC,SAS4Ch1B,KAArC,CATPg1B,SASwD/J,SAAjD,CAAiEgK,WAAjE,CAA8EC,aAA9E,CAA6FI,gBAA7F,CAA+GH,WAA/G,CARnB,CAFC,KAaA,IAAIH,SAAA3yB,KAAJ,GAAuB2nB,aAAAa,eAAvB,CAMGuK,SAAA,CALeJ,SACdpK,OAAL,CAImB,IAAA8K,iBAAA,CAAsBX,YAAtB,CALAC,SAKoCh1B,KAApC,CAAuDi1B,WAAvD,CAAoEC,aAApE,CAAmFC,WAAnF,CAJnB,CACmB,IAAAQ,cAAA,CAAmBZ,YAAnB,CAFAC,SAEiCh1B,KAAjC,CAFAg1B,SAEoDrK,aAApD,CAA+EsK,WAA/E,CAA4FC,aAA5F,CAA2GC,WAA3G,CAHlB;IASA,IAAIH,SAAA3yB,KAAJ,GAAuB2nB,aAAAkE,gBAAvB,CACDkH,SAAA,CAAe,IAAAQ,gBAAA,CAAqBb,YAArB,CAAmCC,SAAAh1B,KAAnC,CAAmDi1B,WAAnD,CAAgEE,WAAhE,CADd,KAID,MAAM1kC,KAAAgZ,eAAA,CAAoB,0BAApB,CAAiDurB,SAAA3yB,KAAjD,CAAN,CAEAmyB,WAAAA,CAAUW,WAAAjC,WAAA,EACduB,cAAAoB,oBAAA,CAAkCd,YAAlC,CAAgDK,SAAhD,CAA8DZ,WAA9D,CACA,OAAO,KAAIF,eAAJ,CAAoBc,SAApB,CAAkCZ,WAAlC,CAlD6F,CA0DxGC,cAAAoB,oBAAA,CAAoCC,QAAS,CAACf,YAAD,CAAeK,YAAf,CAA6BD,WAA7B,CAA0C,CACnF,IAAItF,UAAYuF,YAAAjF,cAAA,EAChB,IAAIN,SAAAf,mBAAA,EAAJ,CAAoC,CAChC,IAAIiH;AAAgBlG,SAAAP,QAAA,EAAAj+B,WAAA,EAAhB0kC,EAAoDlG,SAAAP,QAAA,EAAAh+B,QAAA,EAAxD,CACI0kC,gBAAkBjB,YAAA1E,qBAAA,EACtB,EAAyB,CAAzB,CAAI8E,WAAAnjC,OAAJ,EACI,CAAC+iC,YAAA5E,cAAA,EAAArB,mBAAA,EADL,EAEKiH,aAFL,EAGQ,CAAClG,SAAAP,QAAA,EAAA5vB,OAAA,CAEiCs2B,eAFjC,CAHT,EAMI,CAACnG,SAAAP,QAAA,EAAAz9B,YAAA,EAAA6N,OAAA,CAGWs2B,eAAAnkC,YAAA,EAHX,CANL,GAUIsjC,WAAArjC,KAAA,CAAiB6+B,MAAAE,YAAA,CACIuE,YAAA/E,qBAAA,EADJ,CAAjB,CAb4B,CAF+C,CA6BvFoE,cAAAngC,UAAA2hC,oCAAA,CAA8DC,QAAS,CAAC3B,SAAD,CAAY4B,UAAZ,CAAwBlB,WAAxB;AAAqCnK,MAArC,CAA6CqK,WAA7C,CAA0D,CAC7H,IAAIiB,aAAe7B,SAAApE,cAAA,EACnB,IAA8C,IAA9C,EAAI8E,WAAAoB,eAAA,CAA2BF,UAA3B,CAAJ,CAEI,MAAO5B,UAIP,IAAI4B,UAAA7kC,QAAA,EAAJ,CAEIb,IAAAC,OAAA,CAAY6jC,SAAAhE,eAAA,EAAAzB,mBAAA,EAAZ,CAA6D,4DAA7D,CACA,CAAIyF,SAAAhE,eAAA,EAAAvB,WAAA,EAAJ,EAIQsH,MAKJ,CALkB/B,SAAA9D,sBAAA,EAKlB,CADI8F,WACJ,CAD4BtB,WAAAuB,0BAAA,CAHLF,MAAAG,WAAuBlmC,aAAvBkmC,CACjBH,MADiBG,CAEjBlmC,YAAAC,WACsB,CAC5B,CAAAkmC,WAAA,CAAgB,IAAAhC,QAAAtC,eAAA,CAA4BmC,SAAApE,cAAA,EAAAb,QAAA,EAA5B;AAAiEiH,WAAjE,CAAwFpB,WAAxF,CATpB,GAYQwB,WACJ,CADmB1B,WAAA2B,uBAAA,CAAmCrC,SAAA9D,sBAAA,EAAnC,CACnB,CAAAiG,WAAA,CAAgB,IAAAhC,QAAAtC,eAAA,CAA4BmC,SAAApE,cAAA,EAAAb,QAAA,EAA5B,CAAiEqH,WAAjE,CAA+ExB,WAA/E,CAbpB,CAHJ,KAmBK,CACD,IAAItM,SAAWsN,UAAA54B,SAAA,EACf,IAAgB,WAAhB,EAAIsrB,QAAJ,CAA6B,CACzBp4B,IAAAC,OAAA,CAAsC,CAAtC,EAAYylC,UAAA14B,UAAA,EAAZ,CAAyC,uDAAzC,CACIo5B,YAAAA,CAAeT,YAAA9G,QAAA,EACnB,KAAA0E,WAAaO,SAAAhE,eAAA,EAAAjB,QAAA,EAETwH,YAAAA,CAAkB7B,WAAA8B,mCAAA,CAA+CZ,UAA/C;AAA2DU,WAA3D,CAAyE7C,UAAzE,CAElB0C,YAAA,CADmB,IAAvB,EAAII,WAAJ,CACoB,IAAApC,QAAAljC,eAAA,CAA4BqlC,WAA5B,CAA0CC,WAA1C,CADpB,CAKoBV,YAAA9G,QAAA,EAXK,CAA7B,IAcK,CACD,IAAI0H,gBAAkBb,UAAAx4B,SAAA,EAGlBy4B,aAAAhH,mBAAA,CAAgCvG,QAAhC,CAAJ,EACImL,UAGI,CAHSO,SAAAhE,eAAA,EAAAjB,QAAA,EAGT,CAFA2H,WAEA,CAFmBhC,WAAA8B,mCAAA,CAA+CZ,UAA/C,CAA2DC,YAAA9G,QAAA,EAA3D,CAAmF0E,UAAnF,CAEnB,CAAAkD,WAAA,CADoB,IAAxB,EAAID,WAAJ,CACoBb,YAAA9G,QAAA,EAAAvkB,kBAAA,CAEO8d,QAFP,CAAAnd,YAAA,CAGCsrB,eAHD,CAGkBC,WAHlB,CADpB,CAQoBb,YAAA9G,QAAA,EAAAvkB,kBAAA,CAEO8d,QAFP,CAXxB;AAiBIqO,WAjBJ,CAiBoBjC,WAAAhB,kBAAA,CAA8BpL,QAA9B,CAAwC0L,SAAAhE,eAAA,EAAxC,CAGhBmG,YAAA,CADiB,IAArB,EAAIQ,WAAJ,CACoB,IAAAxC,QAAAhpB,YAAA,CAAyB0qB,YAAA9G,QAAA,EAAzB,CAAiDzG,QAAjD,CAA2DqO,WAA3D,CAA0EF,eAA1E,CAA2FlM,MAA3F,CAAmGqK,WAAnG,CADpB,CAKoBiB,YAAA9G,QAAA,EA5BnB,CAhBJ,CAgDL,MAAOiF,UAAA5E,gBAAA,CAA0B+G,WAA1B,CAAyCN,YAAAtH,mBAAA,EAAzC,EAA8EqH,UAAA7kC,QAAA,EAA9E,CAAoG,IAAAojC,QAAAlC,aAAA,EAApG,CA3EkH,CAyFjIiC,cAAAngC,UAAAihC,sBAAA,CAAgD4B,QAAS,CAACpC,YAAD,CAAeoB,UAAf,CAA2BiB,WAA3B,CAAwCnC,WAAxC,CAAqDC,aAArD,CAAoEI,gBAApE;AAAsFH,WAAtF,CAAmG,CACxJ,IAAIkC,cAAgBtC,YAAAxE,eAAA,EAEhB+G,iBAAAA,CAAehC,gBAAA,CACb,IAAAZ,QADa,CAEb,IAAAA,QAAAhC,iBAAA,EACN,IAAIyD,UAAA7kC,QAAA,EAAJ,CACIimC,WAAA,CAAiBD,gBAAAlF,eAAA,CAA4BiF,aAAA/H,QAAA,EAA5B,CAAqD8H,WAArD,CAAkE,IAAlE,CADrB,KAGK,IAAIE,gBAAA9E,aAAA,EAAJ,EAAmC,CAAC6E,aAAArI,WAAA,EAApC,CAEGwI,WAGJ,CAHoBH,aAAA/H,QAAA,EAAA5jB,YAAA,CAEHyqB,UAFG,CAESiB,WAFT,CAGpB,CAAAG,WAAA,CAAiBD,gBAAAlF,eAAA,CAA4BiF,aAAA/H,QAAA,EAA5B,CAAqDkI,WAArD,CAAoE,IAApE,CALhB,KAOA,CACD,IAAI3O,SAAWsN,UAAA54B,SAAA,EACf;GAAI,CAAC85B,aAAAnI,kBAAA,CAAgCiH,UAAhC,CAAL,EAC6B,CAD7B,CACIA,UAAA14B,UAAA,EADJ,CAGI,MAAOs3B,aAEX,KAAIiC,gBAAkBb,UAAAx4B,SAAA,EAElB8N,YAAAA,CADY4rB,aAAA/H,QAAA,EAAAvkB,kBAAA3Z,CAA0Cy3B,QAA1Cz3B,CACGsa,YAAA,CAAsBsrB,eAAtB,CAAuCI,WAAvC,CAEfG,YAAA,CADY,WAAhB,EAAI1O,QAAJ,CACqByO,gBAAA9lC,eAAA,CAA4B6lC,aAAA/H,QAAA,EAA5B,CAAqD7jB,WAArD,CADrB,CAIqB6rB,gBAAA5rB,YAAA,CAAyB2rB,aAAA/H,QAAA,EAAzB,CAAkDzG,QAAlD,CAA4Dpd,WAA5D,CAA0EurB,eAA1E,CAA2F3D,wBAA3F,CAAqH,IAArH,CAdpB,CAiBD+B,YAAAA,CAAeL,YAAA/E,iBAAA,CAA8BuH,WAA9B;AAA8CF,aAAAvI,mBAAA,EAA9C,EAAoFqH,UAAA7kC,QAAA,EAApF,CAA0GgmC,gBAAA9E,aAAA,EAA1G,CACf1H,cAAAA,CAAS,IAAI6I,4BAAJ,CAAiCsB,WAAjC,CAA8CG,YAA9C,CAA4DF,aAA5D,CACb,OAAO,KAAAe,oCAAA,CAAyCb,YAAzC,CAAuDe,UAAvD,CAAmElB,WAAnE,CAAgFnK,aAAhF,CAAwFqK,WAAxF,CAnCiJ,CA+C5JV,cAAAngC,UAAA+gC,oBAAA,CAA8CoC,QAAS,CAAC1C,YAAD,CAAeoB,UAAf,CAA2BiB,WAA3B,CAAwCnC,WAAxC,CAAqDC,aAArD,CAAoEC,WAApE,CAAiF,CACpI,IAAIiB,aAAerB,YAAA5E,cAAA,EAEfrF,YAAAA,CAAS,IAAI6I,4BAAJ,CAAiCsB,WAAjC;AAA8CF,YAA9C,CAA4DG,aAA5D,CACb,IAAIiB,UAAA7kC,QAAA,EAAJ,CACIolC,WACA,CADgB,IAAAhC,QAAAtC,eAAA,CAA4B2C,YAAA5E,cAAA,EAAAb,QAAA,EAA5B,CAAoE8H,WAApE,CAAiFjC,WAAjF,CAChB,CAAAC,YAAA,CAAeL,YAAApF,gBAAA,CAA6B+G,WAA7B,CAA4C,CAAA,CAA5C,CAAkD,IAAAhC,QAAAlC,aAAA,EAAlD,CAFnB,KAMI,IADI3J,aACA,CADWsN,UAAA54B,SAAA,EACX,CAAa,WAAb,GAAAsrB,aAAJ,CACI6N,WACA,CADgB,IAAAhC,QAAAljC,eAAA,CAA4BujC,YAAA5E,cAAA,EAAAb,QAAA,EAA5B,CAAoE8H,WAApE,CAChB,CAAAhC,YAAA,CAAeL,YAAApF,gBAAA,CAA6B+G,WAA7B,CAA4CN,YAAAtH,mBAAA,EAA5C,CAA+EsH,YAAApH,WAAA,EAA/E,CAFnB;IAIK,CACGgI,UAAAA,CAAkBb,UAAAx4B,SAAA,EACtB,KAAIu0B,SAAWkE,YAAA9G,QAAA,EAAAvkB,kBAAA,CAAyC8d,aAAzC,CAEf,IAAI,CAAAmO,UAAA1lC,QAAA,EAAJ,CAIK,CACD,IAAIF,UAAY05B,WAAAyI,iBAAA,CAAwB1K,aAAxB,CAMRuD,YAAA,CALS,IAAjB,EAAIh7B,SAAJ,CACsC,WAAlC,GAAI4lC,UAAAn5B,QAAA,EAAJ,EACIzM,SAAA8Z,SAAA,CAAmB8rB,UAAAx4B,OAAA,EAAnB,CAAAlN,QAAA,EADJ,CAIeF,SAJf,CAOeA,SAAAsa,YAAA,CAAsBsrB,UAAtB,CAAuCI,WAAvC,CARnB,CAae7mC,YAAAC,WAfd,CAkBA0hC,QAAAxyB,OAAA,CAAgB0sB,WAAhB,CAAL,GACQsL,WACJ,CADmB,IAAAhD,QAAAhpB,YAAA,CAAyB0qB,YAAA9G,QAAA,EAAzB,CAAiDzG,aAAjD,CAA2DuD,WAA3D;AAAqE4K,UAArE,CAAsFlM,WAAtF,CAA8FqK,WAA9F,CACnB,CAAAC,YAAA,CAAeL,YAAApF,gBAAA,CAA6B+H,WAA7B,CAA2CtB,YAAAtH,mBAAA,EAA3C,CAA8E,IAAA4F,QAAAlC,aAAA,EAA9E,CAFnB,CA1BC,CAmCT,MAAO4C,aAjD6H,CAyDxIX,cAAAkD,eAAA,CAA+BC,QAAS,CAACrD,SAAD,CAAY1L,QAAZ,CAAsB,CAC1D,MAAO0L,UAAApE,cAAA,EAAAf,mBAAA,CAA6CvG,QAA7C,CADmD,CAa9D4L,cAAAngC,UAAAkhC,gBAAA,CAA0CqC,QAAS,CAACtD,SAAD,CAAYv0B,IAAZ,CAAkB83B,eAAlB,CAAmC7C,WAAnC,CAAgDqB,WAAhD,CAA6DnB,WAA7D,CAA0E,CACzH,IAAI9d,MAAQ,IAAZ,CAOI0gB,aAAexD,SACnBuD,gBAAAnK,QAAA,CAAwB,QAAS,CAAC5uB,YAAD,CAAe3N,SAAf,CAA0B,CACnD4mC,YAAAA;AAAYh4B,IAAApO,MAAA,CAAWmN,YAAX,CACZ01B,cAAAkD,eAAA,CAA6BpD,SAA7B,CAAwCyD,YAAAz6B,SAAA,EAAxC,CAAJ,GACIw6B,YADJ,CACmB1gB,KAAAge,oBAAA,CAA0B0C,YAA1B,CAAwCC,YAAxC,CAAmD5mC,SAAnD,CAA8D6jC,WAA9D,CAA2EqB,WAA3E,CAAwFnB,WAAxF,CADnB,CAFuD,CAA3D,CAMA2C,gBAAAnK,QAAA,CAAwB,QAAS,CAAC5uB,YAAD,CAAe3N,SAAf,CAA0B,CACnD4mC,YAAAA,CAAYh4B,IAAApO,MAAA,CAAWmN,YAAX,CACX01B,cAAAkD,eAAA,CAA6BpD,SAA7B,CAAwCyD,YAAAz6B,SAAA,EAAxC,CAAL,GACIw6B,YADJ,CACmB1gB,KAAAge,oBAAA,CAA0B0C,YAA1B,CAAwCC,YAAxC,CAAmD5mC,SAAnD,CAA8D6jC,WAA9D,CAA2EqB,WAA3E,CAAwFnB,WAAxF,CADnB,CAFuD,CAA3D,CAMA,OAAO4C,aArBkH,CA6B7HtD;aAAAngC,UAAA2jC,YAAA,CAAsCC,QAAS,CAAC/vB,IAAD,CAAOgwB,KAAP,CAAc,CACzDA,KAAAxK,QAAA,CAAc,QAAS,CAAC5uB,YAAD,CAAe3N,SAAf,CAA0B,CAC7C+W,IAAA,CAAOA,IAAAuD,YAAA,CAAiB3M,YAAjB,CAA+B3N,SAA/B,CADsC,CAAjD,CAGA,OAAO+W,KAJkD,CAiB7DssB,cAAAngC,UAAAmhC,kBAAA,CAA4C2C,QAAS,CAAC7D,SAAD,CAAYv0B,IAAZ,CAAkB83B,eAAlB,CAAmC7C,WAAnC,CAAgDqB,WAAhD,CAA6DhB,gBAA7D,CAA+EH,WAA/E,CAA4F,CAC7I,IAAI9d,MAAQ,IAGZ,IAAIkd,SAAAhE,eAAA,EAAAjB,QAAA,EAAAh+B,QAAA,EAAJ,EAII,CAACijC,SAAAhE,eAAA,EAAAzB,mBAAA,EAJL,CAKI,MAAOyF,UAQX,KAAIwD,aAAexD,SAGf8D,KAAA,CADAr4B,IAAA1O,QAAA,EAAJ,CACoBwmC,eADpB,CAIoBzM,aAAAF,MAAAoB,QAAA,CAA4BvsB,IAA5B;AAAkC83B,eAAlC,CAEpB,KAAI9D,WAAaO,SAAAhE,eAAA,EAAAjB,QAAA,EACjB+I,KAAApN,SAAApb,iBAAA,CAAwC,QAAS,CAACgZ,QAAD,CAAWnT,SAAX,CAAsB,CACnE,GAAIse,UAAA5oB,SAAA,CAAoByd,QAApB,CAAJ,CAAmC,CAC/B,IAAIyP,YAAc/D,SAAAhE,eAAA,EAAAjB,QAAA,EAAAvkB,kBAAA,CAGK8d,QAHL,CAIduD,UAAAA,CAAW/U,KAAA4gB,YAAA,CAAkBK,WAAlB,CAA+B5iB,SAA/B,CACfqiB,aAAA,CAAe1gB,KAAAke,sBAAA,CAA4BwC,YAA5B,CAA0C,IAAIj7B,IAAJ,CAAS+rB,QAAT,CAA1C,CAA8DuD,SAA9D,CAAwE6I,WAAxE,CAAqFqB,WAArF,CAAkGhB,gBAAlG,CAAoHH,WAApH,CANgB,CADgC,CAAvE,CAUAkD,KAAApN,SAAApb,iBAAA,CAAwC,QAAS,CAACgZ,QAAD,CAAW0P,cAAX,CAA2B,CACxE,IAAIC;AAAqB,CAACjE,SAAAhE,eAAA,EAAAnB,mBAAA,CAA8CvG,QAA9C,CAAtB2P,EACwB,IADxBA,EACAD,cAAA1kC,MACCmgC,WAAA5oB,SAAA,CAAoByd,QAApB,CAAL,EAAuC2P,kBAAvC,GACQF,kBAKJ,CALkB/D,SAAAhE,eAAA,EAAAjB,QAAA,EAAAvkB,kBAAA,CAGK8d,QAHL,CAKlB,CADIuD,cACJ,CADe/U,KAAA4gB,YAAA,CAAkBK,kBAAlB,CAA+BC,cAA/B,CACf,CAAAR,YAAA,CAAe1gB,KAAAke,sBAAA,CAA4BwC,YAA5B,CAA0C,IAAIj7B,IAAJ,CAAS+rB,QAAT,CAA1C,CAA8DuD,cAA9D,CAAwE6I,WAAxE,CAAqFqB,WAArF,CAAkGhB,gBAAlG,CAAoHH,WAApH,CANnB,CAHwE,CAA5E,CAYA,OAAO4C,aAhDsI,CA4DjJtD,cAAAngC,UAAAqhC,cAAA,CAAwC8C,QAAS,CAAClE,SAAD;AAAYmE,OAAZ,CAAqB/N,YAArB,CAAmCsK,WAAnC,CAAgDC,aAAhD,CAA+DC,WAA/D,CAA4E,CACzH,GAA2C,IAA3C,EAAIF,WAAAoB,eAAA,CAA2BqC,OAA3B,CAAJ,CACI,MAAOnE,UAGX,KAAIe,iBAAmBf,SAAAhE,eAAA,EAAAvB,WAAA,EAAvB,CAGIsH,YAAc/B,SAAAhE,eAAA,EAClB,IAA0B,IAA1B,EAAI5F,YAAA92B,MAAJ,CAAgC,CAE5B,GAAK6kC,OAAApnC,QAAA,EAAL,EAA0BglC,WAAAxH,mBAAA,EAA1B,EACIwH,WAAApH,kBAAA,CAA8BwJ,OAA9B,CADJ,CAEI,MAAO,KAAAnD,sBAAA,CAA2BhB,SAA3B,CAAsCmE,OAAtC,CAA+CpC,WAAAhH,QAAA,EAAApkB,SAAA,CAA+BwtB,OAA/B,CAA/C,CAAwFzD,WAAxF,CAAqGC,aAArG,CAAoHI,gBAApH,CAAsIH,WAAtI,CAEN,IAAIuD,OAAApnC,QAAA,EAAJ,CAAuB,CAGxB,IAAIqnC;AAAoBtN,aAAAF,MACxBmL,YAAAhH,QAAA,EAAAtjB,aAAA,CAAmC9B,SAAnC,CAA8C,QAAS,CAACha,IAAD,CAAOiY,IAAP,CAAa,CAChEwwB,iBAAA,CAAoBA,iBAAApkC,IAAA,CAAsB,IAAIuI,IAAJ,CAAS5M,IAAT,CAAtB,CAAsCiY,IAAtC,CAD4C,CAApE,CAGA,OAAO,KAAAstB,kBAAA,CAAuBlB,SAAvB,CAAkCmE,OAAlC,CAA2CC,iBAA3C,CAA8D1D,WAA9D,CAA2EC,aAA3E,CAA0FI,gBAA1F,CAA4GH,WAA5G,CAPiB,CAUxB,MAAOZ,UAhBiB,CAqB5B,IAAIqE,kBAAoBvN,aAAAF,MACxBR,aAAAgD,QAAA,CAAqB,QAAS,CAACkL,SAAD,CAAYhlC,KAAZ,CAAmB,CACzCilC,KAAAA,CAAkBJ,OAAA9mC,MAAA,CAAcinC,SAAd,CAClBvC,YAAApH,kBAAA,CAA8B4J,KAA9B,CAAJ,GACIF,iBADJ,CACwBA,iBAAArkC,IAAA,CAAsBskC,SAAtB,CAAiCvC,WAAAhH,QAAA,EAAApkB,SAAA,CAA+B4tB,KAA/B,CAAjC,CADxB,CAF6C,CAAjD,CAMA;MAAO,KAAArD,kBAAA,CAAuBlB,SAAvB,CAAkCmE,OAAlC,CAA2CE,iBAA3C,CAA8D3D,WAA9D,CAA2EC,aAA3E,CAA0FI,gBAA1F,CAA4GH,WAA5G,CArC8G,CAgD7HV,cAAAngC,UAAAshC,gBAAA,CAA0CmD,QAAS,CAACxE,SAAD,CAAYv0B,IAAZ,CAAkBi1B,WAAlB,CAA+BE,WAA/B,CAA4C,CAC3F,IAAI6D,cAAgBzE,SAAAhE,eAAA,EAChB6E,UAAAA,CAAeb,SAAAvE,iBAAA,CAA2BgJ,aAAA1J,QAAA,EAA3B,CAAoD0J,aAAAlK,mBAAA,EAApD,EAA0F9uB,IAAA1O,QAAA,EAA1F,CAA0G0nC,aAAAhK,WAAA,EAA1G,CACnB,OAAO,KAAAiH,oCAAA,CAAyCb,SAAzC,CAAuDp1B,IAAvD,CAA6Di1B,WAA7D,CAA0E5B,wBAA1E,CAAoG8B,WAApG,CAHoF,CAc/FV;aAAAngC,UAAAohC,iBAAA,CAA2CuD,QAAS,CAAC1E,SAAD,CAAYv0B,IAAZ,CAAkBi1B,WAAlB,CAA+BiE,mBAA/B,CAAoD/D,WAApD,CAAiE,CAEjH,GAAwC,IAAxC,EAAIF,WAAAoB,eAAA,CAA2Br2B,IAA3B,CAAJ,CACI,MAAOu0B,UAGP,KAAIzJ,OAAS,IAAI6I,4BAAJ,CAAiCsB,WAAjC,CAA8CV,SAA9C,CAAyD2E,mBAAzD,CACTC,oBAAAA,CAAgB5E,SAAApE,cAAA,EAAAb,QAAA,EAEpB,IAAItvB,IAAA1O,QAAA,EAAJ,EAA0C,WAA1C,GAAsB0O,IAAAzC,SAAA,EAAtB,CAEQg3B,SAAAhE,eAAA,EAAAzB,mBAAA,EAAJ,CACIlmB,IADJ,CACcqsB,WAAA2B,uBAAA,CAAmCrC,SAAA9D,sBAAA,EAAnC,CADd,EAIQ2I,IAEJ,CAFqB7E,SAAAhE,eAAA,EAAAjB,QAAA,EAErB;AADA7+B,IAAAC,OAAA,CAAY0oC,IAAZ,WAAsC7oC,aAAtC,CAAoD,+CAApD,CACA,CAAAqY,IAAA,CAAUqsB,WAAAuB,0BAAA,CAAsC4C,IAAtC,CANd,CASA,CAAA1C,IAAA,CAAgB,IAAAhC,QAAAtC,eAAA,CAA4B+G,mBAA5B,CADNvwB,IACM,CAAoDusB,WAApD,CAXpB,KAaK,CACD,IAAItM,SAAW7oB,IAAAzC,SAAA,EAAf,CACI6uB,SAAW6I,WAAAhB,kBAAA,CAA8BpL,QAA9B,CAAwC0L,SAAAhE,eAAA,EAAxC,CACC,KAAhB,EAAInE,QAAJ,EACImI,SAAAhE,eAAA,EAAAnB,mBAAA,CAA8CvG,QAA9C,CADJ,GAEIuD,QAFJ,CAEe+M,mBAAApuB,kBAAA,CAAgC8d,QAAhC,CAFf,CAKI6N,KAAA,CADY,IAAhB,EAAItK,QAAJ,CACoB,IAAAsI,QAAAhpB,YAAA,CAAyBytB,mBAAzB;AAAwCtQ,QAAxC,CAAkDuD,QAAlD,CAA4DpsB,IAAArC,SAAA,EAA5D,CAA6EmtB,MAA7E,CAAqFqK,WAArF,CADpB,CAGSZ,SAAApE,cAAA,EAAAb,QAAA,EAAAlkB,SAAA,CAGKyd,QAHL,CAAJ,CAKe,IAAA6L,QAAAhpB,YAAA,CAAyBytB,mBAAzB,CAAwCtQ,QAAxC,CAAkDt4B,YAAAC,WAAlD,CAA2EwP,IAAArC,SAAA,EAA3E,CAA4FmtB,MAA5F,CAAoGqK,WAApG,CALf,CAQegE,mBAEhBzC,KAAAplC,QAAA,EAAJ,EACIijC,SAAAhE,eAAA,EAAAzB,mBAAA,EADJ,GAGIgB,mBACA,CADWmF,WAAA2B,uBAAA,CAAmCrC,SAAA9D,sBAAA,EAAnC,CACX,CAAIX,mBAAAz+B,WAAA,EAAJ,GACIqlC,IADJ,CACoB,IAAAhC,QAAAtC,eAAA,CAA4BsE,IAA5B,CAA2C5G,mBAA3C,CAAqDqF,WAArD,CADpB,CAJJ,CApBC,CA6BLrF,mBAAA;AACIyE,SAAAhE,eAAA,EAAAzB,mBAAA,EADJ,EAEkD,IAFlD,EAEQmG,WAAAoB,eAAA,CAA2Bv5B,IAAAquB,MAA3B,CACR,OAAOoJ,UAAA5E,gBAAA,CAA0B+G,IAA1B,CAAyC5G,mBAAzC,CAAmD,IAAA4E,QAAAlC,aAAA,EAAnD,CAtDsG,CAyDrH,OAAOiC,cAjiBoC,CAAZ,EA5pCnC,CAutDI4E,eAAgC,QAAS,EAAG,CAK5CA,QAASA,eAAc,CAACC,MAAD,CAAS,CAC5B,IAAAA,OAAA,CAAcA,MAKd,KAAAnc,OAAA,CAAc,IAAAmc,OAAApZ,eAAA,EAAAC,SAAA,EANc,CAsBhCkZ,cAAA/kC,UAAAilC,yBAAA,CAAoDC,QAAS,CAAChF,OAAD,CAAUiF,UAAV,CAAsBC,kBAAtB,CAA0C,CACnG,IAAIriB,MAAQ,IAAZ,CACIsiB,OAAS,EADb,CAEIC,MAAQ,EACZpF,QAAAzjC,QAAA,CAAgB,QAAS,CAACivB,MAAD,CAAS,CAC1BA,MAAA3d,KAAJ;AAAoBsuB,MAAAe,cAApB,EACIra,KAAA8F,OAAA1U,oBAAA,CAAiCuX,MAAA4Q,QAAjC,CAAiD5Q,MAAAI,aAAjD,CADJ,EAEIwZ,KAAA9nC,KAAA,CAAW6+B,MAAAgB,iBAAA,CAAwB3R,MAAA/U,UAAxB,CAA0C+U,MAAAI,aAA1C,CAAX,CAH0B,CAAlC,CAMA,KAAAyZ,uBAAA,CAA4BF,MAA5B,CAAoChJ,MAAAU,cAApC,CAA0DmD,OAA1D,CAAmEkF,kBAAnE,CAAuFD,UAAvF,CACA,KAAAI,uBAAA,CAA4BF,MAA5B,CAAoChJ,MAAAO,YAApC,CAAwDsD,OAAxD,CAAiEkF,kBAAjE,CAAqFD,UAArF,CACA,KAAAI,uBAAA,CAA4BF,MAA5B,CAAoChJ,MAAAkB,YAApC,CAAwD+H,KAAxD,CAA+DF,kBAA/D,CAAmFD,UAAnF,CACA,KAAAI,uBAAA,CAA4BF,MAA5B,CAAoChJ,MAAAe,cAApC;AAA0D8C,OAA1D,CAAmEkF,kBAAnE,CAAuFD,UAAvF,CACA,KAAAI,uBAAA,CAA4BF,MAA5B,CAAoChJ,MAAAI,MAApC,CAAkDyD,OAAlD,CAA2DkF,kBAA3D,CAA+ED,UAA/E,CACA,OAAOE,OAf4F,CA2BvGN,eAAA/kC,UAAAulC,uBAAA,CAAkDC,QAAS,CAACH,MAAD,CAASj0B,SAAT,CAAoB8uB,OAApB,CAA6BuF,aAA7B,CAA4CN,UAA5C,CAAwD,CAC/G,IAAIpiB,MAAQ,IACR2iB,QAAAA,CAAkBxF,OAAAyF,OAAA,CAAe,QAAS,CAACja,MAAD,CAAS,CAAE,MAAOA,OAAA3d,KAAP,GAAuBqD,SAAzB,CAAjC,CACtBs0B,QAAA1/B,KAAA,CAAqB,IAAA4/B,gBAAAhiC,KAAA,CAA0B,IAA1B,CAArB,CACA8hC,QAAAjpC,QAAA,CAAwB,QAAS,CAACivB,MAAD,CAAS,CACtC,IAAIma,mBAAqB9iB,KAAA+iB,yBAAA,CAA+Bpa,MAA/B,CAAuCyZ,UAAvC,CACzBM,cAAAhpC,QAAA,CAAsB,QAAS,CAACspC,YAAD,CAAe,CACtCA,YAAAza,WAAA,CAAwBI,MAAA3d,KAAxB,CAAJ;AACIs3B,MAAA7nC,KAAA,CAAYuoC,YAAAva,YAAA,CAAyBqa,kBAAzB,CAA6C9iB,KAAAiiB,OAA7C,CAAZ,CAFsC,CAA9C,CAFsC,CAA1C,CAJ+G,CAmBnHD,eAAA/kC,UAAA8lC,yBAAA,CAAoDE,QAAS,CAACta,MAAD,CAASyZ,UAAT,CAAqB,CAC1D,OAApB,GAAIzZ,MAAA3d,KAAJ,EAA+C,eAA/C,GAA+B2d,MAAA3d,KAA/B,GAII2d,MAAAvB,SAJJ,CAIsBgb,UAAAnuB,wBAAA,CAElB0U,MAAA/U,UAFkB,CAEA+U,MAAAI,aAFA,CAEqB,IAAAjD,OAFrB,CAJtB,CACI,OAAO6C,OAFmE,CAiBlFqZ,eAAA/kC,UAAA4lC,gBAAA,CAA2CK,QAAS,CAAC9gC,CAAD,CAAIC,CAAJ,CAAO,CACvD,GAAmB,IAAnB,EAAID,CAAAwR,UAAJ,EAA0C,IAA1C,EAA2BvR,CAAAuR,UAA3B,CACI,KAAMxa,KAAAgZ,eAAA,CAAoB,oCAApB,CAAN,CAEA+wB,CAAAA,CAAW,IAAIzoC,SAAJ,CAAc0H,CAAAwR,UAAd;AAA2BxR,CAAA2mB,aAA3B,CACXqa,EAAAA,CAAW,IAAI1oC,SAAJ,CAAc2H,CAAAuR,UAAd,CAA2BvR,CAAA0mB,aAA3B,CACf,OAAO,KAAAjD,OAAA3U,QAAA,CAAoBgyB,CAApB,CAA8BC,CAA9B,CANgD,CAQ3D,OAAOpB,eAlGqC,CAAZ,EAvtDpC,CAs1DIqB,KAAsB,QAAS,EAAG,CAMlCA,QAASA,KAAI,CAACpB,MAAD,CAASqB,gBAAT,CAA2B,CACpC,IAAArB,OAAA,CAAcA,MACd,KAAAsB,oBAAA,CAA2B,EAC3B,KAAIt4B,OAAS,IAAAg3B,OAAApZ,eAAA,EACT2a,OAAAA,CAAc,IAAI/I,aAAJ,CAAkBxvB,MAAA6d,SAAA,EAAlB,CACd8Z,OAAAA,CAAS33B,MAAAw4B,cAAA,EAKb,KAAAC,WAAA,CAAkB,IAAItG,aAAJ,CAAkBwF,MAAlB,CAClB,KAAIe,mBAAqBL,gBAAApK,eAAA,EACrB0K,iBAAAA,CAAoBN,gBAAAxK,cAAA,EAExB,KAAID,WAAa2K,MAAAzI,eAAA,CAA2B7hC,YAAAC,WAA3B;AAAoDwqC,kBAAA1L,QAAA,EAApD,CAAkF,IAAlF,CAAjB,CACIO,UAAYoK,MAAA7H,eAAA,CAAsB7hC,YAAAC,WAAtB,CAA+CyqC,gBAAA3L,QAAA,EAA/C,CAA4E,IAA5E,CACZiI,OAAAA,CAAiB,IAAI5I,SAAJ,CAAcuB,UAAd,CAA0B8K,kBAAAlM,mBAAA,EAA1B,CAAmE+L,MAAArI,aAAA,EAAnE,CACjBkE,OAAAA,CAAgB,IAAI/H,SAAJ,CAAckB,SAAd,CAAyBoL,gBAAAnM,mBAAA,EAAzB,CAAiEmL,MAAAzH,aAAA,EAAjE,CAKpB,KAAAqB,WAAA,CAAkB,IAAIrE,SAAJ,CAAckH,MAAd,CAA6Ba,MAA7B,CAKlB,KAAA2D,gBAAA,CAAuB,IAAI7B,cAAJ,CAAmB,IAAAC,OAAnB,CA3Ba,CAgCxCoB,IAAApmC,UAAA6mC,SAAA,CAA0BC,QAAS,EAAG,CAClC,MAAO,KAAA9B,OAD2B,CAMtCoB,KAAApmC,UAAAi8B,eAAA,CAAgC8K,QAAS,EAAG,CACxC,MAAO,KAAAxH,WAAAtD,eAAA,EAAAjB,QAAA,EADiC,CAO5CoL;IAAApmC,UAAAgnC,uBAAA,CAAwCC,QAAS,CAACv7B,IAAD,CAAO,CACpD,IAAIw7B,MAAQ,IAAA3H,WAAApD,sBAAA,EACZ,OAAI+K,MAAJ,GAGQ,IAAAlC,OAAApZ,eAAA,EAAAub,aAAA,EAHR,EAIS,CAACz7B,IAAA1O,QAAA,EAJV,EAI4B,CAACkqC,KAAAzwB,kBAAA,CAAwB/K,IAAAzC,SAAA,EAAxB,CAAAjM,QAAA,EAJ7B,EAKekqC,KAAAtwB,SAAA,CAAelL,IAAf,CALf,CAQO,IAV6C,CAexD06B,KAAApmC,UAAAhD,QAAA,CAAyBoqC,QAAS,EAAG,CACjC,MAA2C,EAA3C,GAAO,IAAAd,oBAAA5oC,OAD0B,CAMrC0oC,KAAApmC,UAAAqnC,qBAAA,CAAsCC,QAAS,CAACpd,iBAAD,CAAoB,CAC/D,IAAAoc,oBAAA9oC,KAAA,CAA8B0sB,iBAA9B,CAD+D,CAQnEkc,KAAApmC,UAAAunC,wBAAA,CAAyCC,QAAS,CAACtd,iBAAD;AAAoBud,WAApB,CAAiC,CAC/E,IAAIC,aAAe,EACnB,IAAID,WAAJ,CAAiB,CACbtrC,IAAAC,OAAA,CAAiC,IAAjC,EAAY8tB,iBAAZ,CAAuC,iDAAvC,CACA,KAAIyd,OAAS,IAAA3C,OAAAt5B,KACb,KAAA46B,oBAAA7pC,QAAA,CAAiC,QAAS,CAACspC,YAAD,CAAe,CAGrD,CADI6B,YACJ,CADiB7B,YAAA3Z,kBAAA,CAA+Bqb,WAA/B,CAA4CE,MAA5C,CACjB,GACID,YAAAlqC,KAAA,CAAkBoqC,YAAlB,CAJiD,CAAzD,CAHa,CAWjB,GAAI1d,iBAAJ,CAAuB,CAEnB,IADA,IAAI2d,UAAY,EAAhB,CACS5kC,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAAqjC,oBAAA5oC,OAApB,CAAqD,EAAEuF,CAAvD,CAA0D,CACtD,IAAI6kC,SAAW,IAAAxB,oBAAA,CAAyBrjC,CAAzB,CACf,IAAI,CAAC6kC,QAAAxb,QAAA,CAAiBpC,iBAAjB,CAAL,CACI2d,SAAArqC,KAAA,CAAesqC,QAAf,CADJ;IAGK,IAAI5d,iBAAAsC,eAAA,EAAJ,CAAwC,CAEzCqb,SAAA,CAAYA,SAAA9jC,OAAA,CAAiB,IAAAuiC,oBAAAv8B,MAAA,CAA+B9G,CAA/B,CAAmC,CAAnC,CAAjB,CACZ,MAHyC,CALS,CAW1D,IAAAqjC,oBAAA,CAA2BuB,SAbR,CAAvB,IAgBI,KAAAvB,oBAAA,CAA2B,EAE/B,OAAOoB,aA/BwE,CAyCnFtB,KAAApmC,UAAAugC,eAAA,CAAgCwH,QAAS,CAACrH,SAAD,CAAYC,WAAZ,CAAyBiE,mBAAzB,CAA8C,CAC/ElE,SAAA3yB,KAAJ,GAAuB2nB,aAAAwE,MAAvB,EACiC,IADjC,GACIwG,SAAAlK,OAAAV,QADJ,GAEI35B,IAAAC,OAAA,CAAY,IAAAmjC,WAAApD,sBAAA,EAAZ,CAAqD,2DAArD,CACA,CAAAhgC,IAAAC,OAAA,CAAY,IAAAmjC,WAAAxD,qBAAA,EAAZ;AAAoD,yDAApD,CAHJ,CAKA,KAAI0E,aAAe,IAAAlB,WACf9kB,UAAAA,CAAS,IAAAgsB,WAAAlG,eAAA,CAA+BE,YAA/B,CAA6CC,SAA7C,CAAwDC,WAAxD,CAAqEiE,mBAArE,CACb,KAAA6B,WAAApG,cAAA,CAA8B5lB,SAAAwlB,UAA9B,CACA9jC,KAAAC,OAAA,CAAYqe,SAAAwlB,UAAAhE,eAAA,EAAAzB,mBAAA,EAAZ,EACI,CAACiG,YAAAxE,eAAA,EAAAzB,mBAAA,EADL,CACyD,yDADzD,CAEA,KAAA+E,WAAA,CAAkB9kB,SAAAwlB,UAClB,OAAO,KAAA+H,0BAAA,CAA+BvtB,SAAAylB,QAA/B;AAA+CzlB,SAAAwlB,UAAApE,cAAA,EAAAb,QAAA,EAA/C,CAA2F,IAA3F,CAZ4E,CAkBvFoL,KAAApmC,UAAAioC,iBAAA,CAAkCC,QAAS,CAACnC,YAAD,CAAe,CACtD,IAAIxK,UAAY,IAAAgE,WAAA1D,cAAA,EAAhB,CACIsM,eAAiB,EAChB5M,UAAAP,QAAA,EAAAj+B,WAAA,EAAL,EACoBw+B,SAAAP,QAAAoN,EAChB1wB,aAAA,CAAuB3Z,cAAvB,CAAuC,QAAS,CAACrB,GAAD,CAAMI,SAAN,CAAiB,CAC7DqrC,cAAA3qC,KAAA,CAAoB6+B,MAAAK,iBAAA,CAAwBhgC,GAAxB,CAA6BI,SAA7B,CAApB,CAD6D,CAAjE,CAIAy+B,UAAAf,mBAAA,EAAJ,EACI2N,cAAA3qC,KAAA,CAAoB6+B,MAAAE,YAAA,CAAmBhB,SAAAP,QAAA,EAAnB,CAApB,CAEJ,OAAO,KAAAgN,0BAAA,CAA+BG,cAA/B,CAA+C5M,SAAAP,QAAA,EAA/C;AAAoE+K,YAApE,CAZ+C,CAqB1DK,KAAApmC,UAAAgoC,0BAAA,CAA2CK,QAAS,CAACnI,OAAD,CAAUiF,UAAV,CAAsBjb,iBAAtB,CAAyC,CAIzF,MAAO,KAAA0c,gBAAA3B,yBAAA,CAA8C/E,OAA9C,CAAuDiF,UAAvD,CAHajb,iBAAAub,CACd,CAACvb,iBAAD,CADcub,CAEd,IAAAa,oBACC,CAJkF,CAM7F,OAAOF,KAtK2B,CAAZ,EAt1D1B,CA+gEIkC,wBA/gEJ,CA0hEIC,UAA2B,QAAS,EAAG,CACvCA,QAASA,UAAS,EAAG,CAUjB,IAAAC,OAAA,CAAc,EAVG,CAYrBnpC,MAAAC,eAAA,CAAsBipC,SAAtB,CAAiC,wBAAjC,CAA2D,CACvDhoC,IAAKA,QAAS,EAAG,CACbpE,IAAAC,OAAA,CAAYksC,wBAAZ,CAAsC,kCAAtC,CACA,OAAOA,yBAFM,CADsC;AAKvDroC,IAAKA,QAAS,CAACsG,GAAD,CAAM,CAChBpK,IAAAC,OAAA,CAAY,CAACksC,wBAAb,CAAuC,iDAAvC,CACAA,yBAAA,CAA2B/hC,GAFX,CALmC,CASvDwC,WAAY,CAAA,CAT2C,CAUvDC,aAAc,CAAA,CAVyC,CAA3D,CAeAu/B,UAAAvoC,UAAAhD,QAAA,CAA8ByrC,QAAS,EAAG,CACtC,MAAOtsC,KAAAa,QAAA,CAAa,IAAAwrC,OAAb,CAD+B,CAU1CD,UAAAvoC,UAAAugC,eAAA,CAAqCmI,QAAS,CAAChI,SAAD,CAAYC,WAAZ,CAAyBgI,sBAAzB,CAAiD,CAC3F,IAAI7S,QAAU4K,SAAAlK,OAAAV,QACd,IAAgB,IAAhB,GAAIA,OAAJ,CAGI,MAFI8S,QAEG,CAFIzsC,IAAA2lB,QAAA,CAAa,IAAA0mB,OAAb,CAA0B1S,OAA1B,CAEJ,CADP35B,IAAAC,OAAA,CAAoB,IAApB,EAAYwsC,OAAZ,CAA0B,8CAA1B,CACO;AAAAA,OAAArI,eAAA,CAAoBG,SAApB,CAA+BC,WAA/B,CAA4CgI,sBAA5C,CAGP,KAAIE,SAAW,EACf1sC,KAAAM,QAAA,CAAa,IAAA+rC,OAAb,CAA0B,QAAS,CAAC9rC,GAAD,CAAMksC,IAAN,CAAY,CAC3CC,QAAA,CAAWA,QAAA9kC,OAAA,CAAgB6kC,IAAArI,eAAA,CAAoBG,SAApB,CAA+BC,WAA/B,CAA4CgI,sBAA5C,CAAhB,CADgC,CAA/C,CAGA,OAAOE,SAZgF,CAyB/FN,UAAAvoC,UAAAqnC,qBAAA,CAA2CyB,QAAS,CAACnd,KAAD,CAAQzB,iBAAR,CAA2ByW,WAA3B,CAAwCqB,WAAxC,CAAqD+G,mBAArD,CAA0E,CAC1H,IAAIjT,QAAUnK,KAAAoH,gBAAA,EAAd,CACI6V,KAAOzsC,IAAA2lB,QAAA,CAAa,IAAA0mB,OAAb,CAA0B1S,OAA1B,CACN8S,KAAL,GAII,CAFIzD,IAEJ,CAFiBxE,WAAA2B,uBAAA,CAAmCyG,mBAAA;AAAsB/G,WAAtB,CAAoC,IAAvE,CAEjB,EACIgH,WADJ,CACyB,CAAA,CADzB,EAII7D,IACA,CAFKnD,WAAJ,WAA2B/lC,aAA3B,CACY0kC,WAAAuB,0BAAA,CAAsCF,WAAtC,CADZ,CAKY/lC,YAAAC,WAHb,CAAA8sC,WAAA,CAAqB,CAAA,CALzB,CAeA,CAJI/I,WAIJ,CAJgB,IAAI/E,SAAJ,CAAc,IAAIb,SAAJ,CACR8K,IADQ,CACK6D,WADL,CACyB,CAAA,CADzB,CAAd,CAC+C,IAAI3O,SAAJ,CACzC2H,WADyC,CAC3B+G,mBAD2B,CACN,CAAA,CADM,CAD/C,CAIhB,CADAH,IACA,CADO,IAAIxC,IAAJ,CAASza,KAAT,CAAgBsU,WAAhB,CACP,CAAA,IAAAuI,OAAA,CAAY1S,OAAZ,CAAA,CAAuB8S,IAnB3B,CAsBAA,KAAAvB,qBAAA,CAA0Bnd,iBAA1B,CACA,OAAO0e,KAAAX,iBAAA,CAAsB/d,iBAAtB,CA1BmH,CAuC9Hqe,UAAAvoC,UAAAunC,wBAAA,CAA8C0B,QAAS,CAACtd,KAAD,CAAQzB,iBAAR;AAA2Bud,WAA3B,CAAwC,CAC3F,IAAI3R,QAAUnK,KAAAoH,gBAAA,EAAd,CACImW,QAAU,EADd,CAEIxB,aAAe,EAFnB,CAGIyB,gBAAkB,IAAAC,gBAAA,EACtB,IAAgB,SAAhB,GAAItT,OAAJ,CAA2B,CAEvB,IAAIlB,OAAS,IACbz4B,KAAAM,QAAA,CAAa,IAAA+rC,OAAb,CAA0B,QAAS,CAACa,WAAD,CAAcT,IAAd,CAAoB,CACnDlB,YAAA,CAAeA,YAAA3jC,OAAA,CAAoB6kC,IAAArB,wBAAA,CAA6Brd,iBAA7B,CAAgDud,WAAhD,CAApB,CACXmB,KAAA5rC,QAAA,EAAJ,GACI,OAAO43B,MAAA4T,OAAA,CAAca,WAAd,CAEP,CAAKT,IAAA/B,SAAA,EAAAjb,eAAA,EAAAub,aAAA,EAAL,EAII+B,OAAA1rC,KAAA,CAAaorC,IAAA/B,SAAA,EAAb,CAPR,CAFmD,CAAvD,CAHuB,CAA3B,IAiBK,CAED,IAAI+B,cAAOzsC,IAAA2lB,QAAA,CAAa,IAAA0mB,OAAb,CAA0B1S,OAA1B,CACP8S,cAAJ;CACIlB,YACA,CADeA,YAAA3jC,OAAA,CAAoB6kC,aAAArB,wBAAA,CAA6Brd,iBAA7B,CAAgDud,WAAhD,CAApB,CACf,CAAImB,aAAA5rC,QAAA,EAAJ,GACI,OAAO,IAAAwrC,OAAA,CAAY1S,OAAZ,CAEP,CAAK8S,aAAA/B,SAAA,EAAAjb,eAAA,EAAAub,aAAA,EAAL,EAII+B,OAAA1rC,KAAA,CAAaorC,aAAA/B,SAAA,EAAb,CAPR,CAFJ,CAHC,CAiBDsC,eAAJ,EAAuB,CAAC,IAAAC,gBAAA,EAAxB,EAEIF,OAAA1rC,KAAA,CAAa,IAAI+qC,SAAA1a,uBAAJ,CAAqClC,KAAAmC,KAArC,CAAiDnC,KAAAjgB,KAAjD,CAAb,CAEJ,OAAO,CAAEw9B,QAASA,OAAX,CAAoB7D,OAAQqC,YAA5B,CA3CoF,CAgD/Fa,UAAAvoC,UAAAspC,cAAA,CAAoCC,QAAS,EAAG,CAC5C,IAAIxmB,MAAQ,IAEZ,OADa1jB,OAAAyG,KAAA,CAAY,IAAA0iC,OAAZ,CAAAxlB,IAAAwmB,CAA6B,QAAS,CAAC9sC,GAAD,CAAM,CAAE,MAAOqmB,MAAAylB,OAAA,CAAa9rC,GAAb,CAAT,CAA5C8sC,CACN7D,OAAA,CAAc,QAAS,CAACiD,IAAD,CAAO,CACjC,MAAO,CAACA,IAAA/B,SAAA,EAAAjb,eAAA,EAAAub,aAAA,EADyB,CAA9B,CAHqC,CAehDoB;SAAAvoC,UAAAgnC,uBAAA,CAA6CyC,QAAS,CAAC/9B,IAAD,CAAO,CACzD,IAAIs2B,YAAc,IAClB7lC,KAAAM,QAAA,CAAa,IAAA+rC,OAAb,CAA0B,QAAS,CAAC9rC,GAAD,CAAMksC,IAAN,CAAY,CAC3C5G,WAAA,CAAcA,WAAd,EAA6B4G,IAAA5B,uBAAA,CAA4Bt7B,IAA5B,CADc,CAA/C,CAGA,OAAOs2B,YALkD,CAW7DuG,UAAAvoC,UAAA0pC,aAAA,CAAmCC,QAAS,CAAChe,KAAD,CAAQ,CAEhD,GADaA,KAAAC,eAAA5d,EACTm5B,aAAA,EAAJ,CACI,MAAO,KAAAyC,gBAAA,EAGH9T,MAAAA,CAAUnK,KAAAoH,gBAAA,EACd,OAAO52B,KAAA2lB,QAAA,CAAa,IAAA0mB,OAAb,CAA0B1S,KAA1B,CAPqC,CAcpDyS,UAAAvoC,UAAA6pC,mBAAA,CAAyCC,QAAS,CAACne,KAAD,CAAQ,CACtD,MAAmC,KAAnC,EAAO,IAAA+d,aAAA,CAAkB/d,KAAlB,CAD+C,CAM1D4c,UAAAvoC,UAAAopC,gBAAA;AAAsCW,QAAS,EAAG,CAC9C,MAAiC,KAAjC,EAAO,IAAAH,gBAAA,EADuC,CAMlDrB,UAAAvoC,UAAA4pC,gBAAA,CAAsCI,QAAS,EAAG,CAO9C,MANmB7tC,KAAA8tC,UAAAC,CAAe,IAAA1B,OAAf0B,CAA4B,QAAS,CAACtB,IAAD,CAAO,CAC3D,MAAOA,KAAA/B,SAAA,EAAAjb,eAAA,EAAAub,aAAA,EADoD,CAA5C+C,CAMnB,EAAuB,IAPuB,CASlD,OAAO3B,UAnNgC,CAAZ,EA1hE/B,CAywEI4B,cAA+B,QAAS,EAAG,CAC3CA,QAASA,cAAa,CAACC,UAAD,CAAa,CAC/B,IAAAA,WAAA,CAAkBA,UADa,CAQnCD,aAAAnqC,UAAAqqC,SAAA,CAAmCC,QAAS,CAAC5+B,IAAD,CAAOmI,IAAP,CAAa,CACrD,GAAInI,IAAA1O,QAAA,EAAJ,CACI,MAAO,KAAImtC,aAAJ,CAAkB,IAAIpT,aAAJ,CAAkBljB,IAAlB,CAAlB,CAGP,KAAI02B,SAAW,IAAAH,WAAA3S,yBAAA,CAAyC/rB,IAAzC,CACf,IAAgB,IAAhB;AAAI6+B,QAAJ,CAAsB,CAClB,IAAIC,aAAeD,QAAA7+B,KACfnM,SAAAA,CAAQgrC,QAAAhrC,MACRkL,KAAAA,CAAejC,IAAAiC,aAAA,CAAkB+/B,YAAlB,CAAgC9+B,IAAhC,CACnBnM,SAAA,CAAQA,QAAA6X,YAAA,CAAkB3M,IAAlB,CAAgCoJ,IAAhC,CACR,OAAO,KAAIs2B,aAAJ,CAAkB,IAAAC,WAAAnqC,IAAA,CAAoBuqC,YAApB,CAAkCjrC,QAAlC,CAAlB,CALW,CAQdq3B,IAAAA,CAAU,IAAIG,aAAJ,CAAkBljB,IAAlB,CACV42B,KAAAA,CAAe,IAAAL,WAAAnS,QAAA,CAAwBvsB,IAAxB,CAA8BkrB,IAA9B,CACnB,OAAO,KAAIuT,aAAJ,CAAkBM,IAAlB,CAhBsC,CAyBzDN,cAAAnqC,UAAA0qC,UAAA,CAAoCC,QAAS,CAACj/B,IAAD,CAAOk/B,OAAP,CAAgB,CACzD,IAAIC,SAAW,IACf1uC,KAAAM,QAAA,CAAamuC,OAAb,CAAsB,QAAS,CAACrW,QAAD,CAAW1gB,IAAX,CAAiB,CAC5Cg3B,QAAA,CAAWA,QAAAR,SAAA,CAAkB3+B,IAAApO,MAAA,CAAWi3B,QAAX,CAAlB,CAAwC1gB,IAAxC,CADiC,CAAhD,CAGA,OAAOg3B,SALkD,CAc7DV;aAAAnqC,UAAA8qC,YAAA,CAAsCC,QAAS,CAACr/B,IAAD,CAAO,CAClD,GAAIA,IAAA1O,QAAA,EAAJ,CACI,MAAOmtC,cAAAtT,MAGH4T,KAAAA,CAAe,IAAAL,WAAAnS,QAAA,CAAwBvsB,IAAxB,CAA8BqrB,aAAAF,MAA9B,CACnB,OAAO,KAAIsT,aAAJ,CAAkBM,IAAlB,CANuC,CAgBtDN,cAAAnqC,UAAAgrC,iBAAA,CAA2CC,QAAS,CAACv/B,IAAD,CAAO,CACvD,MAAqC,KAArC,EAAO,IAAAw/B,gBAAA,CAAqBx/B,IAArB,CADgD,CAU3Dy+B,cAAAnqC,UAAAkrC,gBAAA,CAA0CC,QAAS,CAACz/B,IAAD,CAAO,CACtD,IAAI6+B,SAAW,IAAAH,WAAA3S,yBAAA,CAAyC/rB,IAAzC,CACf,OAAgB,KAAhB,EAAI6+B,QAAJ,CACW,IAAAH,WAAA7pC,IAAA,CACEgqC,QAAA7+B,KADF,CAAAkL,SAAA,CAEOpO,IAAAiC,aAAA,CAAkB8/B,QAAA7+B,KAAlB,CAAiCA,IAAjC,CAFP,CADX,CAMW,IAR2C,CAgB1Dy+B;aAAAnqC,UAAAorC,oBAAA,CAA8CC,QAAS,EAAG,CACtD,IAAI1U,SAAW,EAAf,CACI9iB,KAAO,IAAAu2B,WAAA7qC,MACC,KAAZ,EAAIsU,IAAJ,CAESA,IAAA9W,WAAA,EAFT,EAGQ8W,IAAA6D,aAAA,CAAkB3Z,cAAlB,CAAkC,QAAS,CAAC4Y,SAAD,CAAY7Z,SAAZ,CAAuB,CAC9D65B,QAAAn5B,KAAA,CAAc,IAAIC,SAAJ,CAAckZ,SAAd,CAAyB7Z,SAAzB,CAAd,CAD8D,CAAlE,CAHR,CASI,IAAAstC,WAAAzT,SAAApb,iBAAA,CAA0C,QAAS,CAAC5E,SAAD,CAAYyK,SAAZ,CAAuB,CAC/C,IAAvB,EAAIA,SAAA7hB,MAAJ,EACIo3B,QAAAn5B,KAAA,CAAc,IAAIC,SAAJ,CAAckZ,SAAd,CAAyByK,SAAA7hB,MAAzB,CAAd,CAFkE,CAA1E,CAMJ,OAAOo3B,SAlB+C,CAwB1DwT,cAAAnqC,UAAAsrC,mBAAA,CAA6CC,QAAS,CAAC7/B,IAAD,CAAO,CACzD,GAAIA,IAAA1O,QAAA,EAAJ,CACI,MAAO,KAGP;IAAIwuC,cAAgB,IAAAN,gBAAA,CAAqBx/B,IAArB,CACpB,OAAqB,KAArB,EAAI8/B,aAAJ,CACW,IAAIrB,aAAJ,CAAkB,IAAIpT,aAAJ,CAAkByU,aAAlB,CAAlB,CADX,CAIW,IAAIrB,aAAJ,CAAkB,IAAAC,WAAAxT,QAAA,CAAwBlrB,IAAxB,CAAlB,CAV0C,CAkB7Dy+B,cAAAnqC,UAAAhD,QAAA,CAAkCyuC,QAAS,EAAG,CAC1C,MAAO,KAAArB,WAAAptC,QAAA,EADmC,CAS9CmtC,cAAAnqC,UAAAmD,MAAA,CAAgCuoC,QAAS,CAAC73B,IAAD,CAAO,CAC5C,MAAOs2B,cAAAwB,mBAAA,CAAiCnjC,IAAAquB,MAAjC,CAA6C,IAAAuT,WAA7C,CAA8Dv2B,IAA9D,CADqC,CAMhDs2B,cAAAtT,MAAA,CAAsB,IAAIsT,aAAJ,CAAkB,IAAIpT,aAAJ,CAAkB,IAAlB,CAAlB,CAQtBoT,cAAAwB,mBAAA,CAAmCC,QAAS,CAACnhC,YAAD,CAAeohC,SAAf,CAA0Bh4B,IAA1B,CAAgC,CACxE,GAAuB,IAAvB;AAAIg4B,SAAAtsC,MAAJ,CAEI,MAAOsU,KAAAuD,YAAA,CAAiB3M,YAAjB,CAA+BohC,SAAAtsC,MAA/B,CAGP,KAAIusC,gBAAkB,IACtBD,UAAAlV,SAAApb,iBAAA,CAAoC,QAAS,CAACgZ,QAAD,CAAWnT,SAAX,CAAsB,CAC9C,WAAjB,GAAImT,QAAJ,EAGIp4B,IAAAC,OAAA,CAAgC,IAAhC,GAAYglB,SAAA7hB,MAAZ,CAAsC,2CAAtC,CACA,CAAAusC,eAAA,CAAkB1qB,SAAA7hB,MAJtB,EAOIsU,IAPJ,CAOWs2B,aAAAwB,mBAAA,CAAiClhC,YAAAnN,MAAA,CAAmBi3B,QAAnB,CAAjC,CAA+DnT,SAA/D,CAA0EvN,IAA1E,CARoD,CAAnE,CAYKA,KAAA+C,SAAA,CAAcnM,YAAd,CAAAzN,QAAA,EAAL,EAAkE,IAAlE,GAA8C8uC,eAA9C,GACIj4B,IADJ,CACWA,IAAAuD,YAAA,CAAiB3M,YAAAnN,MAAA,CAAmB,WAAnB,CAAjB,CAAkDwuC,eAAlD,CADX,CAGA;MAAOj4B,KAtB6D,CAyB5E,OAAOs2B,cApLoC,CAAZ,EAzwEnC,CAu9EI4B,UAA2B,QAAS,EAAG,CACvCA,QAASA,UAAS,EAAG,CAQjB,IAAAC,eAAA,CAAsB7B,aAAAtT,MAStB,KAAAoV,WAAA,CAAkB,EAClB,KAAAC,aAAA,CAAqB,EAlBJ,CA0BrBH,SAAA/rC,UAAAmsC,YAAA,CAAkCC,QAAS,CAAC1gC,IAAD,CAAO,CAC9C,MAAO,KAAI2gC,YAAJ,CAAiB3gC,IAAjB,CAAuB,IAAvB,CADuC,CAWlDqgC,UAAA/rC,UAAAssC,aAAA,CAAmCC,QAAS,CAAC7gC,IAAD,CAAOwc,IAAP,CAAaskB,OAAb,CAAsBC,OAAtB,CAA+B,CACvEtwC,IAAAC,OAAA,CAAYowC,OAAZ,CAAsB,IAAAN,aAAtB,CAAyC,8CAAzC,CACgB57B,KAAAA,EAAhB,GAAIm8B,OAAJ,GACIA,OADJ,CACc,CAAA,CADd,CAGA,KAAAR,WAAAzuC,KAAA,CAAqB,CACjBkO,KAAMA,IADW,CAEjBwc,KAAMA,IAFW,CAGjBskB,QAASA,OAHQ,CAIjBC,QAASA,OAJQ,CAArB,CAMIA;OAAJ,GACI,IAAAT,eADJ,CAC0B,IAAAA,eAAA3B,SAAA,CAA6B3+B,IAA7B,CAAmCwc,IAAnC,CAD1B,CAGA,KAAAgkB,aAAA,CAAoBM,OAdmD,CAuB3ET,UAAA/rC,UAAA0sC,SAAA,CAA+BC,QAAS,CAACjhC,IAAD,CAAO83B,eAAP,CAAwBgJ,OAAxB,CAAiC,CACrErwC,IAAAC,OAAA,CAAYowC,OAAZ,CAAsB,IAAAN,aAAtB,CAAyC,8CAAzC,CACA,KAAAD,WAAAzuC,KAAA,CAAqB,CACjBkO,KAAMA,IADW,CAEjBirB,SAAU6M,eAFO,CAGjBgJ,QAASA,OAHQ,CAIjBC,QAAS,CAAA,CAJQ,CAArB,CAMA,KAAAT,eAAA,CAAsB,IAAAA,eAAAtB,UAAA,CAA8Bh/B,IAA9B,CAAoC83B,eAApC,CACtB,KAAA0I,aAAA,CAAoBM,OATiD,CAezET,UAAA/rC,UAAA4sC,SAAA,CAA+BC,QAAS,CAACL,OAAD,CAAU,CAC9C,IAAK,IAAIvpC,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAAgpC,WAAAvuC,OAApB,CAA4CuF,CAAA,EAA5C,CAAiD,CAC7C,IAAI6pC;AAAS,IAAAb,WAAA,CAAgBhpC,CAAhB,CACb,IAAI6pC,MAAAN,QAAJ,GAAuBA,OAAvB,CACI,MAAOM,OAHkC,CAMjD,MAAO,KAPuC,CAiBlDf,UAAA/rC,UAAA8qC,YAAA,CAAkCiC,QAAS,CAACP,OAAD,CAAU,CAKjD,IAAIzpB,MAAQ,IAAZ,CACI8B,IAAM,IAAAonB,WAAAe,UAAA,CAA0B,QAAS,CAACrmC,CAAD,CAAI,CAC7C,MAAOA,EAAA6lC,QAAP,GAAqBA,OADwB,CAAvC,CAGVrwC,KAAAC,OAAA,CAAmB,CAAnB,EAAYyoB,GAAZ,CAAsB,8CAAtB,CACA,KAAIooB,cAAgB,IAAAhB,WAAA,CAAgBpnB,GAAhB,CACpB,KAAAonB,WAAAiB,OAAA,CAAuBroB,GAAvB,CAA4B,CAA5B,CAIA,KAHA,IAAIsoB,uBAAyBF,aAAAR,QAA7B,CACIW,oCAAsC,CAAA,CAD1C,CAEInqC,EAAI,IAAAgpC,WAAAvuC,OAAJuF,CAA6B,CACjC,CAAOkqC,sBAAP,EAAsC,CAAtC,EAAiClqC,CAAjC,CAAA,CAAyC,CACrC,IAAIoqC;AAAe,IAAApB,WAAA,CAAgBhpC,CAAhB,CACfoqC,aAAAZ,QAAJ,GACQxpC,CAAJ,EAAS4hB,GAAT,EACI,IAAAyoB,oBAAA,CAAyBD,YAAzB,CAAuCJ,aAAAvhC,KAAvC,CADJ,CAGIyhC,sBAHJ,CAG6B,CAAA,CAH7B,CAKSF,aAAAvhC,KAAA9O,SAAA,CAA4BywC,YAAA3hC,KAA5B,CALT,GAOI0hC,mCAPJ,CAO0C,CAAA,CAP1C,CADJ,CAWAnqC,EAAA,EAbqC,CAezC,MAAKkqC,uBAAL,EAGSC,mCAAJ,CAED,IAAAG,WAAA,EAFC,CAOGN,aAAA/kB,KAAJ,CACI,IAAA8jB,eADJ,CAC0B,IAAAA,eAAAlB,YAAA,CAAgCmC,aAAAvhC,KAAhC,CAD1B,CAKIvP,IAAAM,QAAA,CADewwC,aAAAtW,SACf,CAAuB,QAAS,CAAChgB,SAAD,CAAY,CACxCoM,KAAAipB,eAAA,CAAuBjpB,KAAAipB,eAAAlB,YAAA,CAAiCmC,aAAAvhC,KAAApO,MAAA,CAAyBqZ,SAAzB,CAAjC,CADiB,CAA5C,CATG;AAAA,CAAA,CANX,EACW,CAAA,CA/BsC,CA2DrDo1B,UAAA/rC,UAAAwtC,qBAAA,CAA2CC,QAAS,CAAC/hC,IAAD,CAAO,CACvD,MAAO,KAAAsgC,eAAAd,gBAAA,CAAoCx/B,IAApC,CADgD,CAa3DqgC,UAAA/rC,UAAAsiC,uBAAA,CAA6CoL,QAAS,CAACC,QAAD,CAAW/I,mBAAX,CAAgCgJ,iBAAhC,CAAmDC,mBAAnD,CAAwE,CAC1H,GAAKD,iBAAL,EAA2BC,mBAA3B,CAqBK,CACD,IAAIhK,MAAQ,IAAAmI,eAAAV,mBAAA,CAAuCqC,QAAvC,CACZ,OAAI,CAACE,mBAAL,EAA4BhK,KAAA7mC,QAAA,EAA5B,CACW4nC,mBADX,CAKSiJ,mBAAL,EAC2B,IAD3B,EACIjJ,mBADJ,EAEKf,KAAAmH,iBAAA,CAAuBxiC,IAAAquB,MAAvB,CAFL,EAYQiX,KAEG,CAFW/B,SAAAgC,WAAA,CAAqB,IAAA9B,WAArB;AANLtG,QAAS,CAACqI,KAAD,CAAQ,CAC1B,OAASA,KAAAvB,QAAT,EAA0BoB,mBAA1B,IACK,CAACD,iBADN,EAEQ,CAAC,CAACA,iBAAA5gC,QAAA,CAA0BghC,KAAAxB,QAA1B,CAFV,IAGKwB,KAAAtiC,KAAA9O,SAAA,CAAoB+wC,QAApB,CAHL,EAGsCA,QAAA/wC,SAAA,CAAkBoxC,KAAAtiC,KAAlB,CAHtC,CAD0B,CAMZ,CAA8CiiC,QAA9C,CAEX,CADHM,mBACG,CADYrJ,mBACZ,EADmC3oC,YAAAC,WACnC,CAAA4xC,KAAA3qC,MAAA,CAAkB8qC,mBAAlB,CAdX,EAGW,IAVd,CApBGzC,KAAAA,CAAgB,IAAAQ,eAAAd,gBAAA,CAAoCyC,QAApC,CACpB,IAAqB,IAArB,EAAInC,KAAJ,CACI,MAAOA,MAGH0C,MAAAA,CAAW,IAAAlC,eAAAV,mBAAA,CAAuCqC,QAAvC,CACf,OAAIO,MAAAlxC,QAAA,EAAJ,CACW4nC,mBADX,CAGgC,IAA3B,EAAIA,mBAAJ;AACAsJ,KAAAlD,iBAAA,CAA0BxiC,IAAAquB,MAA1B,CADA,EAMGoX,mBACG,CADYrJ,mBACZ,EADmC3oC,YAAAC,WACnC,CAAAgyC,KAAA/qC,MAAA,CAAe8qC,mBAAf,CAPN,EAGM,IAduG,CAwD9HlC,UAAA/rC,UAAAkiC,0BAAA,CAAgDiM,QAAS,CAACR,QAAD,CAAWS,sBAAX,CAAmC,CACxF,IAAIjM,iBAAmBlmC,YAAAC,WAAvB,CACImyC,YAAc,IAAArC,eAAAd,gBAAA,CAAoCyC,QAApC,CAClB,IAAIU,WAAJ,CACSA,WAAAtxC,WAAA,EAAL,EAEIsxC,WAAA32B,aAAA,CAAyB3Z,cAAzB,CAAyC,QAAS,CAAC4Y,SAAD,CAAYugB,SAAZ,CAAuB,CACrEiL,gBAAA,CAAmBA,gBAAAllC,qBAAA,CAAsC0Z,SAAtC;AAAiDugB,SAAjD,CADkD,CAAzE,CAHR,KASK,IAAIkX,sBAAJ,CAA4B,CAG7B,IAAIE,QAAU,IAAAtC,eAAAV,mBAAA,CAAuCqC,QAAvC,CACdS,uBAAA12B,aAAA,CAAoC3Z,cAApC,CAAoD,QAAS,CAAC4Y,SAAD,CAAY7Z,SAAZ,CAAuB,CAC5E+W,SAAAA,CAAOy6B,OAAAhD,mBAAA,CACa,IAAI9iC,IAAJ,CAASmO,SAAT,CADb,CAAAxT,MAAA,CAEArG,SAFA,CAGXqlC,iBAAA,CAAmBA,gBAAAllC,qBAAA,CAAsC0Z,SAAtC,CAAiD9C,SAAjD,CAJ6D,CAApF,CAOAy6B,QAAAlD,oBAAA,EAAA3uC,QAAA,CAAsC,QAAS,CAACoB,SAAD,CAAY,CACvDskC,gBAAA,CAAmBA,gBAAAllC,qBAAA,CAAsCY,SAAAjC,KAAtC,CAAsDiC,SAAAgW,KAAtD,CADoC,CAA3D,CAX6B,CAA5B,IAmBW,KAAAm4B,eAAAV,mBAAAzH,CAAuC8J,QAAvC9J,CACZuH,oBAAA,EAAA3uC,QAAA,CAAoC,QAAS,CAACoB,SAAD,CAAY,CACrDskC,gBAAA;AAAmBA,gBAAAllC,qBAAA,CAAsCY,SAAAjC,KAAtC,CAAsDiC,SAAAgW,KAAtD,CADkC,CAAzD,CAtBA,OAAOsuB,iBAV6E,CA0D5F4J,UAAA/rC,UAAAyiC,mCAAA,CAAyD8L,QAAS,CAACZ,QAAD,CAAWrkB,SAAX,CAAsBklB,iBAAtB,CAAyCC,kBAAzC,CAA6D,CAC3HtyC,IAAAC,OAAA,CAAYoyC,iBAAZ,EAAiCC,kBAAjC,CAAqD,2DAArD,CACI/iC,SAAAA,CAAOiiC,QAAArwC,MAAA,CAAegsB,SAAf,CACX,IAAI,IAAA0iB,eAAAhB,iBAAA,CAAqCt/B,QAArC,CAAJ,CAGI,MAAO,KAIHgjC,SAAAA,CAAa,IAAA1C,eAAAV,mBAAA,CAAuC5/B,QAAvC,CACjB,OAAIgjC,SAAA1xC,QAAA,EAAJ;AAEWyxC,kBAAA73B,SAAA,CAA4B0S,SAA5B,CAFX,CAWWolB,QAAAvrC,MAAA,CAAiBsrC,kBAAA73B,SAAA,CAA4B0S,SAA5B,CAAjB,CAtB4G,CAmC/HyiB,UAAA/rC,UAAA2/B,kBAAA,CAAwCgP,QAAS,CAAChB,QAAD,CAAWpZ,QAAX,CAAqBka,kBAArB,CAAyC,CAClF/iC,QAAAA,CAAOiiC,QAAArwC,MAAA,CAAei3B,QAAf,CACX,KAAIiX,cAAgB,IAAAQ,eAAAd,gBAAA,CAAoCx/B,QAApC,CACpB,OAAqB,KAArB,EAAI8/B,aAAJ,CACWA,aADX,CAIQiD,kBAAA3T,mBAAA,CAAsCvG,QAAtC,CAAJ,CACqB,IAAAyX,eAAAV,mBAAAoD,CAAuChjC,QAAvCgjC,CACVvrC,MAAA,CAAiBsrC,kBAAAzT,QAAA,EAAAvkB,kBAAA,CAA+C8d,QAA/C,CAAjB,CAFX,CAKW,IAZuE,CAwB1FwX,UAAA/rC,UAAA+hC,eAAA;AAAqC6M,QAAS,CAACljC,IAAD,CAAO,CACjD,MAAO,KAAAsgC,eAAAd,gBAAA,CAAoCx/B,IAApC,CAD0C,CAerDqgC,UAAA/rC,UAAA+/B,iBAAA,CAAuC8O,QAAS,CAAClB,QAAD,CAAW9N,kBAAX,CAA+Bja,SAA/B,CAA0CxK,KAA1C,CAAiD3T,OAAjD,CAA0DmQ,KAA1D,CAAiE,CAEzGisB,QAAAA,CAAQ,IAAAmI,eAAAV,mBAAA,CAAuCqC,QAAvC,CACRnC,KAAAA,UAAgB3H,QAAAqH,gBAAA,CAAsB1iC,IAAAquB,MAAtB,CACpB,IAAqB,IAArB,EAAI2U,SAAJ,CAGK,GAA0B,IAA1B,EAAI3L,kBAAJ,CACDiP,SAAA,CAAYjL,QAAA1gC,MAAA,CAAY08B,kBAAZ,CADX,KAKD,OAAO,EAEXiP,UAAA,CAAYA,SAAA/1B,UAAA,CAAoBnB,KAApB,CACZ,IAAKk3B,SAAA9xC,QAAA,EAAL,EAA6B8xC,SAAA/xC,WAAA,EAA7B,CAgBI,MAAO,EAfH+iC,mBAAAA,CAAQ,EACR30B,SAAAA;AAAMyM,KAAA5Z,WAAA,EACNskB,QAAAA,CAAO7a,OAAA,CACLqnC,SAAAjvB,uBAAA,CAAiC+F,SAAjC,CAA4ChO,KAA5C,CADK,CAELk3B,SAAAnvB,gBAAA,CAA0BiG,SAA1B,CAAqChO,KAArC,CAEN,KADI2K,KACJ,CADWD,OAAA/H,QAAA,EACX,CAAOgI,KAAP,EAAeud,kBAAApiC,OAAf,CAA8B0d,KAA9B,CAAA,CACiC,CAG7B,GAHIjQ,QAAA,CAAIoX,KAAJ,CAAUqD,SAAV,CAGJ,EAFIka,kBAAAtiC,KAAA,CAAW+kB,KAAX,CAEJ,CAAAA,KAAA,CAAOD,OAAA/H,QAAA,EAEX,OAAOulB,mBA5BkG,CAwCjHiM,UAAA/rC,UAAAstC,oBAAA,CAA0CyB,QAAS,CAACC,WAAD,CAActjC,IAAd,CAAoB,CACnE,MAAIsjC,YAAA9mB,KAAJ,CACW8mB,WAAAtjC,KAAA9O,SAAA,CAA0B8O,IAA1B,CADX,CAKW,CAAC,CAACvP,IAAA8yC,QAAA,CAAaD,WAAArY,SAAb,CAAmC,QAAS,CAACO,SAAD,CAAYvgB,SAAZ,CAAuB,CACxE,MAAOq4B,YAAAtjC,KAAApO,MAAA,CAAuBqZ,SAAvB,CAAA/Z,SAAA,CAA2C8O,IAA3C,CADiE,CAAnE,CANsD,CAevEqgC;SAAA/rC,UAAAutC,WAAA,CAAiC2B,QAAS,EAAG,CACzC,IAAAlD,eAAA,CAAsBD,SAAAgC,WAAA,CAAqB,IAAA9B,WAArB,CAAsCF,SAAAoD,eAAtC,CAAgE3mC,IAAAquB,MAAhE,CAElB,KAAAqV,aAAA,CADyB,CAA7B,CAAI,IAAAD,WAAAvuC,OAAJ,CACwB,IAAAuuC,WAAA,CAAgB,IAAAA,WAAAvuC,OAAhB,CAAyC,CAAzC,CAAA8uC,QADxB,CAIyB,EANgB,CAgB7CT,UAAAoD,eAAA,CAA2BC,QAAS,CAACpB,KAAD,CAAQ,CACxC,MAAOA,MAAAvB,QADiC,CAa5CV,UAAAgC,WAAA,CAAuBsB,QAAS,CAACC,MAAD,CAAS3J,MAAT,CAAiB4J,QAAjB,CAA2B,CAEvD,IADA,IAAIC,cAAgBrF,aAAAtT,MAApB,CACS5zB,EAAI,CAAb,CAAgBA,CAAhB,CAAoBqsC,MAAA5xC,OAApB,CAAmC,EAAEuF,CAArC,CAAwC,CACpC,IAAI+qC,MAAQsB,MAAA,CAAOrsC,CAAP,CAIZ,IAAI0iC,MAAA,CAAOqI,KAAP,CAAJ,CAAmB,CACf,IAAItK,UAAYsK,KAAAtiC,KAEhB,IAAIsiC,KAAA9lB,KAAJ,CACQqnB,QAAA3yC,SAAA,CAAkB8mC,SAAlB,CAAJ;CACIj5B,SACA,CADejC,IAAAiC,aAAA,CAAkB8kC,QAAlB,CAA4B7L,SAA5B,CACf,CAAA8L,aAAA,CAAgBA,aAAAnF,SAAA,CAAuB5/B,SAAvB,CAAqCujC,KAAA9lB,KAArC,CAFpB,EAISwb,SAAA9mC,SAAA,CAAmB2yC,QAAnB,CAJT,GAKI9kC,SACA,CADejC,IAAAiC,aAAA,CAAkBi5B,SAAlB,CAA6B6L,QAA7B,CACf,CAAAC,aAAA,CAAgBA,aAAAnF,SAAA,CAAuB7hC,IAAAquB,MAAvB,CAAmCmX,KAAA9lB,KAAAtR,SAAA,CAAoBnM,SAApB,CAAnC,CANpB,CADJ,KAUK,IAAIujC,KAAArX,SAAJ,CACD,GAAI4Y,QAAA3yC,SAAA,CAAkB8mC,SAAlB,CAAJ,CACIj5B,SACA,CADejC,IAAAiC,aAAA,CAAkB8kC,QAAlB,CAA4B7L,SAA5B,CACf,CAAA8L,aAAA,CAAgBA,aAAA9E,UAAA,CAAwBjgC,SAAxB,CAAsCujC,KAAArX,SAAtC,CAFpB,KAIK,IAAI+M,SAAA9mC,SAAA,CAAmB2yC,QAAnB,CAAJ,CAED,GADA9kC,SACI,CADWjC,IAAAiC,aAAA,CAAkBi5B,SAAlB;AAA6B6L,QAA7B,CACX,CAAA9kC,SAAAzN,QAAA,EAAJ,CACIwyC,aAAA,CAAgBA,aAAA9E,UAAA,CAAwBliC,IAAAquB,MAAxB,CAAoCmX,KAAArX,SAApC,CADpB,KAKI,IADIr5B,KACJ,CADYnB,IAAA2lB,QAAA,CAAaksB,KAAArX,SAAb,CAA6BlsB,SAAAxB,SAAA,EAA7B,CACZ,CAEQwmC,KACJ,CADenyC,KAAAsZ,SAAA,CAAenM,SAAApB,SAAA,EAAf,CACf,CAAAmmC,aAAA,CAAgBA,aAAAnF,SAAA,CAAuB7hC,IAAAquB,MAAvB,CAAmC4Y,KAAnC,CAVvB,CALJ,IAqBD,MAAMtzC,KAAAgZ,eAAA,CAAoB,4CAApB,CAAN,CAlCW,CALiB,CA2CxC,MAAOq6B,cA7CgD,CA+C3D,OAAOzD,UApegC,CAAZ,EAv9E/B,CAm8FIM,aAA8B,QAAS,EAAG,CAK1CA,QAASA,aAAY,CAAC3gC,IAAD,CAAOmgC,SAAP,CAAkB,CACnC,IAAA6D,UAAA,CAAiBhkC,IACjB,KAAA0+B,WAAA,CAAkByB,SAFiB,CAcvCQ,YAAArsC,UAAAsiC,uBAAA;AAAgDqN,QAAS,CAAC/K,mBAAD,CAAsBgJ,iBAAtB,CAAyCC,mBAAzC,CAA8D,CACnH,MAAO,KAAAzD,WAAA9H,uBAAA,CAAuC,IAAAoN,UAAvC,CAAuD9K,mBAAvD,CAA4EgJ,iBAA5E,CAA+FC,mBAA/F,CAD4G,CAUvHxB,aAAArsC,UAAAkiC,0BAAA,CAAmD0N,QAAS,CAACxB,sBAAD,CAAyB,CACjF,MAAO,KAAAhE,WAAAlI,0BAAA,CAA0C,IAAAwN,UAA1C,CAA0DtB,sBAA1D,CAD0E,CAsBrF/B,aAAArsC,UAAAyiC,mCAAA,CAA4DoN,QAAS,CAACnkC,IAAD,CAAO8iC,iBAAP,CAA0BC,kBAA1B,CAA8C,CAC/G,MAAO,KAAArE,WAAA3H,mCAAA,CAAmD,IAAAiN,UAAnD;AAAmEhkC,IAAnE,CAAyE8iC,iBAAzE,CAA4FC,kBAA5F,CADwG,CAWnHpC,aAAArsC,UAAA+hC,eAAA,CAAwC+N,QAAS,CAACpkC,IAAD,CAAO,CACpD,MAAO,KAAA0+B,WAAArI,eAAA,CAA+B,IAAA2N,UAAApyC,MAAA,CAAqBoO,IAArB,CAA/B,CAD6C,CAcxD2gC,aAAArsC,UAAA+/B,iBAAA,CAA0CgQ,QAAS,CAAClQ,kBAAD,CAAqBja,SAArB,CAAgCxK,KAAhC,CAAuC3T,OAAvC,CAAgDmQ,KAAhD,CAAuD,CACtG,MAAO,KAAAwyB,WAAArK,iBAAA,CAAiC,IAAA2P,UAAjC,CAAiD7P,kBAAjD,CAAqEja,SAArE,CAAgFxK,KAAhF,CAAuF3T,OAAvF,CAAgGmQ,KAAhG,CAD+F,CAW1Gy0B,aAAArsC,UAAA2/B,kBAAA,CAA2CqQ,QAAS,CAACzb,QAAD,CAAW0b,mBAAX,CAAgC,CAChF,MAAO,KAAA7F,WAAAzK,kBAAA,CAAkC,IAAA+P,UAAlC;AAAkDnb,QAAlD,CAA4D0b,mBAA5D,CADyE,CASpF5D,aAAArsC,UAAA1C,MAAA,CAA+B4yC,QAAS,CAACv5B,SAAD,CAAY,CAChD,MAAO,KAAI01B,YAAJ,CAAiB,IAAAqD,UAAApyC,MAAA,CAAqBqZ,SAArB,CAAjB,CAAkD,IAAAyzB,WAAlD,CADyC,CAGpD,OAAOiC,aAnGmC,CAAZ,EAn8FlC,CA+kGI8D,SAA0B,QAAS,EAAG,CAKtCA,QAASA,SAAQ,CAACC,eAAD,CAAkB,CAC/B,IAAAA,gBAAA,CAAuBA,eAMvB,KAAAC,eAAA,CAAsBtZ,aAAAF,MAMtB,KAAAyZ,kBAAA,CAAyB,IAAIvE,SAC7B,KAAAwE,eAAA,CAAsB,EACtB,KAAAC,eAAA,CAAsB,EAfS,CA0BnCL,QAAAnwC,UAAAywC,mBAAA,CAAwCC,QAAS,CAAChlC,IAAD,CAAOilC,OAAP,CAAgBnE,OAAhB,CAAyBC,OAAzB,CAAkC,CAE/E,IAAA6D,kBAAAhE,aAAA,CAAoC5gC,IAApC;AAA0CilC,OAA1C,CAAmDnE,OAAnD,CAA4DC,OAA5D,CACA,OAAKA,QAAL,CAIW,IAAAmE,4BAAA,CAAiC,IAAI9W,SAAJ,CAAcnE,eAAAK,KAAd,CAAoCtqB,IAApC,CAA0CilC,OAA1C,CAAjC,CAJX,CACW,EAJoE,CAkBnFR,SAAAnwC,UAAA6wC,eAAA,CAAoCC,QAAS,CAACplC,IAAD,CAAO83B,eAAP,CAAwBgJ,OAAxB,CAAiC,CAE1E,IAAA8D,kBAAA5D,SAAA,CAAgChhC,IAAhC,CAAsC83B,eAAtC,CAAuDgJ,OAAvD,CACIuE,gBAAAA,CAAaha,aAAAC,WAAA,CAAyBwM,eAAzB,CACjB,OAAO,KAAAoN,4BAAA,CAAiC,IAAI3W,KAAJ,CAAUtE,eAAAK,KAAV,CAAgCtqB,IAAhC,CAAsCqlC,eAAtC,CAAjC,CAJmE,CAa9EZ,SAAAnwC,UAAAgxC,aAAA,CAAkCC,QAAS,CAACzE,OAAD,CAAUlW,MAAV,CAAkB,CAC1C,IAAK,EAApB,GAAIA,MAAJ,GAAyBA,MAAzB,CAAkC,CAAA,CAAlC,CACA;IAAI0X,MAAQ,IAAAsC,kBAAA1D,SAAA,CAAgCJ,OAAhC,CAEZ,IADuB,IAAA8D,kBAAAxF,YAAAoG,CAAmC1E,OAAnC0E,CACvB,CAGK,CACD,IAAIC,eAAiBpa,aAAAF,MACH,KAAlB,EAAImX,KAAA9lB,KAAJ,CAEIipB,cAFJ,CAEqBA,cAAAlxC,IAAA,CAAmBuI,IAAAquB,MAAnB,CAA+B,CAAA,CAA/B,CAFrB,CAKI16B,IAAAM,QAAA,CAAauxC,KAAArX,SAAb,CAA6B,QAAS,CAACjtB,UAAD,CAAamK,IAAb,CAAmB,CACrDs9B,cAAA,CAAiBA,cAAAlxC,IAAA,CAAmB,IAAIuI,IAAJ,CAASkB,UAAT,CAAnB,CAAyCmK,IAAzC,CADoC,CAAzD,CAIJ,OAAO,KAAA+8B,4BAAA,CAAiC,IAAIxa,YAAJ,CAAiB4X,KAAAtiC,KAAjB,CAA6BylC,cAA7B,CAA6C7a,MAA7C,CAAjC,CAXN,CAFD,MAAO,EAL8C,CA4B7D6Z,SAAAnwC,UAAAoxC,qBAAA,CAA0CC,QAAS,CAAC3lC,IAAD,CAAOilC,OAAP,CAAgB,CAC/D,MAAO,KAAAC,4BAAA,CAAiC,IAAI9W,SAAJ,CAAcnE,eAAAM,OAAd;AAAsCvqB,IAAtC,CAA4CilC,OAA5C,CAAjC,CADwD,CAUnER,SAAAnwC,UAAAsxC,iBAAA,CAAsCC,QAAS,CAAC7lC,IAAD,CAAO83B,eAAP,CAAwB,CAC/DuN,eAAAA,CAAaha,aAAAC,WAAA,CAAyBwM,eAAzB,CACjB,OAAO,KAAAoN,4BAAA,CAAiC,IAAI3W,KAAJ,CAAUtE,eAAAM,OAAV,CAAkCvqB,IAAlC,CAAwCqlC,eAAxC,CAAjC,CAF4D,CAUvEZ,SAAAnwC,UAAAwxC,oBAAA,CAAyCC,QAAS,CAAC/lC,IAAD,CAAO,CACrD,MAAO,KAAAklC,4BAAA,CAAiC,IAAIjX,cAAJ,CAAmBhE,eAAAM,OAAnB,CAA2CvqB,IAA3C,CAAjC,CAD8C,CAWzDykC,SAAAnwC,UAAA0xC,0BAAA,CAA+CC,QAAS,CAACjmC,IAAD,CAAOwc,IAAP,CAAa0pB,GAAb,CAAkB,CAClEC,GAAAA,CAAW,IAAAC,gBAAA,CAAqBF,GAArB,CACf,IAAgB,IAAhB,EAAIC,GAAJ,CAAsB,CAClB,IAAIE;AAAI5B,QAAA6B,eAAA,CAAwBH,GAAxB,CACJI,IAAAA,CAAYF,CAAArmC,KAAQoqB,EAAAA,CAAUic,CAAAjc,QAC9BrrB,KAAAA,CAAejC,IAAAiC,aAAA,CAAkBwnC,GAAlB,CAA6BvmC,IAA7B,CACfwmC,KAAAA,CAAK,IAAIpY,SAAJ,CAAcnE,eAAAO,qBAAA,CAAqCJ,CAArC,CAAd,CAA6DrrB,IAA7D,CAA2Eyd,IAA3E,CACT,OAAO,KAAAiqB,sBAAA,CAA2BF,GAA3B,CAAsCC,IAAtC,CALW,CASlB,MAAO,EAX2D,CAsB1E/B,SAAAnwC,UAAAoyC,sBAAA,CAA2CC,QAAS,CAAC3mC,IAAD,CAAO83B,eAAP,CAAwBoO,GAAxB,CAA6B,CAE7E,GADIC,GACJ,CADe,IAAAC,gBAAA,CAAqBF,GAArB,CACf,CAAc,CACV,IAAIG,EAAI5B,QAAA6B,eAAA,CAAwBH,GAAxB,CACJI,IAAAA,CAAYF,CAAArmC,KAAQoqB,EAAAA,CAAUic,CAAAjc,QAC9BrrB,KAAAA,CAAejC,IAAAiC,aAAA,CAAkBwnC,GAAlB,CAA6BvmC,IAA7B,CACfqlC,gBAAAA,CAAaha,aAAAC,WAAA,CAAyBwM,eAAzB,CACb0O,gBAAAA,CAAK,IAAIjY,KAAJ,CAAUtE,eAAAO,qBAAA,CAAqCJ,CAArC,CAAV;AAAyDrrB,IAAzD,CAAuEsmC,eAAvE,CACT,OAAO,KAAAoB,sBAAA,CAA2BF,GAA3B,CAAsCC,eAAtC,CANG,CAUV,MAAO,EAZkE,CAsBjF/B,SAAAnwC,UAAAsyC,0BAAA,CAA+CC,QAAS,CAAC7mC,IAAD,CAAOkmC,GAAP,CAAY,CAEhE,GADIC,GACJ,CADe,IAAAC,gBAAA,CAAqBF,GAArB,CACf,CAAc,CACV,IAAIG,EAAI5B,QAAA6B,eAAA,CAAwBH,GAAxB,CACJI,IAAAA,CAAYF,CAAArmC,KAAQoqB,EAAAA,CAAUic,CAAAjc,QAC9BrrB,KAAAA,CAAejC,IAAAiC,aAAA,CAAkBwnC,GAAlB,CAA6BvmC,IAA7B,CACfwmC,KAAAA,CAAK,IAAIvY,cAAJ,CAAmBhE,eAAAO,qBAAA,CAAqCJ,CAArC,CAAnB,CAAkErrB,IAAlE,CACT,OAAO,KAAA0nC,sBAAA,CAA2BF,GAA3B,CAAsCC,IAAtC,CALG,CASV,MAAO,EAXqD,CAqBpE/B,SAAAnwC,UAAAqnC,qBAAA,CAA0CmL,QAAS,CAAC7mB,KAAD,CAAQzB,iBAAR,CAA2B,CAC1E,IAAIxe,KAAOigB,KAAAjgB,KAAX,CACIs2B;AAAc,IADlB,CAEIyQ,yBAA2B,CAAA,CAG/B,KAAApC,eAAArX,cAAA,CAAkCttB,IAAlC,CAAwC,QAAS,CAACgnC,eAAD,CAAkBC,EAAlB,CAAsB,CAC/DloC,eAAAA,CAAejC,IAAAiC,aAAA,CAAkBioC,eAAlB,CAAmChnC,IAAnC,CACnBs2B,YAAA,CAAcA,WAAd,EAA6B2Q,EAAA3L,uBAAA,CAA0Bv8B,eAA1B,CAC7BgoC,yBAAA,CACIA,wBADJ,EACgCE,EAAAvJ,gBAAA,EAJmC,CAAvE,CAMA,KAAIwJ,UAAY,IAAAvC,eAAA9vC,IAAA,CAAwBmL,IAAxB,CACXknC,UAAL,EAKIH,wBAEA,CADIA,wBACJ,EADgCG,SAAAxJ,gBAAA,EAChC,CAAApH,WAAA,CAAcA,WAAd,EAA6B4Q,SAAA5L,uBAAA,CAAiCx+B,IAAAquB,MAAjC,CAPjC;CACI+b,SACA,CADY,IAAIrK,SAChB,CAAA,IAAA8H,eAAA,CAAsB,IAAAA,eAAApwC,IAAA,CAAwByL,IAAxB,CAA8BknC,SAA9B,CAF1B,CAUA,IAAmB,IAAnB,EAAI5Q,WAAJ,CACI,IAAA+G,oBAAsB,CAAA,CAD1B,KAIIA,oBAGA,CAHsB,CAAA,CAGtB,CAFA/G,WAEA,CAFc/lC,YAAAC,WAEd,CADc,IAAAm0C,eAAAzZ,QAAAA,CAA4BlrB,IAA5BkrB,CACd6C,aAAA,CAAqB,QAAS,CAAC9iB,SAAD,CAAYk8B,cAAZ,CAA4B,CAEtD,CADIjS,cACJ,CADoBiS,cAAA7L,uBAAA,CAAsCx+B,IAAAquB,MAAtC,CACpB,IACImL,WADJ,CACkBA,WAAA/kC,qBAAA,CAAiC0Z,SAAjC,CAA4CiqB,cAA5C,CADlB,CAFsD,CAA1D,CAOJ,KAAIkS,kBAAoBF,SAAA/I,mBAAA,CAA6Ble,KAA7B,CACxB,IAAI,CAACmnB,iBAAL;AAA0B,CAACnnB,KAAAC,eAAA,EAAAub,aAAA,EAA3B,CAAkE,CAE9D,IAAI0K,SAAW1B,QAAA4C,cAAA,CAAuBpnB,KAAvB,CACfxvB,KAAAC,OAAA,CAAY,EAAEy1C,QAAF,GAAc,KAAArB,eAAd,CAAZ,CAAgD,wCAAhD,CACA,KAAIoB,IAAMzB,QAAA6C,iBAAA,EACV,KAAAxC,eAAA,CAAoBqB,QAApB,CAAA,CAAgCD,GAEhC,KAAArB,eAAA,CAAoB,GAApB,CAA0BqB,GAA1B,CAAA,CAAiCC,QAP6B,CAS9DlR,QAAAA,CAAc,IAAA2P,kBAAAnE,YAAA,CAAmCzgC,IAAnC,CACd25B,kBAAAA,CAASuN,SAAAvL,qBAAA,CAA+B1b,KAA/B,CAAsCzB,iBAAtC,CAAyDyW,QAAzD,CAAsEqB,WAAtE,CAAmF+G,mBAAnF,CACR+J,kBAAL,EAA2BL,wBAA3B,GACQ7J,SACJ;AAD8BgK,SAAAlJ,aAAA,CAAuB/d,KAAvB,CAC9B,CAAA0Z,iBAAA,CAASA,iBAAAthC,OAAA,CAAc,IAAAkvC,eAAA,CAAoBtnB,KAApB,CAA2Bid,SAA3B,CAAd,CAFb,CAIA,OAAOvD,kBArDmE,CAkE9E8K,SAAAnwC,UAAAunC,wBAAA,CAA6C2L,QAAS,CAACvnB,cAAD,CAAQzB,iBAAR,CAA2Bud,WAA3B,CAAwC,CAC1F,IAAI1kB,MAAQ,IAAZ,CAEIrX,KAAOigB,cAAAjgB,KAFX,CAGIynC,eAAiB,IAAA9C,eAAA9vC,IAAA,CAAwBmL,IAAxB,CAHrB,CAIIg8B,aAAe,EAInB,IAAIyL,cAAJ,GACiC,SADjC,GACKxnB,cAAAoH,gBAAA,EADL,EAEQogB,cAAAtJ,mBAAA,CAAkCle,cAAlC,CAFR,EAEmD,CAI3CynB,YAAAA,CAAmBD,cAAA5L,wBAAA,CAAuC5b,cAAvC;AAA8CzB,iBAA9C,CAAiEud,WAAjE,CACnB0L,eAAAn2C,QAAA,EAAJ,GACI,IAAAqzC,eADJ,CAC0B,IAAAA,eAAAzvC,OAAA,CAA2B8K,IAA3B,CAD1B,CAGIw9B,eAAAA,CAAUkK,YAAAlK,QACdxB,aAAA,CAAe0L,YAAA/N,OAOXgO,kBAAAA,CAAmB,EAAnBA,GACAnK,cAAA8D,UAAA,CAAkB,QAAS,CAACrhB,KAAD,CAAQ,CAC/B,MAAOA,MAAAC,eAAA,EAAAub,aAAA,EADwB,CAAnC,CAGJ,KAAImM,QAAU,IAAAjD,eAAA3X,WAAA,CAA+BhtB,IAA/B,CAAqC,QAAS,CAACjB,YAAD,CAAe8oC,eAAf,CAAgC,CACxF,MAAOA,gBAAAnK,gBAAA,EADiF,CAA9E,CAGd,IAAIiK,iBAAJ,EAAuB,CAACC,OAAxB,GACQ1c,IAGA,CAHU,IAAAyZ,eAAAzZ,QAAA,CAA4BlrB,IAA5B,CAGV,CAAA,CAACkrB,IAAA55B,QAAA,EAJT,EAI4B,CAEhBw2C,IAAAA;AAAW,IAAAC,gCAAA,CAAqC7c,IAArC,CAEf,KAAK,IAAI3zB,EAAI,CAAb,CAAgBA,CAAhB,CAAoBuwC,IAAA91C,OAApB,CAAqC,EAAEuF,CAAvC,CAA0C,CAAA,IAClC2lC,KAAO4K,IAAA,CAASvwC,CAAT,CAD2B,CACdywC,SAAW9K,IAAA/B,SAAA,EAC/B8M,KAAAA,CAAW,IAAAC,uBAAA,CAA4BhL,IAA5B,CACf,KAAAwH,gBAAAyD,eAAA,CAAoC1D,QAAA2D,mBAAA,CAA4BJ,QAA5B,CAApC,CAA2E,IAAAK,aAAA,CAAkBL,QAAlB,CAA3E,CAAwGC,IAAAK,OAAxG,CAAyHL,IAAA7hC,WAAzH,CAHsC,CAJtB,CAcxB,CAACwhC,OAAL,EAAiC,CAAjC,CAAgBpK,cAAAxrC,OAAhB,EAAsC,CAAC+pC,WAAvC,GAGQ4L,iBAAJ,CAGI,IAAAjD,gBAAA6D,cAAA,CAAmC9D,QAAA2D,mBAAA,CAA4BnoB,cAA5B,CAAnC,CADiBuoB,IACjB,CAHJ,CAMIhL,cAAAzsC,QAAA,CAAgB,QAAS,CAAC03C,aAAD,CAAgB,CACrC,IAAIC;AAAcrxB,KAAAytB,eAAA,CAAqBL,QAAA4C,cAAA,CAAuBoB,aAAvB,CAArB,CAClBpxB,MAAAqtB,gBAAA6D,cAAA,CAAoC9D,QAAA2D,mBAAA,CAA4BK,aAA5B,CAApC,CAAgFC,WAAhF,CAFqC,CAAzC,CATR,CAgBA,KAAAC,YAAA,CAAiBnL,cAAjB,CAzD+C,CA2DnD,MAAOxB,aAtEmF,CAiF9FyI,SAAAnwC,UAAAsiC,uBAAA,CAA4CgS,QAAS,CAAC5oC,IAAD,CAAOkiC,iBAAP,CAA0B,CAE3E,IAAI/B,UAAY,IAAAyE,kBAAhB,CACItO,YAAc,IAAAqO,eAAA3X,WAAA,CAA+BhtB,IAA/B,CAAqC,QAAS,CAAC8sB,SAAD,CAAYoa,SAAZ,CAAuB,CAC/EnoC,SAAAA,CAAejC,IAAAiC,aAAA,CAAkB+tB,SAAlB,CAA6B9sB,IAA7B,CAEnB,IADIs2B,SACJ,CADkB4Q,SAAA5L,uBAAA,CAAiCv8B,SAAjC,CAClB,CACI,MAAOu3B,UAJwE,CAArE,CAOlB;MAAO6J,UAAAvJ,uBAAA,CAAiC52B,IAAjC,CAAuCs2B,WAAvC,CAAoD4L,iBAApD,CATiB2G,CAAAA,CASjB,CAVoE,CAoB/EpE,SAAAnwC,UAAAyzC,gCAAA,CAAqDe,QAAS,CAAC5d,OAAD,CAAU,CACpE,MAAOA,QAAAwB,KAAA,CAAa,QAAS,CAAC3tB,YAAD,CAAegqC,mBAAf,CAAoCC,QAApC,CAA8C,CACvE,GAAID,mBAAJ,EAA2BA,mBAAArL,gBAAA,EAA3B,CAEI,MAAO,CADYqL,mBAAA7K,gBAAAM,EACZ,CAIP,KAAIyK,QAAU,EACVF,oBAAJ,GACIE,OADJ,CACcF,mBAAAnL,cAAA,EADd,CAGAntC,KAAAM,QAAA,CAAai4C,QAAb,CAAuB,QAAS,CAACh4C,GAAD,CAAMk4C,UAAN,CAAkB,CAC9CD,OAAA,CAAUA,OAAA5wC,OAAA,CAAe6wC,UAAf,CADoC,CAAlD,CAGA,OAAOD,QAd4D,CAApE,CAD6D,CAuBxExE;QAAAnwC,UAAAq0C,YAAA,CAAiCQ,QAAS,CAACC,OAAD,CAAU,CAChD,IAAK,IAAIvpC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBupC,OAAAp3C,OAApB,CAAoC,EAAE6N,CAAtC,CAAyC,CACrC,IAAIwpC,aAAeD,OAAA,CAAQvpC,CAAR,CACnB,IAAI,CAACwpC,YAAAnpB,eAAA,EAAAub,aAAA,EAAL,CAAmD,CAE3C6N,YAAAA,CAAkB7E,QAAA4C,cAAA,CAAuBgC,YAAvB,CACtB,KAAIE,gBAAkB,IAAAzE,eAAA,CAAoBwE,YAApB,CACtB,QAAO,IAAAxE,eAAA,CAAoBwE,YAApB,CACP,QAAO,IAAAzE,eAAA,CAAoB,GAApB,CAA0B0E,eAA1B,CALwC,CAFd,CADO,CAkBpD9E,SAAA2D,mBAAA,CAA8BoB,QAAS,CAACvpB,KAAD,CAAQ,CAC3C,MAAIA,MAAAC,eAAA,EAAAub,aAAA,EAAJ,EACI,CAACxb,KAAAC,eAAA,EAAAupB,UAAA,EADL,CAKiCxpB,KAAA5B,OAAA,EALjC,CAQW4B,KATgC,CAoB/CwkB;QAAAnwC,UAAAizC,eAAA,CAAoCmC,QAAS,CAACzpB,KAAD,CAAQid,aAAR,CAAc,CACvD,IAAIl9B,KAAOigB,KAAAjgB,KAAX,CACIkmC,IAAM,IAAAmC,aAAA,CAAkBpoB,KAAlB,CACNgoB,cAAAA,CAAW,IAAAC,uBAAA,CAA4BhL,aAA5B,CACXvD,MAAAA,CAAS,IAAA+K,gBAAAyD,eAAA,CAAoC1D,QAAA2D,mBAAA,CAA4BnoB,KAA5B,CAApC,CAAwEimB,GAAxE,CAA6E+B,aAAAK,OAA7E,CAA8FL,aAAA7hC,WAA9F,CACT8kB,KAAAA,CAAU,IAAAyZ,eAAAzZ,QAAA,CAA4BlrB,IAA5B,CAGd,IAAIkmC,GAAJ,CACIz1C,IAAAC,OAAA,CAAY,CAACw6B,IAAAr3B,MAAA6pC,gBAAA,EAAb,CAA8C,mDAA9C,CADJ,KAuBI,KAlBIiM,GAkBKpyC,CAlBW2zB,IAAAwB,KAAA,CAAa,QAAS,CAAC3tB,YAAD,CAAegqC,mBAAf;AAAoCC,QAApC,CAA8C,CACpF,GAAI,CAACjqC,YAAAzN,QAAA,EAAL,EACIy3C,mBADJ,EAEIA,mBAAArL,gBAAA,EAFJ,CAGI,MAAO,CAACqL,mBAAA7K,gBAAA,EAAA/C,SAAA,EAAD,CAIP,KAAIyO,UAAY,EACZb,oBAAJ,GACIa,SADJ,CACgBA,SAAAvxC,OAAA,CAAiB0wC,mBAAAnL,cAAA,EAAAtmB,IAAA,CAAwC,QAAS,CAAC4lB,IAAD,CAAO,CAAE,MAAOA,KAAA/B,SAAA,EAAT,CAAxD,CAAjB,CADhB,CAGA1qC,KAAAM,QAAA,CAAai4C,QAAb,CAAuB,QAAS,CAACh4C,GAAD,CAAM64C,YAAN,CAAoB,CAChDD,SAAA,CAAYA,SAAAvxC,OAAA,CAAiBwxC,YAAjB,CADoC,CAApD,CAGA,OAAOD,UAfyE,CAApE,CAkBXryC,CAAAA,IAAAA,CAAI,CAAb,CAAgBA,IAAhB,CAAoBoyC,GAAA33C,OAApB,CAA0C,EAAEuF,IAA5C,CACQuyC,aACJ,CADkBH,GAAA,CAAcpyC,IAAd,CAClB,CAAA,IAAAmtC,gBAAA6D,cAAA,CAAmC9D,QAAA2D,mBAAA,CAA4B0B,aAA5B,CAAnC;AAA6E,IAAAzB,aAAA,CAAkByB,aAAlB,CAA7E,CAGR,OAAOnQ,MApCgD,CA4C3D8K,SAAAnwC,UAAA4zC,uBAAA,CAA4C6B,QAAS,CAAC7M,IAAD,CAAO,CACxD,IAAI7lB,MAAQ,IAAZ,CACI4I,MAAQid,IAAA/B,SAAA,EADZ,CAEI+K,IAAM,IAAAmC,aAAA,CAAkBpoB,KAAlB,CACV,OAAO,CACHqoB,OAAQA,QAAS,EAAG,CAEhB,MAAO/7B,CADK2wB,IAAA3M,eAAA,EACLhkB,EAD8Bhc,YAAAC,WAC9B+b,MAAA,EAFS,CADjB,CAKHnG,WAAYA,QAAS,CAAC4jC,MAAD,CAAS,CAC1B,GAAe,IAAf,GAAIA,MAAJ,CACI,MAAI9D,IAAJ,CACW7uB,KAAAuvB,0BAAA,CAAgC3mB,KAAAjgB,KAAhC,CAA4CkmC,GAA5C,CADX,CAIW7uB,KAAAyuB,oBAAA,CAA0B7lB,KAAAjgB,KAA1B,CA3zQ3B,KAAIiqC,OAAS,eACA,UAAb,GAg0Q+CD,MAh0Q/C,CACIC,MADJ,CAEQ,yFAFR;AAKiB,mBAAZ,EA2zQ0CD,MA3zQ1C,CACDC,MADC,CACQ,4DADR,CAGY,aAHZ,EA2zQ0CD,MA3zQ1C,GAIDC,MAJC,CAIQ,4BAJR,CAMD3xC,OAAAA,CAAYE,KAAJ,CAqzQmCwxC,MArzQnC,CAAiB,MAAjB,CAqzQ2C/pB,KArzQjBjgB,KAAA3K,SAAA,EAA1B,CAAkD,IAAlD,CAAyD40C,MAAzD,CACZ3xC,OAAA4xC,KAAA,CAozQ+CF,MApzQlCG,YAAA,EAqzQG,OAAO9yB,MAAAwkB,wBAAA,CAA8B5b,KAA9B,CACe,IADf,CApzQhB3nB,MAozQgB,CAbe,CAL3B,CAJiD,CAkC5DmsC,SAAA4C,cAAA,CAAyB+C,QAAS,CAACnqB,KAAD,CAAQ,CACtC,MAAOA,MAAAjgB,KAAA3K,SAAA,EAAP,CAA+B,GAA/B,CAAqC4qB,KAAAoH,gBAAA,EADC,CAS1Cod,SAAA6B,eAAA,CAA0B+D,QAAS,CAAClE,QAAD,CAAW,CAC1C,IAAImE,WAAanE,QAAA7kC,QAAA,CAAiB,GAAjB,CACjB7Q,KAAAC,OAAA,CAA4B,EAA5B;AAAY45C,UAAZ,EAAiCA,UAAjC,CAA8CnE,QAAAn0C,OAA9C,CAAgE,CAAhE,CAAmE,eAAnE,CACA,OAAO,CACHo4B,QAAS+b,QAAA/pC,OAAA,CAAgBkuC,UAAhB,CAA6B,CAA7B,CADN,CAEHtqC,KAAM,IAAIlD,IAAJ,CAASqpC,QAAA/pC,OAAA,CAAgB,CAAhB,CAAmBkuC,UAAnB,CAAT,CAFH,CAHmC,CAc9C7F,SAAAnwC,UAAA8xC,gBAAA,CAAqCmE,QAAS,CAACrE,GAAD,CAAM,CAChD,MAAO,KAAArB,eAAA,CAAoB,GAApB,CAA0BqB,GAA1B,CADyC,CASpDzB,SAAAnwC,UAAA+zC,aAAA,CAAkCmC,QAAS,CAACvqB,KAAD,CAAQ,CAC3CkmB,KAAAA,CAAW1B,QAAA4C,cAAA,CAAuBpnB,KAAvB,CACf,OAAOxvB,KAAA2lB,QAAA,CAAa,IAAA0uB,eAAb,CAAkCqB,KAAlC,CAFwC,CASnD1B,SAAA6C,iBAAA,CAA4BmD,QAAS,EAAG,CACpC,MAAOhG,SAAAiG,cAAA,EAD6B,CAWxCjG,SAAAnwC,UAAAmyC,sBAAA,CAA2CkE,QAAS,CAACpE,SAAD,CAAYvR,SAAZ,CAAuB,CACvE,IAAIkS;AAAY,IAAAvC,eAAA9vC,IAAA,CAAwB0xC,SAAxB,CAChB91C,KAAAC,OAAA,CAAYw2C,SAAZ,CAAuB,sDAAvB,CACIjS,UAAAA,CAAc,IAAA2P,kBAAAnE,YAAA,CAAmC8F,SAAnC,CAClB,OAAOW,UAAArS,eAAA,CAAyBG,SAAzB,CAAoCC,SAApC,CACU,IADV,CAJgE,CAwB3EwP,SAAAnwC,UAAA4wC,4BAAA,CAAiD0F,QAAS,CAAC5V,SAAD,CAAY,CAClE,MAAO,KAAA6V,sBAAA,CAA2B7V,SAA3B,CAAsC,IAAA2P,eAAtC,CACU,IADV,CACgB,IAAAC,kBAAAnE,YAAA,CAAmC3jC,IAAAquB,MAAnC,CADhB,CAD2D,CActEsZ,SAAAnwC,UAAAu2C,sBAAA,CAA2CC,QAAS,CAAC9V,SAAD,CAAY+V,aAAZ,CAA2BzU,WAA3B,CAAwCrB,WAAxC,CAAqD,CACrG,GAAID,SAAAh1B,KAAA1O,QAAA,EAAJ,CACI,MAAO,KAAA05C,iCAAA,CAAsChW,SAAtC;AAAiD+V,aAAjD,CAAgEzU,WAAhE,CAA6ErB,WAA7E,CAGP,KAAIiS,UAAY6D,aAAAl2C,IAAA,CAAkBiI,IAAAquB,MAAlB,CAEG,KAAnB,EAAImL,WAAJ,EAAwC,IAAxC,EAA2B4Q,SAA3B,GACI5Q,WADJ,CACkB4Q,SAAA5L,uBAAA,CAAiCx+B,IAAAquB,MAAjC,CADlB,CAGA,KAAIwO,OAAS,EAAb,CACI1uB,UAAY+pB,SAAAh1B,KAAAzC,SAAA,EADhB,CAEI0tC,eAAiBjW,SAAAjK,kBAAA,CAA4B9f,SAA5B,CAErB,KADIyK,aACJ,CADgBq1B,aAAA9f,SAAAp2B,IAAA,CAA2BoW,SAA3B,CAChB,GAAiBggC,cAAjB,CAAiC,CAC7B,IAAIC,iBAAmB5U,WAAA,CACjBA,WAAAvrB,kBAAA,CAA8BE,SAA9B,CADiB,CAEjB,IACFkgC,UAAAA,CAAmBlW,WAAArjC,MAAA,CAAkBqZ,SAAlB,CACvB0uB,OAAA,CAASA,MAAAthC,OAAA,CAAc,IAAAwyC,sBAAA,CAA2BI,cAA3B;AAA2Cv1B,aAA3C,CAAsDw1B,gBAAtD,CAAwEC,SAAxE,CAAd,CALoB,CAO7BjE,SAAJ,GACIvN,MADJ,CACaA,MAAAthC,OAAA,CAAc6uC,SAAArS,eAAA,CAAyBG,SAAzB,CAAoCC,WAApC,CAAiDqB,WAAjD,CAAd,CADb,CAGA,OAAOqD,OAxB0F,CAqCzG8K,SAAAnwC,UAAA02C,iCAAA,CAAsDI,QAAS,CAACpW,SAAD,CAAY+V,aAAZ,CAA2BzU,WAA3B,CAAwCrB,WAAxC,CAAqD,CAChH,IAAI5d,MAAQ,IAAZ,CACI6vB,UAAY6D,aAAAl2C,IAAA,CAAkBiI,IAAAquB,MAAlB,CAEG,KAAnB,EAAImL,WAAJ,EAAwC,IAAxC,EAA2B4Q,SAA3B,GACI5Q,WADJ,CACkB4Q,SAAA5L,uBAAA,CAAiCx+B,IAAAquB,MAAjC,CADlB,CAGA,KAAIwO,OAAS,EACboR,cAAA9f,SAAApb,iBAAA,CAAwC,QAAS,CAAC5E,SAAD,CAAYyK,SAAZ,CAAuB,CACpE,IAAIw1B;AAAmB5U,WAAA,CACjBA,WAAAvrB,kBAAA,CAA8BE,SAA9B,CADiB,CAEjB,IAFN,CAGIkgC,iBAAmBlW,WAAArjC,MAAA,CAAkBqZ,SAAlB,CAEvB,EADIggC,SACJ,CADqBjW,SAAAjK,kBAAA,CAA4B9f,SAA5B,CACrB,IACI0uB,MADJ,CACaA,MAAAthC,OAAA,CAAcgf,KAAA2zB,iCAAA,CAAuCC,SAAvC,CAAuDv1B,SAAvD,CAAkEw1B,gBAAlE,CAAoFC,gBAApF,CAAd,CADb,CANoE,CAAxE,CAUIjE,UAAJ,GACIvN,MADJ,CACaA,MAAAthC,OAAA,CAAc6uC,SAAArS,eAAA,CAAyBG,SAAzB,CAAoCC,WAApC,CAAiDqB,WAAjD,CAAd,CADb,CAGA,OAAOqD,OArByG,CA4BpH8K,SAAAiG,cAAA,CAAyB,CACzB,OAAOjG,SAxoB+B,CAAZ,EA/kG9B,CA+uHI4G,eAAgC,QAAS,EAAG,CAC5CA,QAASA,eAAc,EAAG,CACtB,IAAAC,UAAA,CAAiB/6C,YAAAC,WADK;AAG1B66C,cAAA/2C,UAAAg7B,QAAA,CAAmCic,QAAS,CAACvrC,IAAD,CAAO,CAC/C,MAAO,KAAAsrC,UAAApgC,SAAA,CAAwBlL,IAAxB,CADwC,CAGnDqrC,eAAA/2C,UAAAk3C,eAAA,CAA0CC,QAAS,CAACzrC,IAAD,CAAO0rC,eAAP,CAAwB,CACvE,IAAAJ,UAAA,CAAiB,IAAAA,UAAA5/B,YAAA,CAA2B1L,IAA3B,CAAiC0rC,eAAjC,CADsD,CAG3E,OAAOL,eAVqC,CAAZ,EA/uHpC,CA+wHIM,kBAAmC,QAAS,EAAG,CAI/CA,QAASA,kBAAiB,CAACC,IAAD,CAAO,CAC7B,IAAAA,KAAA,CAAYA,IADiB,CAOjCD,iBAAAr3C,UAAAu3C,SAAA,CAAuCC,QAAS,CAACC,YAAD,CAAe,CAC3D,MAAO,KAAAH,KAAA,SAAA,SAAA,CAAkCG,YAAlC,CAAAC,KAAA,CAAqD,IAArD,CAEP,QAAS,CAAC1zC,KAAD,CAAQ,CAGb,MAAIA,MAAJ,EAA4B,4BAA5B;AAAaA,KAAA4xC,KAAb,EACIjyC,GAAA,CAAI,gEAAJ,CACO,CAAA,IAFX,EAKWg0C,OAAAxmB,OAAA,CAAentB,KAAf,CARE,CAFV,CADoD,CAe/DqzC,kBAAAr3C,UAAA43C,uBAAA,CAAqDC,QAAS,CAAClE,QAAD,CAAW,CAGrE,IAAA2D,KAAA,SAAA,qBAAA,CAA8C3D,QAA9C,CAHqE,CAKzE0D,kBAAAr3C,UAAA83C,0BAAA,CAAwDC,QAAS,CAACpE,QAAD,CAAW,CACxE,IAAA2D,KAAA,SAAA,wBAAA,CAAiD3D,QAAjD,CADwE,CAG5E0D,kBAAAr3C,UAAAg4C,sBAAA,CAAoDC,QAAS,EAAG,CAC5D,IAAIC,aAAe,yDAAfA,CACA,IAAAZ,KAAA17C,KADAs8C;AAGA,gFAEAA,aAAA,CADA,YAAJ,EAAoB,KAAAZ,KAAAa,QAApB,CACID,YADJ,CAEQ,sJAFR,CAMS,gBAAJ,EAAwB,KAAAZ,KAAAa,QAAxB,CACDD,YADC,CAEG,0JAFH,CAODA,YAPC;AAQG,iKAIR/zC,KAAA,CAAK+zC,YAAL,CAvB4D,CAyBhE,OAAOb,kBA3DwC,CAAZ,EA/wHvC,CAk2HIe,gBAAiC,QAAS,EAAG,CAC7CA,QAASA,gBAAe,EAAG,CACvB,IAAAC,UAAA,CAAiB,EADM,CAG3BD,eAAAp4C,UAAAs4C,iBAAA,CAA6CC,QAAS,CAAC38C,IAAD,CAAO48C,MAAP,CAAe,CAClD,IAAK,EAApB,GAAIA,MAAJ,GAAyBA,MAAzB,CAAkC,CAAlC,CACKr8C,KAAAS,SAAA,CAAc,IAAAy7C,UAAd,CAA8Bz8C,IAA9B,CAAL,GACI,IAAAy8C,UAAA,CAAez8C,IAAf,CADJ,CAC2B,CAD3B,CAEA,KAAAy8C,UAAA,CAAez8C,IAAf,CAAA,EAAwB48C,MAJyC,CAMrEJ,gBAAAp4C,UAAAO,IAAA,CAAgCk4C,QAAS,EAAG,CACxC,MAAOt8C,KAAAu8C,SAAA,CAAc,IAAAL,UAAd,CADiC,CAG5C;MAAOD,gBAbsC,CAAZ,EAl2HrC,CAk4HIO,aAA8B,QAAS,EAAG,CAC1CA,QAASA,aAAY,EAAG,EAExBA,YAAAC,cAAA,CAA6BC,QAAS,CAACjpC,QAAD,CAAW,CACzCkpC,QAAAA,CAAalpC,QAAA7O,SAAA,EACZ,KAAAg4C,aAAA,CAAkBD,QAAlB,CAAL,GACI,IAAAC,aAAA,CAAkBD,QAAlB,CADJ,CACoC,IAAIV,eADxC,CAGA,OAAO,KAAAW,aAAA,CAAkBD,QAAlB,CALsC,CAOjDH,aAAAK,oBAAA,CAAmCC,QAAS,CAACrpC,QAAD,CAAWspC,eAAX,CAA4B,CAChEJ,QAAAA,CAAalpC,QAAA7O,SAAA,EACZ,KAAAo4C,WAAA,CAAgBL,QAAhB,CAAL,GACI,IAAAK,WAAA,CAAgBL,QAAhB,CADJ,CACkCI,eAAA,EADlC,CAGA,OAAO,KAAAC,WAAA,CAAgBL,QAAhB,CAL6D,CAOxEH,aAAAI,aAAA,CAA4B,EAC5BJ,aAAAQ,WAAA;AAA0B,EAC1B,OAAOR,aAnBmC,CAAZ,EAl4HlC,CA86HIS,cAA+B,QAAS,EAAG,CAC3CA,QAASA,cAAa,CAACC,WAAD,CAAc,CAChC,IAAAA,YAAA,CAAmBA,WACnB,KAAAC,MAAA,CAAa,IAFmB,CAIpCF,aAAAp5C,UAAAO,IAAA,CAA8Bg5C,QAAS,EAAG,CACtC,IAAIC,SAAW,IAAAH,YAAA94C,IAAA,EAAf,CACIk5C,MAAQt9C,IAAAwmB,MAAA,CAAW62B,QAAX,CACR,KAAAF,MAAJ,EACIn9C,IAAAM,QAAA,CAAa,IAAA68C,MAAb,CAAyB,QAAS,CAACI,IAAD,CAAOn6C,KAAP,CAAc,CAC5Ck6C,KAAA,CAAMC,IAAN,CAAA,EAA4Bn6C,KADgB,CAAhD,CAIJ,KAAA+5C,MAAA,CAAaE,QACb,OAAOC,MAT+B,CAW1C,OAAOL,cAhBoC,CAAZ,EA96HnC,CA29HIO,cAA+B,QAAS,EAAG,CAK3CA,QAASA,cAAa,CAACC,UAAD,CAAaC,OAAb,CAAsB,CACxC,IAAAA,QAAA,CAAeA,OACf,KAAAC,eAAA,CAAsB,EACtB,KAAAC,eAAA;AAAsB,IAAIX,aAAJ,CAAkBQ,UAAlB,CAClBrxC,WAAAA,CAhBeyxC,GAgBfzxC,CACC,GADDA,CACgD1B,IAAA+M,OAAA,EACpDvL,sBAAA,CAAsB,IAAA4xC,aAAAr2C,KAAA,CAAuB,IAAvB,CAAtB,CAAoDiD,IAAAK,MAAA,CAAWqB,UAAX,CAApD,CANwC,CAQ5CoxC,aAAA35C,UAAAk6C,YAAA,CAAsCC,QAAS,CAACT,IAAD,CAAO,CAClD,IAAAI,eAAA,CAAoBJ,IAApB,CAAA,CAA4B,CAAA,CADsB,CAGtDC,cAAA35C,UAAAi6C,aAAA,CAAuCG,QAAS,EAAG,CAC/C,IAAIr3B,MAAQ,IAAZ,CACIs3B,MAAQ,IAAAN,eAAAx5C,IAAA,EADZ,CAEI+5C,cAAgB,EAFpB,CAGIC,kBAAoB,CAAA,CACxBp+C,KAAAM,QAAA,CAAa49C,KAAb,CAAoB,QAAS,CAACX,IAAD,CAAOn6C,KAAP,CAAc,CAC3B,CAAZ,CAAIA,KAAJ,EAAiBpD,IAAAS,SAAA,CAAcmmB,KAAA+2B,eAAd,CAAoCJ,IAApC,CAAjB,GACIY,aAAA,CAAcZ,IAAd,CACA,CADsBn6C,KACtB,CAAAg7C,iBAAA,CAAoB,CAAA,CAFxB,CADuC,CAA3C,CAMIA,kBAAJ;AACI,IAAAV,QAAAW,YAAA,CAAyBF,aAAzB,CAGJjyC,sBAAA,CAAsB,IAAA4xC,aAAAr2C,KAAA,CAAuB,IAAvB,CAAtB,CAAoDiD,IAAAK,MAAA,CAnChCuzC,GAmCgC,CAAW5zC,IAAA+M,OAAA,EAAX,CAApD,CAf+C,CAiBnD,OAAO+lC,cAjCoC,CAAZ,EA39HnC,CA6hIIe,WAA4B,QAAS,EAAG,CACxCA,QAASA,WAAU,EAAG,CAKlB,IAAAC,YAAA,CAAmB,EAMnB,KAAAC,gBAAA,CAAuB,CAXL,CAgBtBF,UAAA16C,UAAA66C,YAAA,CAAmCC,QAAS,CAACC,aAAD,CAAgB,CAGxD,IADA,IAAIC,SAAW,IAAf,CACS/3C,EAAI,CAAb,CAAgBA,CAAhB,CAAoB83C,aAAAr9C,OAApB,CAA0CuF,CAAA,EAA1C,CAA+C,CAC3C,IAAI+oB,UAAY+uB,aAAA,CAAc93C,CAAd,CAAhB,CACIg4C,UAAYjvB,SAAA5B,QAAA,EACC,KAAjB,GAAI4wB,QAAJ,EAA0BC,SAAA7vC,OAAA,CAAiB4vC,QAAA5wB,QAAA,EAAjB,CAA1B,GACI,IAAAuwB,YAAAn9C,KAAA,CAAsBw9C,QAAtB,CACA,CAAAA,QAAA;AAAW,IAFf,CAIiB,KAAjB,GAAIA,QAAJ,GACIA,QADJ,CACe,IAAIE,SAAJ,CAAcD,SAAd,CADf,CAGAD,SAAAxnB,IAAA,CAAaxH,SAAb,CAV2C,CAY3CgvB,QAAJ,EACI,IAAAL,YAAAn9C,KAAA,CAAsBw9C,QAAtB,CAhBoD,CA4B5DN,WAAA16C,UAAAm7C,kBAAA,CAAyCC,QAAS,CAAC1vC,IAAD,CAAOqvC,aAAP,CAAsB,CACpE,IAAAF,YAAA,CAAiBE,aAAjB,CACA,KAAAM,oCAAA,CAAyC,QAAS,CAACJ,SAAD,CAAY,CAC1D,MAAOA,UAAA7vC,OAAA,CAAiBM,IAAjB,CADmD,CAA9D,CAFoE,CAexEgvC,WAAA16C,UAAAs7C,0BAAA,CAAiDC,QAAS,CAACC,WAAD,CAAcT,aAAd,CAA6B,CACnF,IAAAF,YAAA,CAAiBE,aAAjB,CACA,KAAAM,oCAAA,CAAyC,QAAS,CAACJ,SAAD,CAAY,CAC1D,MAAOA,UAAAr+C,SAAA,CAAmB4+C,WAAnB,CAAP;AAA0CA,WAAA5+C,SAAA,CAAqBq+C,SAArB,CADgB,CAA9D,CAFmF,CAUvFP,WAAA16C,UAAAq7C,oCAAA,CAA2DI,QAAS,CAACnkB,SAAD,CAAY,CAC5E,IAAAsjB,gBAAA,EAEA,KADA,IAAIc,QAAU,CAAA,CAAd,CACSz4C,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAA03C,YAAAj9C,OAApB,CAA6CuF,CAAA,EAA7C,CAAkD,CAC9C,IAAI04C,UAAY,IAAAhB,YAAA,CAAiB13C,CAAjB,CACZ04C,UAAJ,GACQV,SACJ,CADgBU,SAAAvxB,QAAA,EAChB,CAAIkN,SAAA,CAAU2jB,SAAV,CAAJ,EACI,IAAAN,YAAA,CAAiB13C,CAAjB,CAAA24C,MAAA,EACA,CAAA,IAAAjB,YAAA,CAAiB13C,CAAjB,CAAA,CAAsB,IAF1B,EAKIy4C,OALJ,CAKc,CAAA,CAPlB,CAF8C,CAa9CA,OAAJ,GACI,IAAAf,YADJ,CACuB,EADvB,CAGA,KAAAC,gBAAA,EAnB4E,CAqBhF,OAAOF,WA3FiC,CAAZ,EA7hIhC,CA8nIIQ,UAA2B,QAAS,EAAG,CACvCA,QAASA,UAAS,CAACzqC,KAAD,CAAQ,CACtB,IAAAA,MAAA,CAAaA,KAKb,KAAAorC,QAAA;AAAe,EANO,CAW1BX,SAAAl7C,UAAAwzB,IAAA,CAA0BsoB,QAAS,CAAC9vB,SAAD,CAAY,CAC3C,IAAA6vB,QAAAr+C,KAAA,CAAkBwuB,SAAlB,CAD2C,CAM/CkvB,UAAAl7C,UAAA47C,MAAA,CAA4BG,QAAS,EAAG,CACpC,IAAK,IAAI94C,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAA44C,QAAAn+C,OAApB,CAAyCuF,CAAA,EAAzC,CAA8C,CAC1C,IAAI+oB,UAAY,IAAA6vB,QAAA,CAAa54C,CAAb,CAChB,IAAkB,IAAlB,GAAI+oB,SAAJ,CAAwB,CACpB,IAAA6vB,QAAA,CAAa54C,CAAb,CAAA,CAAkB,IAClB,KAAI+4C,QAAUhwB,SAAAtB,eAAA,EACVtnB,OAAJ,EACIO,GAAA,CAAI,SAAJ,CAAgBqoB,SAAAjrB,SAAA,EAAhB,CAEJoH,eAAA,CAAe6zC,OAAf,CANoB,CAFkB,CADV,CAgBxCd,UAAAl7C,UAAAoqB,QAAA,CAA8B6xB,QAAS,EAAG,CACtC,MAAO,KAAAxrC,MAD+B,CAG1C,OAAOyqC,UArCgC,CAAZ,EA9nI/B,CA0rIIgB,aAA8B,QAAS,EAAG,CAI1CA,QAASA,aAAY,CAACC,cAAD,CAAiB,CAClC,IAAAA,eAAA,CAAsBA,cACtB;IAAAC,WAAA,CAAkB,EAClBjgD,KAAAC,OAAA,CAAYE,KAAA4G,QAAA,CAAci5C,cAAd,CAAZ,EAAqE,CAArE,CAA6CA,cAAAz+C,OAA7C,CAAwE,4BAAxE,CAHkC,CAUtCw+C,YAAAl8C,UAAAq8C,QAAA,CAAiCC,QAAS,CAAClrC,SAAD,CAAY,CAElD,IADA,IAAIvO,SAAW,EAAf,CACSC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAArF,OAAtB,CAAwCoF,EAAA,EAAxC,CACID,QAAA,CAASC,EAAT,CAAc,CAAd,CAAA,CAAmBC,SAAA,CAAUD,EAAV,CAEvB,IAAIxG,KAAA4G,QAAA,CAAc,IAAAk5C,WAAA,CAAgBhrC,SAAhB,CAAd,CAAJ,CAA+C,CAEvCmrC,EAAAA,CAAY,IAAAH,WAAA,CAAgBhrC,SAAhB,CAAArH,MAAA,EAChB,KAAK,IAAI9G,EAAI,CAAb,CAAgBA,CAAhB,CAAoBs5C,EAAA7+C,OAApB,CAAsCuF,CAAA,EAAtC,CACIs5C,EAAA,CAAUt5C,CAAV,CAAAwsB,SAAAtsB,MAAA,CAA4Bo5C,EAAA,CAAUt5C,CAAV,CAAA0sB,QAA5B,CAAkD9sB,QAAlD,CAJuC,CALG,CAatDq5C,aAAAl8C,UAAAuvB,GAAA,CAA4BitB,QAAS,CAACprC,SAAD,CAAYqe,QAAZ,CAAsBE,OAAtB,CAA+B,CAChE,IAAA8sB,mBAAA,CAAwBrrC,SAAxB,CACA;IAAAgrC,WAAA,CAAgBhrC,SAAhB,CAAA,CAA6B,IAAAgrC,WAAA,CAAgBhrC,SAAhB,CAA7B,EAA2D,EAC3D,KAAAgrC,WAAA,CAAgBhrC,SAAhB,CAAA5T,KAAA,CAAgC,CAAEiyB,SAAUA,QAAZ,CAAsBE,QAASA,OAA/B,CAAhC,CAEA,EADI3D,SACJ,CADgB,IAAA0wB,gBAAA,CAAqBtrC,SAArB,CAChB,GACIqe,QAAAtsB,MAAA,CAAewsB,OAAf,CAAwB3D,SAAxB,CAN4D,CASpEkwB,aAAAl8C,UAAAswB,IAAA,CAA6BqsB,QAAS,CAACvrC,SAAD,CAAYqe,QAAZ,CAAsBE,OAAtB,CAA+B,CACjE,IAAA8sB,mBAAA,CAAwBrrC,SAAxB,CACImrC,UAAAA,CAAY,IAAAH,WAAA,CAAgBhrC,SAAhB,CAAZmrC,EAA0C,EAC9C,KAAK,IAAIt5C,EAAI,CAAb,CAAgBA,CAAhB,CAAoBs5C,SAAA7+C,OAApB,CAAsCuF,CAAA,EAAtC,CACI,GAAIs5C,SAAA,CAAUt5C,CAAV,CAAAwsB,SAAJ,GAA8BA,QAA9B,GACK,CAACE,OADN,EACiBA,OADjB,GAC6B4sB,SAAA,CAAUt5C,CAAV,CAAA0sB,QAD7B,EACoD,CAChD4sB,SAAArP,OAAA,CAAiBjqC,CAAjB,CAAoB,CAApB,CACA,MAFgD,CALS,CAWrEi5C,aAAAl8C,UAAAy8C,mBAAA;AAA4CG,QAAS,CAACxrC,SAAD,CAAY,CAC7DjV,IAAAC,OAAA,CAAY,IAAA+/C,eAAA9nB,KAAA,CAAyB,QAAS,CAACwoB,EAAD,CAAK,CAC/C,MAAOA,GAAP,GAAczrC,SADiC,CAAvC,CAAZ,CAEI,iBAFJ,CAEwBA,SAFxB,CAD6D,CAKjE,OAAO8qC,aApDmC,CAAZ,EA1rIlC,CAowIIY,kBAAmC,QAAS,CAAChoC,MAAD,CAAS,CAErDgoC,QAASA,kBAAiB,EAAG,CACzB,IAAI/5B,MAAQjO,MAAA8R,KAAA,CAAY,IAAZ,CAAkB,CAAC,SAAD,CAAlB,CAAR7D,EAA0C,IAG9C,IAAwB,WAAxB,GAAI,MAAOpe,SAAX,EACyC,WADzC,GACI,MAAOA,SAAAM,iBADX,CAEI,GAAkC,WAAlC,GAAI,MAAON,SAAA,OAAX,CAA+C,CAE3C,IAAAo4C,iBAAmB,kBACnB,KAAAC,OAAS,QAHkC,CAA/C,IAK0C,WAArC,GAAI,MAAOr4C,SAAA,UAAX,EACDo4C,gBACA;AADmB,qBACnB,CAAAC,MAAA,CAAS,WAFR,EAIoC,WAApC,GAAI,MAAOr4C,SAAA,SAAX,EACDo4C,gBACA,CADmB,oBACnB,CAAAC,MAAA,CAAS,UAFR,EAIwC,WAJxC,GAII,MAAOr4C,SAAA,aAJX,GAKDo4C,gBACA,CADmB,wBACnB,CAAAC,MAAA,CAAS,cANR,CAaTj6B,MAAAk6B,SAAA,CAAiB,CAAA,CACbF,iBAAJ,EACIp4C,QAAAM,iBAAA,CAA0B83C,gBAA1B,CAA4C,QAAS,EAAG,CACpD,IAAItQ,QAAU,CAAC9nC,QAAA,CAASq4C,MAAT,CACXvQ,QAAJ,GAAgB1pB,KAAAk6B,SAAhB,GACIl6B,KAAAk6B,SACA,CADiBxQ,OACjB,CAAA1pB,KAAAs5B,QAAA,CAAc,SAAd,CAAyB5P,OAAzB,CAFJ,CAFoD,CAAxD,CAMG,CAAA,CANH,CAQJ,OAAO1pB,MAtCkB,CAD7BpjB,OAAAoV,UAAA,CAAkB+nC,iBAAlB;AAAqChoC,MAArC,CAyCAgoC,kBAAAl+C,YAAA,CAAgCs+C,QAAS,EAAG,CACxC,MAAO,KAAIJ,iBAD6B,CAO5CA,kBAAA98C,UAAA08C,gBAAA,CAA8CS,QAAS,CAAC/rC,SAAD,CAAY,CAC/DjV,IAAAC,OAAA,CAA0B,SAA1B,GAAYgV,SAAZ,CAAqC,sBAArC,CAA8DA,SAA9D,CACA,OAAO,CAAC,IAAA6rC,SAAD,CAFwD,CAInE,OAAOH,kBArD8C,CAAlB,CAsDrCZ,YAtDqC,CApwIvC,CAq1IIkB,cAA+B,QAAS,CAACtoC,MAAD,CAAS,CAEjDsoC,QAASA,cAAa,EAAG,CACrB,IAAIr6B,MAAQjO,MAAA8R,KAAA,CAAY,IAAZ,CAAkB,CAAC,QAAD,CAAlB,CAAR7D,EAAyC,IAC7CA,MAAAs6B,QAAA,CAAgB,CAAA,CAKM,YAAtB,GAAI,MAAO57C,OAAX,EACuC,WADvC,GACI,MAAOA,OAAAwD,iBADX,EAEK9I,IAAAmhD,gBAAA,EAFL,GAGI77C,MAAAwD,iBAAA,CAAwB,QAAxB;AAAkC,QAAS,EAAG,CACrC8d,KAAAs6B,QAAL,GACIt6B,KAAAs6B,QACA,CADgB,CAAA,CAChB,CAAAt6B,KAAAs5B,QAAA,CAAc,QAAd,CAAwB,CAAA,CAAxB,CAFJ,CAD0C,CAA9C,CAKG,CAAA,CALH,CAMA,CAAA56C,MAAAwD,iBAAA,CAAwB,SAAxB,CAAmC,QAAS,EAAG,CACvC8d,KAAAs6B,QAAJ,GACIt6B,KAAAs6B,QACA,CADgB,CAAA,CAChB,CAAAt6B,KAAAs5B,QAAA,CAAc,QAAd,CAAwB,CAAA,CAAxB,CAFJ,CAD2C,CAA/C,CAKG,CAAA,CALH,CATJ,CAgBA,OAAOt5B,MAvBc,CADzBpjB,OAAAoV,UAAA,CAAkBqoC,aAAlB,CAAiCtoC,MAAjC,CA0BAsoC,cAAAx+C,YAAA,CAA4B2+C,QAAS,EAAG,CACpC,MAAO,KAAIH,aADyB,CAOxCA,cAAAp9C,UAAA08C,gBAAA,CAA0Cc,QAAS,CAACpsC,SAAD,CAAY,CAC3DjV,IAAAC,OAAA,CAA0B,QAA1B,GAAYgV,SAAZ,CAAoC,sBAApC,CAA6DA,SAA7D,CACA,OAAO,CAAC,IAAAisC,QAAD,CAFoD,CAO/DD,cAAAp9C,UAAAy9C,gBAAA,CAA0CC,QAAS,EAAG,CAClD,MAAO,KAAAL,QAD2C,CAGtD;MAAOD,cA5C0C,CAAlB,CA6CjClB,YA7CiC,CAr1InC,CAy5IIyB,eAAgC,QAAS,EAAG,CAI5CA,QAASA,eAAc,CAACC,UAAD,CAAa,CAChC,IAAAA,WAAA,CAAkBA,UAClB,KAAAC,iBAAA,CAAwB,EACxB,KAAAC,mBAAA,CAA0B,CAC1B,KAAAC,mBAAA,CAA2B,EAC3B,KAAAC,QAAA,CAAe,IALiB,CAOpCL,cAAA39C,UAAAi+C,WAAA,CAAsCC,QAAS,CAACC,WAAD,CAAc1uB,QAAd,CAAwB,CACnE,IAAAsuB,mBAAA,CAA0BI,WAC1B,KAAAH,QAAA,CAAevuB,QACX,KAAAsuB,mBAAJ,CAA8B,IAAAD,mBAA9B,GACI,IAAAE,QAAA,EACA,CAAA,IAAAA,QAAA,CAAe,IAFnB,CAHmE,CAevEL,eAAA39C,UAAAo+C,eAAA,CAA0CC,QAAS,CAACC,UAAD,CAAaj6C,IAAb,CAAmB,CAClE,IAAI0e;AAAQ,IACZ,KAAA86B,iBAAA,CAAsBS,UAAtB,CAAA,CAAoCj6C,IAChCk6C,WAAAA,CAAUA,QAAS,EAAG,CACtB,IAAIC,UAAYC,MAAAZ,iBAAA,CAAwBY,MAAAX,mBAAxB,CAChB,QAAOW,MAAAZ,iBAAA,CAAwBY,MAAAX,mBAAxB,CAQP,KAPA,IAAIY,QAAUA,QAAS,CAACz7C,CAAD,CAAI,CACnBu7C,SAAA,CAAUv7C,CAAV,CAAJ,EACIkF,cAAA,CAAe,QAAS,EAAG,CACvB4a,KAAA66B,WAAA,CAAiBY,SAAA,CAAUv7C,CAAV,CAAjB,CADuB,CAA3B,CAFmB,CAA3B,CAOSA,WAAI,CAAb,CAAgBA,UAAhB,CAAoBu7C,SAAA9gD,OAApB,CAAsC,EAAEuF,UAAxC,CACIy7C,OAAA,CAAQz7C,UAAR,CAEJ,IAAIw7C,MAAAX,mBAAJ,GAAkCW,MAAAV,mBAAlC,CAKI,MAJIU,OAAAT,QAIG,GAHHS,MAAAT,QAAA,EACA,CAAAS,MAAAT,QAAA,CAAiB,IAEd,EAAA,OAEXS,OAAAX,mBAAA,EApBsB,CAuB1B;IADA,IAAIW,OAAS,IACb,CAAO,IAAAZ,iBAAA,CAAsB,IAAAC,mBAAtB,CAAP,EAEoB,OAFpB,GACkBS,UAAAI,EADlB,CAAA,EA1BkE,CAgCtE,OAAOhB,eA1DqC,CAAZ,EAz5IpC,CA8gJIiB,sBAAuC,QAAS,EAAG,CASnDA,QAASA,sBAAqB,CAACC,MAAD,CAASjvC,QAAT,CAAmBkvC,kBAAnB,CAAuCC,aAAvC,CAAsD,CAChF,IAAAF,OAAA,CAAcA,MACd,KAAAjvC,SAAA,CAAgBA,QAChB,KAAAkvC,mBAAA,CAA0BA,kBAC1B,KAAAC,cAAA,CAAqBA,aAErB,KAAAC,cAAA,CADA,IAAAC,UACA,CADiB,CAEjB,KAAAC,eAAA,CAAsB,CAAA,CACtB,KAAAC,KAAA,CAAYt7C,UAAA,CAAWg7C,MAAX,CACZ,KAAAO,OAAA,CAAczG,YAAAC,cAAA,CAA2BhpC,QAA3B,CACd,KAAAyvC,MAAA,CAAaC,QAAS,CAACtxC,MAAD,CAAS,CAC3B,MAAO4B,SAAA/B,cAAA,CAx3RAM,cAw3RA;AAAqCH,MAArC,CADoB,CAViD,CAmBpF4wC,qBAAA5+C,UAAAu/C,KAAA,CAAuCC,QAAS,CAACC,SAAD,CAAYC,YAAZ,CAA0B,CACtE,IAAI38B,MAAQ,IACZ,KAAA48B,cAAA,CAAqB,CACrB,KAAAC,cAAA,CAAqBF,YACrB,KAAAG,gBAAA,CAAuB,IAAIlC,cAAJ,CAAmB8B,SAAnB,CACvB,KAAAK,UAAA,CAAiB,CAAA,CACjB,KAAAC,qBAAA,CAA4B/6C,UAAA,CAAW,QAAS,EAAG,CAC/C+d,KAAAo8B,KAAA,CAAW,8BAAX,CAEAp8B,MAAAi9B,UAAA,EACAj9B,MAAAg9B,qBAAA,CAA6B,IAJkB,CAAvB,CAKzB,GALyB,CAO5Bt7C,oBAAA,CAAoB,QAAS,EAAG,CAC5B,GAAIq7C,CAAA/8B,KAAA+8B,UAAJ,CAAA,CAGA/8B,KAAAk9B,gBAAA,CAAwB,IAAIC,0BAAJ,CAA+B,QAAS,EAAG,CAE/D,IADA,IAAIC,KAAO,EAAX,CACSr9C,GAAK,CAAd,CAAiBA,EAAjB;AAAsBC,SAAArF,OAAtB,CAAwCoF,EAAA,EAAxC,CACIq9C,IAAA,CAAKr9C,EAAL,CAAA,CAAWC,SAAA,CAAUD,EAAV,CAEXs9C,GAAAA,CAAUD,IAAA,CAAK,CAAL,CALiD,KAKxCE,KAAOF,IAAA,CAAK,CAAL,CALiC,CAKxBG,KAAOH,IAAA,CAAK,CAAL,CAC9Cp9B,MAAAw9B,wBAAA,CAA8BJ,IAA9B,CACA,IAAKp9B,KAAAk9B,gBAAL,CAOA,GALIl9B,KAAAg9B,qBAKA,GAJAS,YAAA,CAAaz9B,KAAAg9B,qBAAb,CACA,CAAAh9B,KAAAg9B,qBAAA,CAA6B,IAG7B,EADJh9B,KAAAm8B,eACI,CADmB,CAAA,CACnB,CAlGgBuB,OAkGhB,EAAAL,EAAJ,CACIr9B,KAAA9gB,GACA,CADWo+C,IACX,CAAAt9B,KAAA29B,SAAA,CAAiBJ,IAFrB,KAIK,IArGiBK,OAqGjB,GAAIP,EAAJ,CAED,GAAIC,IAAJ,CAGIt9B,KAAAk9B,gBAAAW,aAGA,CAHqC,CAAA,CAGrC,CAAA79B,KAAA88B,gBAAA5B,WAAA,CAAiCoC,IAAjC,CAAuC,QAAS,EAAG,CAC/Ct9B,KAAAi9B,UAAA,EAD+C,CAAnD,CANJ,KAWIj9B,MAAAi9B,UAAA,EAbH,KAiBD,MAAU97C,MAAJ,CAAU,iCAAV;AAA8Ck8C,EAA9C,CAAN,CAnC2D,CAA3C,CAqCrB,QAAS,EAAG,CAEX,IADA,IAAID,KAAO,EAAX,CACSr9C,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAArF,OAAtB,CAAwCoF,EAAA,EAAxC,CACIq9C,IAAA,CAAKr9C,EAAL,CAAA,CAAWC,SAAA,CAAUD,EAAV,CAEX+9C,GAAAA,CAAKV,IAAA,CAAK,CAAL,CAAT,KAAkB97C,KAAO87C,IAAA,CAAK,CAAL,CACzBp9B,MAAAw9B,wBAAA,CAA8BJ,IAA9B,CACAp9B,MAAA88B,gBAAAzB,eAAA,CAAqCyC,EAArC,CAAyCx8C,IAAzC,CAPW,CArCS,CA6CrB,QAAS,EAAG,CACX0e,KAAAi9B,UAAA,EADW,CA7CS,CA+CrBj9B,KAAAs8B,MA/CqB,CAkDxB,KAAIyB,UAAY,CAtIQL,MAuImB,GAD3B,CAEhBK,UAAA,IAAA,CAA4Cj6C,IAAAK,MAAA,CAA2B,GAA3B,CAAWL,IAAA+M,OAAA,EAAX,CACxCmP,MAAAk9B,gBAAAc,yBAAJ,GACID,SAAA,GADJ,CACqD/9B,KAAAk9B,gBAAAc,yBADrD,CAEAD,UAAA,EAAA,CAh9RWE,GAi9RPj+B,MAAA+7B,mBAAJ,GACIgC,SAAA,EADJ,CACyC/9B,KAAA+7B,mBADzC,CAGI/7B;KAAAg8B,cAAJ,GACI+B,SAAA,GADJ,CACoC/9B,KAAAg8B,cADpC,CAGI,EAAC5iD,IAAAiD,UAAA,EAAL,EACwB,WADxB,GACI,MAAOsQ,SADX,EAEIA,QAAAuxC,KAFJ,EAG6C,EAH7C,GAGIvxC,QAAAuxC,KAAAj0C,QAAA,CAr9RGk0C,gBAq9RH,CAHJ,GAIIJ,SAAA,EAJJ,CAn9RIK,GAm9RJ,CAMIC,UAAAA,CAAar+B,KAAAs8B,MAAA,CAAYyB,SAAZ,CACjB/9B,MAAAo8B,KAAA,CAAW,8BAAX,CAA4CiC,SAA5C,CACAr+B,MAAAk9B,gBAAAoB,OAAA,CAA6BD,SAA7B,CAAyC,QAAS,EAAG,EAArD,CAzEA,CAD4B,CAAhC,CAbsE,CA+F1ExC,sBAAA5+C,UAAAshD,MAAA,CAAwCC,QAAS,EAAG,CAChD,IAAAtB,gBAAAuB,cAAA,CAAmC,IAAAv/C,GAAnC,CAA4C,IAAAy+C,SAA5C,CACA,KAAAe,uBAAA,CAA4B,IAAAx/C,GAA5B,CAAqC,IAAAy+C,SAArC,CAFgD,CAOpD9B,sBAAA8C,WAAA;AAAmCC,QAAS,EAAG,CAC3C/C,qBAAAgD,YAAA,CAAoC,CAAA,CADO,CAM/ChD,sBAAAiD,cAAA,CAAsCC,QAAS,EAAG,CAC9ClD,qBAAAmD,eAAA,CAAuC,CAAA,CADO,CAIlDnD,sBAAAoD,YAAA,CAAoCC,QAAS,EAAG,CAG5C,MAAQrD,sBAAAgD,YAAR,EACK,CAAChD,qBAAAmD,eADN,EAE4B,WAF5B,GAEQ,MAAOp9C,SAFf,EAGkC,IAHlC,EAGQA,QAAAu9C,cAHR,EAIQ,EAx8SgB,QAw8ShB,GAx8SF,MAAOzgD,OAw8SL,EAv8SRA,MAAA,OAu8SQ,EAt8SRA,MAAA,OAAA,UAs8SQ,EAr8SP,CAAA,SAAAwG,KAAA,CAAexG,MAAAiO,SAAAuxC,KAAf,CAq8SO,CAJR,EAKQ,EA97Sc,QA87Sd,GA97SL,MAAOkB,QA87SF,EA97SgD,QA87ShD,GA97S0B,MAAOA,QAAAC,GA87SjC,CALR,EAMQ,CAACjmD,IAAAiD,UAAA,EATmC,CAchDw/C;qBAAA5+C,UAAAqiD,sBAAA,CAAwDC,QAAS,EAAG,EAKpE1D,sBAAA5+C,UAAAuiD,UAAA,CAA4CC,QAAS,EAAG,CACpD,IAAA1C,UAAA,CAAiB,CAAA,CACb,KAAAG,gBAAJ,GACI,IAAAA,gBAAAwC,MAAA,EACA,CAAA,IAAAxC,gBAAA,CAAuB,IAF3B,CAKI,KAAAyC,eAAJ,GACI/9C,QAAAI,KAAA49C,YAAA,CAA0B,IAAAD,eAA1B,CACA,CAAA,IAAAA,eAAA,CAAsB,IAF1B,CAII,KAAA3C,qBAAJ,GACIS,YAAA,CAAa,IAAAT,qBAAb,CACA,CAAA,IAAAA,qBAAA,CAA4B,IAFhC,CAXoD,CAoBxDnB,sBAAA5+C,UAAAggD,UAAA,CAA4C4C,QAAS,EAAG,CAC/C,IAAA9C,UAAL,GACI,IAAAX,KAAA,CAAU,4BAAV,CAEA;AADA,IAAAoD,UAAA,EACA,CAAI,IAAA3C,cAAJ,GACI,IAAAA,cAAA,CAAmB,IAAAV,eAAnB,CACA,CAAA,IAAAU,cAAA,CAAqB,IAFzB,CAHJ,CADoD,CAcxDhB,sBAAA5+C,UAAAyiD,MAAA,CAAwCI,QAAS,EAAG,CAC3C,IAAA/C,UAAL,GACI,IAAAX,KAAA,CAAU,2BAAV,CACA,CAAA,IAAAoD,UAAA,EAFJ,CADgD,CAWpD3D,sBAAA5+C,UAAA8iD,KAAA,CAAuCC,QAAS,CAAC1+C,IAAD,CAAO,CAC/C2+C,IAAAA,CAAU7mD,IAAAmE,UAAA,CAAe+D,IAAf,CACd,KAAA46C,UAAA,EAAkB+D,IAAAtlD,OAClB,KAAA0hD,OAAA9G,iBAAA,CAA6B,YAA7B,CAA2C0K,IAAAtlD,OAA3C,CAEIulD,KAAAA,CAAa9mD,IAAA+mD,aAAA,CAAkBF,IAAlB,CAGb58C,KAAAA,CAAWH,iBAAA,CAAkBg9C,IAAlB,CAzOAE,IAyOA,CAGf,KAAK,IAAIlgD,EAAI,CAAb,CAAgBA,CAAhB,CAAoBmD,IAAA1I,OAApB,CAAqCuF,CAAA,EAArC,CACI,IAAAg9C,gBAAAmD,eAAA,CAAoC,IAAAzD,cAApC;AAAwDv5C,IAAA1I,OAAxD,CAAyE0I,IAAA,CAASnD,CAAT,CAAzE,CACA,CAAA,IAAA08C,cAAA,EAb+C,CAuBvDf,sBAAA5+C,UAAAyhD,uBAAA,CAAyD4B,QAAS,CAACphD,EAAD,CAAKqhD,EAAL,CAAS,CACvE,GAAI,CAAAnnD,IAAAiD,UAAA,EAAJ,CAAA,CAEA,IAAAsjD,eAAA,CAAsB/9C,QAAAu9C,cAAA,CAAuB,QAAvB,CACtB,KAAIpB,UAAY,CAlQ4ByC,OAmQe,GAD3C,CAEhBzC,UAAA,GAAA,CAAwC7+C,EACxC6+C,UAAA,GAAA,CAAwCwC,EACxC,KAAAZ,eAAAc,IAAA,CAA0B,IAAAnE,MAAA,CAAWyB,SAAX,CAC1B,KAAA4B,eAAAe,MAAAC,QAAA,CAAoC,MACpC/+C,SAAAI,KAAA4+C,YAAA,CAA0B,IAAAjB,eAA1B,CATA,CADuE,CAiB3E9D,sBAAA5+C,UAAAugD,wBAAA,CAA0DqD,QAAS,CAACzD,IAAD,CAAO,CAElEnB,IAAAA,CAAgB7iD,IAAAmE,UAAA,CAAe6/C,IAAf,CAAAziD,OACpB,KAAAshD,cAAA;AAAsBA,IACtB,KAAAI,OAAA9G,iBAAA,CAA6B,gBAA7B,CAA+C0G,IAA/C,CAJsE,CAM1E,OAAOJ,sBA1P4C,CAAZ,EA9gJ3C,CA8wJIsB,2BAA4C,QAAS,EAAG,CAOxDA,QAASA,2BAA0B,CAAC2D,SAAD,CAAYC,WAAZ,CAAyBpE,YAAzB,CAAuCL,KAAvC,CAA8C,CAC7E,IAAAK,aAAA,CAAoBA,YACpB,KAAAL,MAAA,CAAaA,KAMb,KAAA0E,oBAAA,CAA2B,IAAIxwB,UAE/B,KAAAywB,YAAA,CAAmB,EAMnB,KAAAC,cAAA,CAAqBp9C,IAAAK,MAAA,CAA2B,GAA3B,CAAWL,IAAA+M,OAAA,EAAX,CAGrB,KAAAgtC,aAAA,CAAoB,CAAA,CACpB,IAAKzkD,IAAAiD,UAAA,EAAL,CAkCI,IAAAykD,UACA,CADiBA,SACjB,CAAA,IAAAC,YAAA,CAAmBA,WAnCvB,KAAuB,CAKnB,IAAA/C,yBAAA,CAAgC/+C,aAAA,EAChCP;MAAA,CAtU4ByiD,YAsU5B,CAA2C,IAAAnD,yBAA3C,CAAA,CAA4E8C,SAC5EpiD,OAAA,CAtUyB0iD,SAsUzB,CAAwC,IAAApD,yBAAxC,CAAA,CAAyE+C,WAEzE,KAAAM,SAAA,CAAgBlE,0BAAAmE,cAAA,EAEZC,UAAAA,CAAS,EAGT,KAAAF,SAAAZ,IAAJ,EAC0D,aAD1D,GACI,IAAAY,SAAAZ,IAAA17C,OAAA,CAAyB,CAAzB,CAA4BpK,EAA5B,CADJ,GAGI4mD,SAHJ,CAGa,oCAHb,CAEwB3/C,QAAAoI,OAFxB,CAG2D,mBAH3D,CAKIw3C,UAAAA,CAAiB,0BAAjBA,CAAkCD,SAAlCC,CAA2C,4BAC/C,IAAI,CACA,IAAAH,SAAAI,IAAAjF,KAAA,EAEA,CADA,IAAA6E,SAAAI,IAAAxW,MAAA,CAAwBuW,SAAxB,CACA,CAAA,IAAAH,SAAAI,IAAA/B,MAAA,EAHA,CAKJ,MAAO9gD,CAAP,CAAU,CACNgC,GAAA,CAAI,yBAAJ,CAIA;AAHIhC,CAAAyG,MAGJ,EAFIzE,GAAA,CAAIhC,CAAAyG,MAAJ,CAEJ,CAAAzE,GAAA,CAAIhC,CAAJ,CALM,CAzBS,CApBsD,CAgEjFu+C,0BAAAmE,cAAA,CAA2CI,QAAS,EAAG,CACnD,IAAIC,OAAS//C,QAAAu9C,cAAA,CAAuB,QAAvB,CACbwC,OAAAjB,MAAAC,QAAA,CAAuB,MAEvB,IAAI/+C,QAAAI,KAAJ,CAAmB,CACfJ,QAAAI,KAAA4+C,YAAA,CAA0Be,MAA1B,CACA,IAAI,CAIQA,MAAAC,cAAAhgD,SACR,EAEIhB,GAAA,CAAI,+BAAJ,CAPJ,CAUJ,MAAOhC,CAAP,CAAU,CAEN+iD,MAAAlB,IAAA,CACI,kEADJ,CADa7+C,QAAAoI,OACb,CAGQ,0BALF,CAZK,CAAnB,IAuBI,MAAM,mGAAN;AAGA23C,MAAAE,gBAAJ,CACIF,MAAAF,IADJ,CACiBE,MAAAE,gBADjB,CAGSF,MAAAC,cAAJ,CACDD,MAAAF,IADC,CACYE,MAAAC,cAAAhgD,SADZ,CAGI+/C,MAAA//C,SAHJ,GAID+/C,MAAAF,IAJC,CAIYE,MAAA//C,SAJZ,CAML,OAAO+/C,OAvC4C,CA4CvDxE,2BAAAlgD,UAAAyiD,MAAA,CAA6CoC,QAAS,EAAG,CACrD,IAAI9hC,MAAQ,IAEZ,KAAA+hC,MAAA,CAAa,CAAA,CACT,KAAAV,SAAJ,GAII,IAAAA,SAAAI,IAAAz/C,KAAAggD,UACA,CADmC,EACnC,CAAA//C,UAAA,CAAW,QAAS,EAAG,CACI,IAAvB,GAAI+d,KAAAqhC,SAAJ,GACIz/C,QAAAI,KAAA49C,YAAA,CAA0B5/B,KAAAqhC,SAA1B,CACA,CAAArhC,KAAAqhC,SAAA,CAAiB,IAFrB,CADmB,CAAvB,CAKG,CALH,CALJ,CAYA,IAAIjoD,IAAAiD,UAAA,EAAJ,EAAwB,IAAA4lD,KAAxB,CAAmC,CAC/B,IAAIlE,UAAY,CAhagBmE,QAiamB,GADnC,CAEhBnE,UAAA,GAAA;AAAwC,IAAAkE,KACxClE,UAAA,GAAA,CAAwC,IAAAoE,KACpCC,UAAAA,CAAS,IAAA9F,MAAA,CAAWyB,SAAX,CACbZ,2BAAAkF,gBAAA,CAA2CD,SAA3C,CAN+B,CAUnC,GADIzF,SACJ,CADmB,IAAAA,aACnB,CACI,IAAAA,aACA,CADoB,IACpB,CAAAA,SAAA,EA5BiD,CAoCzDQ,2BAAAlgD,UAAAwhD,cAAA,CAAqD6D,QAAS,CAACpjD,EAAD,CAAKqhD,EAAL,CAAS,CACnE,IAAA0B,KAAA,CAAY/iD,EACZ,KAAAijD,KAAA,CAAY5B,EAGZ,KAFA,IAAAwB,MAEA,CAFa,CAAA,CAEb,CAAO,IAAAQ,YAAA,EAAP,CAAA,EALmE,CAcvEpF,2BAAAlgD,UAAAslD,YAAA,CAAmDC,QAAS,EAAG,CAI3D,GAAI,IAAAT,MAAJ,EACI,IAAAlE,aADJ,EAEI,IAAAmD,oBAAA3oC,MAAA,EAFJ,EAEkE,CAA1B,CAAA,IAAA4oC,YAAAtmD,OAAA,CAA8B,CAA9B,CAAkC,CAF1E,EAE8E,CAE1E,IAAAumD,cAAA,EACA;IAAInD,UAAY,EAChBA,UAAA,GAAA,CAAwC,IAAAkE,KACxClE,UAAA,GAAA,CAAwC,IAAAoE,KACxCpE,UAAA,IAAA,CAA4C,IAAAmD,cACxCkB,UAAAA,CAAS,IAAA9F,MAAA,CAAWyB,SAAX,CAIb,KAFA,IAAI0E,cAAgB,EAApB,CACIviD,EAAI,CACR,CAAiC,CAAjC,CAAO,IAAA+gD,YAAAtmD,OAAP,CAAA,CAGI,GAhdQ+nD,IAgdR,EADc,IAAAzB,YAAA0B,CAAiB,CAAjBA,CACVC,EAAAjoD,OAAJ,CA/cMkoD,EA+cN,CAAyCJ,aAAA9nD,OAAzC,CACuB,CAEnB,IAAImoD,OAAS,IAAA7B,YAAA8B,MAAA,EACbN,cAAA,CACIA,aADJ,CA5dsBO,SA4dtB,CAIQ9iD,CAJR,CAKQ,MALR,CAMQ4iD,MAAAG,IANR,CA3duBC,QA2dvB,CASQhjD,CATR,CAUQ,MAVR,CAWQ4iD,MAAAK,GAXR,CA1deC,OA0df,CAcQljD,CAdR,CAeQ,MAfR,CAgBQ4iD,MAAAF,EACR1iD,EAAA,EApBmB,CADvB,IAwBI,MAIR,KAAAmjD,gBAAA,CADSjB,SACT,CADkBK,aAClB,CAA6B,IAAAvB,cAA7B,CACA,OAAO,CAAA,CA3CmE,CA8C1E,MAAO,CAAA,CApDgD,CA6D/D/D,2BAAAlgD,UAAAojD,eAAA;AAAsDiD,QAAS,CAACC,MAAD,CAASC,SAAT,CAAoBliD,IAApB,CAA0B,CAErF,IAAA2/C,YAAAxmD,KAAA,CAAsB,CAAEwoD,IAAKM,MAAP,CAAeJ,GAAIK,SAAnB,CAA8BZ,EAAGthD,IAAjC,CAAtB,CAGI,KAAAygD,MAAJ,EACI,IAAAQ,YAAA,EANiF,CAezFpF,2BAAAlgD,UAAAomD,gBAAA,CAAuDI,QAAS,CAAC9nD,GAAD,CAAM+nD,MAAN,CAAc,CAC1E,IAAI1jC,MAAQ,IAEZ,KAAAghC,oBAAAvwB,IAAA,CAA6BizB,MAA7B,CAAqC,CAArC,CACA,KAAIC,aAAeA,QAAS,EAAG,CAC3B3jC,KAAAghC,oBAAAnjD,OAAA,CAAiC6lD,MAAjC,CACA1jC,MAAAuiC,YAAA,EAF2B,CAA/B,CAMIqB,iBAAmB3hD,UAAA,CAAW0hD,YAAX,CAAyB,IAAzB,CAOvB,KAAArF,OAAA,CAAY3iD,GAAZ,CANmBkoD,QAAS,EAAG,CAE3BpG,YAAA,CAAamG,gBAAb,CAEAD,aAAA,EAJ2B,CAM/B,CAjB0E,CAwB9ExG,2BAAAlgD,UAAAqhD,OAAA;AAA8CwF,QAAS,CAACnoD,GAAD,CAAMooD,MAAN,CAAc,CACjE,IAAI/jC,MAAQ,IACR5mB,KAAAiD,UAAA,EAAJ,CACI,IAAA2nD,eAAA,CAAoBroD,GAApB,CAAyBooD,MAAzB,CADJ,CAII9hD,UAAA,CAAW,QAAS,EAAG,CACnB,GAAI,CAEA,GAAK+d,KAAA69B,aAAL,CAAA,CAEA,IAAIoG,YAAcjkC,KAAAqhC,SAAAI,IAAAtC,cAAA,CAAiC,QAAjC,CAClB8E,YAAAj5C,KAAA,CAAmB,iBACnBi5C,YAAAC,MAAA,CAAoB,CAAA,CACpBD,YAAAxD,IAAA,CAAkB9kD,GAClBsoD,YAAAE,OAAA,CAAqBF,WAAAG,mBAArB,CAAsDC,QAAS,EAAG,CAC9D,IAAIC,OAASL,WAAApiD,WACRyiD,OAAL,EAA0B,QAA1B,GAAeA,MAAf,EAAiD,UAAjD,GAAsCA,MAAtC,GACIL,WAAAE,OAIA,CAJqBF,WAAAG,mBAIrB,CAJsD,IAItD,CAHIH,WAAAM,WAGJ,EAFIN,WAAAM,WAAA3E,YAAA,CAAmCqE,WAAnC,CAEJ;AAAAF,MAAA,EALJ,CAF8D,CAUlEE,YAAAO,QAAA,CAAsBC,QAAS,EAAG,CAC9B7jD,GAAA,CAAI,mCAAJ,CAA0CjF,GAA1C,CACAqkB,MAAA69B,aAAA,CAAqB,CAAA,CACrB79B,MAAA0/B,MAAA,EAH8B,CAKlC1/B,MAAAqhC,SAAAI,IAAAz/C,KAAA4+C,YAAA,CAAoCqD,WAApC,CArBA,CAFA,CAyBJ,MAAOrlD,CAAP,CAAU,EA1BS,CAAvB,CA6BG,CA7BH,CAN6D,CAsCrE,OAAOu+C,2BA/SiD,CAAZ,EA9wJhD,CAklKIuH,cAAgB,IACQ,YAA5B,GAAI,MAAOC,aAAX,CACID,aADJ,CACoBC,YADpB,CAG8B,WAH9B,GAGS,MAAOC,UAHhB,GAIIF,aAJJ,CAIoBE,SAJpB,CAWA,KAAIC,oBAAqC,QAAS,EAAG,CAQjDA,QAASA,oBAAmB,CAAC/I,MAAD,CAASjvC,QAAT,CAAmBkvC,kBAAnB,CAAuCC,aAAvC,CAAsD,CAC9E,IAAAF,OAAA,CAAcA,MAEd,KAAAgJ,OAAA;AADA,IAAAC,eACA,CADsB,IAItB,KAAA9I,cAAA,CADA,IAAAC,UACA,CAFA,IAAA8I,YAEA,CAFmB,CAGnB,KAAA5I,KAAA,CAAYt7C,UAAA,CAAW,IAAAg7C,OAAX,CACZ,KAAAO,OAAA,CAAczG,YAAAC,cAAA,CAA2BhpC,QAA3B,CACd,KAAA1B,QAAA,CAAe05C,mBAAAI,eAAA,CAAmCp4C,QAAnC,CAA6CkvC,kBAA7C,CAAiEC,aAAjE,CAT+D,CAmBlF6I,mBAAAI,eAAA,CAAqCC,QAAS,CAACr4C,QAAD,CAAWkvC,kBAAX,CAA+BC,aAA/B,CAA8C,CACxF,IAAI+B,UAAY,CAv9SJoH,EADGlH,GAw9SC,CAEZ,EAAC7kD,IAAAiD,UAAA,EAAL,EACwB,WADxB,GACI,MAAOsQ,SADX,EAEIA,QAAAuxC,KAFJ,EAG6C,EAH7C,GAGIvxC,QAAAuxC,KAAAj0C,QAAA,CAx9SOk0C,gBAw9SP,CAHJ,GAIIJ,SAAA,EAJJ,CAt9SQK,GAs9SR,CAMIrC,mBAAJ;CACIgC,SAAA,EADJ,CACyChC,kBADzC,CAGIC,cAAJ,GACI+B,SAAA,GADJ,CACoC/B,aADpC,CAGA,OAAOnvC,SAAA/B,cAAA,CA/9SCI,WA+9SD,CAAkC6yC,SAAlC,CAfiF,CAsB5F8G,oBAAA5nD,UAAAu/C,KAAA,CAAqC4I,QAAS,CAAC1I,SAAD,CAAYC,YAAZ,CAA0B,CACpE,IAAI38B,MAAQ,IACZ,KAAA28B,aAAA,CAAoBA,YACpB,KAAAD,UAAA,CAAiBA,SACjB,KAAAN,KAAA,CAAU,0BAAV,CAAuC,IAAAjxC,QAAvC,CACA,KAAAgxC,eAAA,CAAsB,CAAA,CAEtBt9C,kBAAA3B,IAAA,CAAsB,4BAAtB,CAAoD,CAAA,CAApD,CACA,IAAI,CACA,GAAI9D,IAAAiD,UAAA,EAAJ,CAAsB,CAGlB,IAAI+4C,QAAU,CACViQ,QAAS,CACL,aAAc,aAAd,CAAqD5oD,QAAA6oD,YAArD,CAA4E,GAA5E,CAAkFltD,OAAAmtD,SAAlF;AAAqG,GAArG,EAJKnsD,IAAAosD,UAAAC,WAAAC,CAA4B,WAA5BA,CAA0C,MAI/C,CADK,CADC,CAAd,CAMIC,IAAMvtD,OAAA,IANV,CAOIwtD,MAA0C,CAAlC,EAAA,IAAAz6C,QAAAlB,QAAA,CAAqB,QAArB,CAAA,CACN07C,GAAA,YADM,EACgBA,GAAA,YADhB,CAENA,GAAA,WAFM,EAEeA,GAAA,WACvBC,MAAJ,GACIxQ,OAAA,MADJ,CACuB,CAAEyQ,OAAQD,KAAV,CADvB,CAGA,KAAAE,OAAA,CAAc,IAAIpB,aAAJ,CAAkB,IAAAv5C,QAAlB,CAAgC,EAAhC,CAAoCiqC,OAApC,CAhBI,CAAtB,IAmBI,KAAA0Q,OAAA,CAAc,IAAIpB,aAAJ,CAAkB,IAAAv5C,QAAlB,CApBlB,CAuBJ,MAAOvM,CAAP,CAAU,CACN,IAAAw9C,KAAA,CAAU,gCAAV,CAEA,EADIn7C,SACJ,CADYrC,CAAAqB,QACZ,EADyBrB,CAAA0C,KACzB,GACI,IAAA86C,KAAA,CAAUn7C,SAAV,CAEJ,KAAAg8C,UAAA,EACA,OAPM,CASV,IAAA6I,OAAAC,OAAA,CAAqBC,QAAS,EAAG,CAC7BhmC,KAAAo8B,KAAA,CAAW,sBAAX,CACAp8B;KAAAm8B,eAAA,CAAuB,CAAA,CAFM,CAIjC,KAAA2J,OAAAG,QAAA,CAAsBC,QAAS,EAAG,CAC9BlmC,KAAAo8B,KAAA,CAAW,wCAAX,CACAp8B,MAAA8lC,OAAA,CAAe,IACf9lC,MAAAi9B,UAAA,EAH8B,CAKlC,KAAA6I,OAAAK,UAAA,CAAwBC,QAAS,CAACC,CAAD,CAAI,CACjCrmC,KAAAsmC,oBAAA,CAA0BD,CAA1B,CADiC,CAGrC,KAAAP,OAAAtB,QAAA,CAAsB+B,QAAS,CAAC3nD,CAAD,CAAI,CAC/BohB,KAAAo8B,KAAA,CAAW,uCAAX,CAEA,EADIn7C,CACJ,CADYrC,CAAAqB,QACZ,EADyBrB,CAAA0C,KACzB,GACI0e,KAAAo8B,KAAA,CAAWn7C,CAAX,CAEJ+e,MAAAi9B,UAAA,EAN+B,CApDiC,CAgExE4H,oBAAA5nD,UAAAshD,MAAA,CAAsCiI,QAAS,EAAG,EAClD3B,oBAAA/F,cAAA,CAAoC2H,QAAS,EAAG,CAC5C5B,mBAAA7F,eAAA,CAAqC,CAAA,CADO,CAGhD6F,oBAAA5F,YAAA;AAAkCyH,QAAS,EAAG,CAC1C,IAAIC,aAAe,CAAA,CACnB,IAAyB,WAAzB,GAAI,MAAOC,UAAX,EAAwCA,SAAAC,UAAxC,CAA6D,CAEzD,IAAIC,gBAAkBF,SAAAC,UAAAE,MAAA,CADAC,gCACA,CAClBF,gBAAJ,EAAgD,CAAhD,CAAuBA,eAAAnsD,OAAvB,EACyC,GADzC,CACQssD,UAAA,CAAWH,eAAA,CAAgB,CAAhB,CAAX,CADR,GAEQH,YAFR,CAEuB,CAAA,CAFvB,CAHyD,CAS7D,MAAQ,CAACA,YAAT,EACsB,IADtB,GACIjC,aADJ,EAEI,CAACG,mBAAA7F,eAbqC,CAmB9C6F,oBAAAqC,iBAAA,CAAuCC,QAAS,EAAG,CAG/C,MAAQtoD,kBAAAT,kBAAR,EAC4D,CAAA,CAD5D,GACIS,iBAAArB,IAAA,CAAsB,4BAAtB,CAJ2C,CAMnDqnD,oBAAA5nD,UAAAqiD,sBAAA;AAAsD8H,QAAS,EAAG,CAC9DvoD,iBAAAhB,OAAA,CAAyB,4BAAzB,CAD8D,CAGlEgnD,oBAAA5nD,UAAAoqD,aAAA,CAA6CC,QAAS,CAAChmD,IAAD,CAAO,CACzD,IAAAwjD,OAAArqD,KAAA,CAAiB6G,IAAjB,CACI,KAAAwjD,OAAAnqD,OAAJ,EAA0B,IAAAqqD,YAA1B,GACQuC,IAIJ,CAJe,IAAAzC,OAAAngD,KAAA,CAAiB,EAAjB,CAIf,CAHA,IAAAmgD,OAGA,CAHc,IAGd,CAFI0C,IAEJ,CAFepuD,IAAAwE,SAAA,CAAc2pD,IAAd,CAEf,CAAA,IAAA7K,UAAA,CAAe8K,IAAf,CALJ,CAFyD,CAc7D3C,oBAAA5nD,UAAAwqD,qBAAA,CAAqDC,QAAS,CAACC,UAAD,CAAa,CACvE,IAAA3C,YAAA,CAAmB2C,UACnB,KAAA7C,OAAA,CAAc,EAFyD,CAU3ED,oBAAA5nD,UAAA2qD,mBAAA,CAAmDC,QAAS,CAACvmD,IAAD,CAAO,CAC/DlI,IAAAC,OAAA,CAA4B,IAA5B,GAAY,IAAAyrD,OAAZ,CAAkC,gCAAlC,CAGA;GAAmB,CAAnB,EAAIxjD,IAAA3G,OAAJ,CAAsB,CAClB,IAAIgtD,WAAapmD,MAAA,CAAOD,IAAP,CACjB,IAAI,CAACwmD,KAAA,CAAMH,UAAN,CAAL,CAEI,MADA,KAAAF,qBAAA,CAA0BE,UAA1B,CACO,CAAA,IAJO,CAOtB,IAAAF,qBAAA,CAA0B,CAA1B,CACA,OAAOnmD,KAZwD,CAkBnEujD,oBAAA5nD,UAAAqpD,oBAAA,CAAoDyB,QAAS,CAACC,IAAD,CAAO,CAC5C,IAApB,GAAI,IAAAlC,OAAJ,GAEIxkD,IAIJ,CAJW0mD,IAAA,KAIX,CAHA,IAAA/L,cAGA,EAHsB36C,IAAA3G,OAGtB,CAFA,IAAA0hD,OAAA9G,iBAAA,CAA6B,gBAA7B,CAA+Cj0C,IAAA3G,OAA/C,CAEA,CADA,IAAAstD,eAAA,EACA,CAAoB,IAApB,GAAI,IAAAnD,OAAJ,CAEI,IAAAuC,aAAA,CAAkB/lD,IAAlB,CAFJ,EAMQ4mD,IACJ,CADoB,IAAAN,mBAAA,CAAwBtmD,IAAxB,CACpB,CAAsB,IAAtB,GAAI4mD,IAAJ,EACI,IAAAb,aAAA,CAAkBa,IAAlB,CARR,CANA,CADgE,CAuBpErD,oBAAA5nD,UAAA8iD,KAAA;AAAqCoI,QAAS,CAAC7mD,IAAD,CAAO,CACjD,IAAA2mD,eAAA,EACIhI,KAAAA,CAAU7mD,IAAAmE,UAAA,CAAe+D,IAAf,CACd,KAAA46C,UAAA,EAAkB+D,IAAAtlD,OAClB,KAAA0hD,OAAA9G,iBAAA,CAA6B,YAA7B,CAA2C0K,IAAAtlD,OAA3C,CAGI0I,KAAAA,CAAWH,iBAAA,CAAkB+8C,IAAlB,CAvOQmI,KAuOR,CAEO,EAAtB,CAAI/kD,IAAA1I,OAAJ,EACI,IAAA0tD,YAAA,CAAiBthD,MAAA,CAAO1D,IAAA1I,OAAP,CAAjB,CAGJ,KAAK,IAAIuF,EAAI,CAAb,CAAgBA,CAAhB,CAAoBmD,IAAA1I,OAApB,CAAqCuF,CAAA,EAArC,CACI,IAAAmoD,YAAA,CAAiBhlD,IAAA,CAASnD,CAAT,CAAjB,CAd6C,CAiBrD2kD,oBAAA5nD,UAAAuiD,UAAA,CAA0C8I,QAAS,EAAG,CAClD,IAAAvL,UAAA,CAAiB,CAAA,CACb,KAAAgI,eAAJ,GACIwD,aAAA,CAAc,IAAAxD,eAAd,CACA,CAAA,IAAAA,eAAA,CAAsB,IAF1B,CAII,KAAAe,OAAJ,GACI,IAAAA,OAAApG,MAAA,EACA,CAAA,IAAAoG,OAAA,CAAc,IAFlB,CANkD,CAWtDjB,oBAAA5nD,UAAAggD,UAAA;AAA0CuL,QAAS,EAAG,CAC7C,IAAAzL,UAAL,GACI,IAAAX,KAAA,CAAU,6BAAV,CAGA,CAFA,IAAAoD,UAAA,EAEA,CAAI,IAAA7C,aAAJ,GACI,IAAAA,aAAA,CAAkB,IAAAR,eAAlB,CACA,CAAA,IAAAQ,aAAA,CAAoB,IAFxB,CAJJ,CADkD,CAetDkI,oBAAA5nD,UAAAyiD,MAAA,CAAsC+I,QAAS,EAAG,CACzC,IAAA1L,UAAL,GACI,IAAAX,KAAA,CAAU,2BAAV,CACA,CAAA,IAAAoD,UAAA,EAFJ,CAD8C,CAUlDqF,oBAAA5nD,UAAAgrD,eAAA,CAA+CS,QAAS,EAAG,CACvD,IAAI1oC,MAAQ,IACZuoC,cAAA,CAAc,IAAAxD,eAAd,CACA,KAAAA,eAAA,CAAsB4D,WAAA,CAAY,QAAS,EAAG,CAEtC3oC,KAAA8lC,OAAJ,EACI9lC,KAAAqoC,YAAA,CAAkB,GAAlB,CAEJroC,MAAAioC,eAAA,EAL0C,CAAxB;AAMnB,IANmB,CAHiC,CAiB3DpD,oBAAA5nD,UAAAorD,YAAA,CAA4CO,QAAS,CAACxpD,GAAD,CAAM,CAIvD,GAAI,CACA,IAAA0mD,OAAA/F,KAAA,CAAiB3gD,GAAjB,CADA,CAGJ,MAAOR,CAAP,CAAU,CACN,IAAAw9C,KAAA,CAAU,yCAAV,CAAqDx9C,CAAAqB,QAArD,EAAkErB,CAAA0C,KAAlE,CAA0E,qBAA1E,CACA,CAAAW,UAAA,CAAW,IAAAg7C,UAAAp8C,KAAA,CAAoB,IAApB,CAAX,CAAsC,CAAtC,CAFM,CAP6C,CAgB3DgkD,oBAAAgE,6BAAA,CAAmD,CAKnDhE,oBAAAiE,eAAA,CAAqC,GACrC,OAAOjE,oBA9S0C,CAAZ,EAAzC,CAyUIkE,iBAAkC,QAAS,EAAG,CAI9CA,QAASA,iBAAgB,CAACl8C,QAAD,CAAW,CAChC,IAAAm8C,gBAAA,CAAqBn8C,QAArB,CADgC,CAGpCvQ,MAAAC,eAAA,CAAsBwsD,gBAAtB,CAAwC,gBAAxC;AAA0D,CAKtDvrD,IAAKA,QAAS,EAAG,CACb,MAAO,CAACq+C,qBAAD,CAAwBgJ,mBAAxB,CADM,CALqC,CAQtD7+C,WAAY,CAAA,CAR0C,CAStDC,aAAc,CAAA,CATwC,CAA1D,CAeA8iD,iBAAA9rD,UAAA+rD,gBAAA,CAA6CC,QAAS,CAACp8C,QAAD,CAAW,CAC7D,IAAIq8C,sBAAwBrE,mBAAxBqE,EAA+CrE,mBAAA,YAAA,EAAnD,CACIsE,qBAAuBD,qBAAvBC,EAAgD,CAACtE,mBAAAqC,iBAAA,EACjDr6C,SAAA/C,cAAJ,GACSo/C,qBAEL,EADI9nD,IAAA,CAAK,iFAAL,CACJ,CAAA+nD,oBAAA,CAAuB,CAAA,CAH3B,CAKA,IAAIA,oBAAJ,CACI,IAAAC,YAAA;AAAmB,CAACvE,mBAAD,CADvB,KAGK,CACD,IAAIwE,aAAgB,IAAAD,YAAhBC,CAAmC,EACvC9lD,KAAA,CAAKwlD,gBAAAO,eAAL,CAAsC,QAAS,CAACppD,CAAD,CAAIqpD,SAAJ,CAAe,CACtDA,SAAJ,EAAiBA,SAAA,YAAA,EAAjB,EACIF,YAAA5uD,KAAA,CAAkB8uD,SAAlB,CAFsD,CAA9D,CAFC,CAXwD,CAwBjER,iBAAA9rD,UAAAusD,iBAAA,CAA8CC,QAAS,EAAG,CACtD,GAA8B,CAA9B,CAAI,IAAAL,YAAAzuD,OAAJ,CACI,MAAO,KAAAyuD,YAAA,CAAiB,CAAjB,CAGP,MAAUjoD,MAAJ,CAAU,yBAAV,CAAN,CALkD,CAY1D4nD,iBAAA9rD,UAAAysD,iBAAA,CAA8CC,QAAS,EAAG,CACtD,MAA8B,EAA9B,CAAI,IAAAP,YAAAzuD,OAAJ,CACW,IAAAyuD,YAAA,CAAiB,CAAjB,CADX,CAIW,IAL2C,CAQ1D,OAAOL,iBAlEuC,CAAZ,EAzUtC,CAwbIa,WAA4B,QAAS,EAAG,CAUxCA,QAASA,WAAU,CAAC1qD,EAAD;AAAK2qD,SAAL,CAAgBhP,UAAhB,CAA4BiP,QAA5B,CAAsCjN,aAAtC,CAAqDkN,OAArD,CAA8D/N,aAA9D,CAA6E,CAC5F,IAAA98C,GAAA,CAAUA,EACV,KAAA2qD,UAAA,CAAiBA,SACjB,KAAAhP,WAAA,CAAkBA,UAClB,KAAAiP,SAAA,CAAgBA,QAChB,KAAAjN,cAAA,CAAqBA,aACrB,KAAAkN,QAAA,CAAeA,OACf,KAAA/N,cAAA,CAAqBA,aACrB,KAAAgO,gBAAA,CAAuB,CACvB,KAAAC,oBAAA,CAA2B,EAC3B,KAAAC,OAAA,CAAc,CACd,KAAA9N,KAAA,CAAYt7C,UAAA,CAAW,IAAX,CAAkB,IAAA5B,GAAlB,CAA4B,GAA5B,CACZ,KAAAirD,kBAAA,CAAyB,IAAIpB,gBAAJ,CAAqBc,SAArB,CACzB,KAAAzN,KAAA,CAAU,oBAAV,CACA,KAAAgO,OAAA,EAd4F,CAoBhGR,UAAA3sD,UAAAmtD,OAAA,CAA8BC,QAAS,EAAG,CACtC,IAAIrqC,MAAQ,IAAZ,CACIsqC;AAAO,IAAAH,kBAAAX,iBAAA,EACX,KAAAe,MAAA,CAAa,IAAID,IAAJ,CAAS,IAAAE,iBAAA,EAAT,CAAkC,IAAAX,UAAlC,CAAkDt8C,IAAAA,EAAlD,CAA6D,IAAAyuC,cAA7D,CAGb,KAAAyO,0BAAA,CAAiCH,IAAA,6BAAjC,EAAyE,CACzE,KAAII,kBAAoB,IAAAC,cAAA,CAAmB,IAAAJ,MAAnB,CAAxB,CACIK,iBAAmB,IAAAC,iBAAA,CAAsB,IAAAN,MAAtB,CAEvB,KAAAO,IAAA,CADA,IAAAC,IACA,CADW,IAAAR,MAEX,KAAAS,eAAA,CAAsB,IACtB,KAAAC,WAAA,CAAkB,CAAA,CAOlBhpD,WAAA,CAAW,QAAS,EAAG,CAEnB+d,KAAAuqC,MAAA,EAAevqC,KAAAuqC,MAAA/N,KAAA,CAAiBkO,iBAAjB,CAAoCE,gBAApC,CAFI,CAAvB,CAGG,CAHH,CAIIM,KAAAA,CAAoBZ,IAAA,eAApBY,EAA8C,CAC1B,EAAxB,CAAIA,IAAJ;CACI,IAAAC,gBADJ,CAC2B7lD,qBAAA,CAAsB,QAAS,EAAG,CACrD0a,KAAAmrC,gBAAA,CAAwB,IACnBnrC,MAAAirC,WAAL,GACQjrC,KAAAuqC,MAAJ,EA3EkBa,MA2ElB,CACIprC,KAAAuqC,MAAAtO,cADJ,EAEIj8B,KAAAo8B,KAAA,CAAW,uDAAX,CACIp8B,KAAAuqC,MAAAtO,cADJ,CAEI,sCAFJ,CAIA,CADAj8B,KAAAirC,WACA,CADmB,CAAA,CACnB,CAAAjrC,KAAAuqC,MAAAjL,sBAAA,EANJ,EAQSt/B,KAAAuqC,MAAJ,EApFSc,KAoFT,CACDrrC,KAAAuqC,MAAArO,UADC,CAEDl8B,KAAAo8B,KAAA,CAAW,mDAAX,CACIp8B,KAAAuqC,MAAArO,UADJ,CAEI,oCAFJ,CAFC;CASDl8B,KAAAo8B,KAAA,CAAW,6CAAX,CACA,CAAAp8B,KAAA0/B,MAAA,EAVC,CATT,CAFqD,CAAlC,CAwBpB57C,IAAAK,MAAA,CAAW+mD,IAAX,CAxBoB,CAD3B,CAxBsC,CAwD1CtB,WAAA3sD,UAAAutD,iBAAA,CAAwCc,QAAS,EAAG,CAChD,MAAO,IAAP,CAAc,IAAApsD,GAAd,CAAwB,GAAxB,CAA8B,IAAA8qD,gBAAA,EADkB,CAGpDJ,WAAA3sD,UAAA4tD,iBAAA,CAAwCU,QAAS,CAACjB,IAAD,CAAO,CACpD,IAAItqC,MAAQ,IACZ,OAAO,SAAS,CAACwrC,aAAD,CAAgB,CAC5B,GAAIlB,IAAJ,GAAatqC,KAAAuqC,MAAb,CACIvqC,KAAAyrC,kBAAA,CAAwBD,aAAxB,CADJ,KAGSlB,KAAJ,GAAatqC,KAAAgrC,eAAb,EACDhrC,KAAAo8B,KAAA,CAAW,4BAAX,CACA,CAAAp8B,KAAA0rC,2BAAA,EAFC,EAKD1rC,KAAAo8B,KAAA,CAAW,2BAAX,CATwB,CAFoB,CAexDwN;UAAA3sD,UAAA0tD,cAAA,CAAqCgB,QAAS,CAACrB,IAAD,CAAO,CACjD,IAAItqC,MAAQ,IACZ,OAAO,SAAS,CAAC/f,OAAD,CAAU,CACtB,GAAoB,CAApB,EAAI+f,KAAAkqC,OAAJ,CACI,GAAII,IAAJ,GAAatqC,KAAA8qC,IAAb,CACI9qC,KAAA4rC,0BAAA,CAAgC3rD,OAAhC,CADJ,KAGK,IAAIqqD,IAAJ,GAAatqC,KAAAgrC,eAAb,CACDhrC,KAAA6rC,4BAAA,CAAkC5rD,OAAlC,CADC,KAID+f,MAAAo8B,KAAA,CAAW,2BAAX,CATc,CAFuB,CAoBrDwN,WAAA3sD,UAAA6uD,YAAA,CAAmCC,QAAS,CAACC,OAAD,CAAU,CAGlD,IAAAC,UAAA,CADUC,CAAEC,EAAG,GAALD,CAAUtJ,EAAGoJ,OAAbE,CACV,CAHkD,CAKtDtC,WAAA3sD,UAAAmvD,qBAAA,CAA4CC,QAAS,EAAG,CAChD,IAAAtB,IAAJ,GAAiB,IAAAC,eAAjB,EAAwC,IAAAF,IAAxC,GAAqD,IAAAE,eAArD,GACI,IAAA5O,KAAA,CAAU,0CAAV;AAAuD,IAAA4O,eAAAlP,OAAvD,CAEA,CADA,IAAAyO,MACA,CADa,IAAAS,eACb,CAAA,IAAAA,eAAA,CAAsB,IAH1B,CADoD,CAQxDpB,WAAA3sD,UAAAqvD,oBAAA,CAA2CC,QAAS,CAACC,WAAD,CAAc,CAzJnDC,GA0JX,EAAoBD,YAApB,GACQE,WACJ,CADUF,WAAA,EACV,CAtJKG,GAsJL,GAAID,WAAJ,CACI,IAAAE,2BAAA,EADJ,CAzJQC,GA4JH,GAAIH,WAAJ,EAED,IAAAtQ,KAAA,CAAU,sCAAV,CAGA,CAFA,IAAA4O,eAAAtL,MAAA,EAEA,CAAI,IAAAqL,IAAJ,GAAiB,IAAAC,eAAjB,EACI,IAAAF,IADJ,GACiB,IAAAE,eADjB,EAEI,IAAAtL,MAAA,EAPH,EA1JEoN,GA0JF,GAUIJ,WAVJ,GAWD,IAAAtQ,KAAA,CAAU,wBAAV,CAEA,CADA,IAAA2Q,4BAAA,EACA;AAAA,IAAAH,2BAAA,EAbC,CALT,CAD8D,CAuBlEhD,WAAA3sD,UAAA4uD,4BAAA,CAAmDmB,QAAS,CAACC,UAAD,CAAa,CACrE,IAAIC,MAAQtqD,UAAA,CAAW,GAAX,CAAgBqqD,UAAhB,CACR3rD,WAAAA,CAAOsB,UAAA,CAAW,GAAX,CAAgBqqD,UAAhB,CACX,IAAa,GAAb,EAAIC,KAAJ,CACI,IAAAZ,oBAAA,CAAyBhrD,UAAzB,CADJ,KAGK,IAAa,GAAb,EAAI4rD,KAAJ,CAED,IAAAjD,oBAAAxvD,KAAA,CAA8B6G,UAA9B,CAFC,KAKD,MAAUH,MAAJ,CAAU,0BAAV,CAAuC+rD,KAAvC,CAAN,CAXiE,CAczEtD,WAAA3sD,UAAA2vD,2BAAA,CAAkDO,QAAS,EAAG,CAClB,CAAxC,EAAI,IAAAJ,4BAAJ,EACI,IAAA3Q,KAAA,CAAU,kCAAV,CAGA,CAFA,IAAA6O,WAEA;AAFkB,CAAA,CAElB,CADA,IAAAD,eAAA1L,sBAAA,EACA,CAAA,IAAA8N,oBAAA,EAJJ,GAQI,IAAAhR,KAAA,CAAU,4BAAV,CACA,CAAA,IAAA4O,eAAAjL,KAAA,CAAyB,CAAEoM,EAAG,GAAL,CAAUvJ,EAAG,CAAEuJ,EAhMzCkB,GAgMuC,CAAWzK,EAAG,EAAd,CAAb,CAAzB,CATJ,CAD0D,CAa9DgH,WAAA3sD,UAAAmwD,oBAAA,CAA2CE,QAAS,EAAG,CAEnD,IAAAtC,eAAAzM,MAAA,EAEA,KAAAnC,KAAA,CAAU,iCAAV,CACA,KAAA4O,eAAAjL,KAAA,CAAyB,CAAEoM,EAAG,GAAL,CAAUvJ,EAAG,CAAEuJ,EA1M/BQ,GA0M6B,CAAiB/J,EAAG,EAApB,CAAb,CAAzB,CAGA,KAAAxG,KAAA,CAAU,gCAAV,CACA,KAAAmO,MAAAxK,KAAA,CAAgB,CAAEoM,EAAG,GAAL,CAAUvJ,EAAG,CAAEuJ,EA7MhBoB,GA6Mc,CAAuB3K,EAAG,EAA1B,CAAb,CAAhB,CACA,KAAAmI,IAAA,CAAW,IAAAC,eACX,KAAAoB,qBAAA,EAXmD,CAavDxC,WAAA3sD,UAAA2uD,0BAAA;AAAiD4B,QAAS,CAACP,UAAD,CAAa,CAEnE,IAAIC,MAAQtqD,UAAA,CAAW,GAAX,CAAgBqqD,UAAhB,CACR3rD,WAAAA,CAAOsB,UAAA,CAAW,GAAX,CAAgBqqD,UAAhB,CACX,IAAa,GAAb,EAAIC,KAAJ,CACI,IAAAO,WAAA,CAAgBnsD,UAAhB,CADJ,KAGK,IAAa,GAAb,EAAI4rD,KAAJ,CACD,IAAAQ,eAAA,CAAoBpsD,UAApB,CAR+D,CAWvEsoD,WAAA3sD,UAAAywD,eAAA,CAAsCC,QAAS,CAAC1tD,OAAD,CAAU,CACrD,IAAA2tD,mBAAA,EAEA,KAAA/S,WAAA,CAAgB56C,OAAhB,CAHqD,CAKzD2pD,WAAA3sD,UAAA2wD,mBAAA,CAA0CC,QAAS,EAAG,CAC7C,IAAA5C,WAAL,GACI,IAAAR,0BAAA,EACA,CAAsC,CAAtC,EAAI,IAAAA,0BAAJ,GACI,IAAArO,KAAA,CAAU,gCAAV,CAEA,CADA,IAAA6O,WACA,CADkB,CAAA,CAClB,CAAA,IAAAV,MAAAjL,sBAAA,EAHJ,CAFJ,CADkD,CAUtDsK;UAAA3sD,UAAAwwD,WAAA,CAAkCK,QAAS,CAACtB,WAAD,CAAc,CACrD,IAAIE,IAAM9pD,UAAA,CAnPC6pD,GAmPD,CAAyBD,WAAzB,CACV,IAnPWuB,GAmPX,EAAoBvB,YAApB,CAEI,GADIwB,WACA,CADUxB,WAAA,EACV,CA7OGyB,GA6OH,GAAAvB,GAAJ,CACI,IAAAwB,aAAA,CAAkBF,WAAlB,CADJ,KAGK,IAlPMT,GAkPN,GAAIb,GAAJ,CAA8B,CAC/B,IAAAtQ,KAAA,CAAU,mCAAV,CACA,KAAA0O,IAAA,CAAW,IAAAE,eACX,KAAS9qD,GAAT,CAAa,CAAb,CAAgBA,GAAhB,CAAoB,IAAA+pD,oBAAAtvD,OAApB,CAAqD,EAAEuF,GAAvD,CACI,IAAAwtD,eAAA,CAAoB,IAAAzD,oBAAA,CAAyB/pD,GAAzB,CAApB,CAEJ,KAAA+pD,oBAAA,CAA2B,EAC3B,KAAAmC,qBAAA,EAP+B,CAA9B,IASA,IAhQM+B,GAgQN,GAAIzB,GAAJ,CAGD,IAAA0B,sBAAA,CAA2BJ,WAA3B,CAHC,KAKA,IApQGnB,GAoQH;AAAIH,GAAJ,CAED,IAAA2B,SAAA,CAAcL,WAAd,CAFC,KAnQGM,GAuQH,GAAI5B,GAAJ,CACDzrD,cAAA,CAAM,gBAAN,CAAyB+sD,WAAzB,CADC,CAtQElB,GAyQF,GAAIJ,GAAJ,EACD,IAAAtQ,KAAA,CAAU,sBAAV,CAEA,CADA,IAAAwR,mBAAA,EACA,CAAA,IAAAW,8BAAA,EAHC,EAMDttD,cAAA,CAAM,kCAAN,CAA2CyrD,GAA3C,CAlC6C,CA2CzD9C,WAAA3sD,UAAAixD,aAAA,CAAoCM,QAAS,CAACC,SAAD,CAAY,CACrD,IAAIC,UAAYD,SAAAtL,GAAhB,CACIwL,QAAUF,SAAA/qD,EADd,CAEIkG,KAAO6kD,SAAAG,EACX,KAAAC,UAAA,CAAiBJ,SAAA7qD,EACjB,KAAAimD,UAAAl/C,WAAA,CAA0Bf,IAA1B,CAEmB,EAAnB,EAAI,IAAAsgD,OAAJ,GACI,IAAAK,MAAAhM,MAAA,EAMA,CALA,IAAAuQ,yBAAA,CAA8B,IAAAvE,MAA9B;AAA0CmE,SAA1C,CAKA,CA/oUWzQ,GA+oUX,GAJyB0Q,OAIzB,EAHIvtD,IAAA,CAAK,oCAAL,CAGJ,CAAA,IAAA2tD,iBAAA,EAPJ,CAPqD,CAiBzDnF,WAAA3sD,UAAA8xD,iBAAA,CAAwCC,QAAS,EAAG,CAChD,IAAI1E,KAAO,IAAAH,kBAAAT,iBAAA,EACPY,KAAJ,EACI,IAAA2E,cAAA,CAAmB3E,IAAnB,CAH4C,CAMpDV,WAAA3sD,UAAAgyD,cAAA,CAAqCC,QAAS,CAAC5E,IAAD,CAAO,CACjD,IAAItqC,MAAQ,IACZ,KAAAgrC,eAAA,CAAsB,IAAIV,IAAJ,CAAS,IAAAE,iBAAA,EAAT,CAAkC,IAAAX,UAAlC,CAAkD,IAAAgF,UAAlD,CAGtB,KAAA9B,4BAAA,CACIzC,IAAA,6BADJ,EAC4C,CACxC5N,KAAAA,CAAY,IAAAiO,cAAA,CAAmB,IAAAK,eAAnB,CAChB,KAAIrO;AAAe,IAAAkO,iBAAA,CAAsB,IAAAG,eAAtB,CACnB,KAAAA,eAAAxO,KAAA,CAAyBE,IAAzB,CAAoCC,YAApC,CAEAr3C,sBAAA,CAAsB,QAAS,EAAG,CAC1B0a,KAAAgrC,eAAJ,GACIhrC,KAAAo8B,KAAA,CAAW,8BAAX,CACA,CAAAp8B,KAAAgrC,eAAAtL,MAAA,EAFJ,CAD8B,CAAlC,CAKG,GALH,CAXiD,CAkBrDkK,WAAA3sD,UAAAoxD,SAAA,CAAgCc,QAAS,CAACvlD,IAAD,CAAO,CAC5C,IAAAwyC,KAAA,CAAU,oCAAV,CAAiDxyC,IAAjD,CACA,KAAAigD,UAAAl/C,WAAA,CAA0Bf,IAA1B,CAGoB,EAApB,GAAI,IAAAsgD,OAAJ,CACI,IAAAxK,MAAA,EADJ,EAKI,IAAA0P,kBAAA,EACA,CAAA,IAAAhF,OAAA,EANJ,CAL4C,CAchDR,WAAA3sD,UAAA6xD,yBAAA,CAAgDO,QAAS,CAAC/E,IAAD,CAAOoE,SAAP,CAAkB,CACvE,IAAI1uC;AAAQ,IACZ,KAAAo8B,KAAA,CAAU,kCAAV,CACA,KAAAmO,MAAA,CAAaD,IACb,KAAAJ,OAAA,CAAc,CACV,KAAAJ,SAAJ,GACI,IAAAA,SAAA,CAAc4E,SAAd,CAAyB,IAAAG,UAAzB,CACA,CAAA,IAAA/E,SAAA,CAAgB,IAFpB,CAMuC,EAAvC,GAAI,IAAAW,0BAAJ,EACI,IAAArO,KAAA,CAAU,gCAAV,CACA,CAAA,IAAA6O,WAAA,CAAkB,CAAA,CAFtB,EAKI3lD,qBAAA,CAAsB,QAAS,EAAG,CAC9B0a,KAAAuuC,8BAAA,EAD8B,CAAlC,CAEG,GAFH,CAhBmE,CAqB3E3E,WAAA3sD,UAAAsxD,8BAAA,CAAqDe,QAAS,EAAG,CAExD,IAAArE,WAAL,EAAwC,CAAxC,GAAwB,IAAAf,OAAxB,GACI,IAAA9N,KAAA,CAAU,0BAAV,CACA,CAAA,IAAA6P,UAAA,CAAe,CAAEE,EAAG,GAAL,CAAUvJ,EAAG,CAAEuJ,EArW/BkB,GAqW6B;AAAWzK,EAAG,EAAd,CAAb,CAAf,CAFJ,CAF6D,CAOjEgH,WAAA3sD,UAAAyuD,2BAAA,CAAkD6D,QAAS,EAAG,CAC1D,IAAIjF,KAAO,IAAAU,eACX,KAAAA,eAAA,CAAsB,IAClB,KAAAD,IAAJ,GAAiBT,IAAjB,EAAyB,IAAAQ,IAAzB,GAAsCR,IAAtC,EAEI,IAAA5K,MAAA,EALsD,CAc9DkK,WAAA3sD,UAAAwuD,kBAAA,CAAyC+D,QAAS,CAAChE,aAAD,CAAgB,CAC9D,IAAAjB,MAAA,CAAa,IAGRiB,cAAL,EAAsC,CAAtC,GAAsB,IAAAtB,OAAtB,CASyB,CATzB,GASS,IAAAA,OATT,EAUI,IAAA9N,KAAA,CAAU,2BAAV,CAVJ,EACI,IAAAA,KAAA,CAAU,6BAAV,CAEA,CAAI,IAAAyN,UAAAv/C,gBAAA,EAAJ,GACIzL,iBAAAhB,OAAA,CAAyB,OAAzB,CAAmC,IAAAgsD,UAAAjgD,KAAnC,CAEA,CAAA,IAAAigD,UAAA3/C,aAAA,CAA8B,IAAA2/C,UAAAjgD,KAHlC,CAHJ,CAYA;IAAA81C,MAAA,EAhB8D,CAuBlEkK,WAAA3sD,UAAAmxD,sBAAA,CAA6CqB,QAAS,CAAC7c,MAAD,CAAS,CAC3D,IAAAwJ,KAAA,CAAU,wDAAV,CACI,KAAA2N,QAAJ,GACI,IAAAA,QAAA,CAAanX,MAAb,CACA,CAAA,IAAAmX,QAAA,CAAe,IAFnB,CAMA,KAAAlN,cAAA,CAAqB,IACrB,KAAA6C,MAAA,EAT2D,CAW/DkK,WAAA3sD,UAAAgvD,UAAA,CAAiCyD,QAAS,CAACpuD,IAAD,CAAO,CAC7C,GAAoB,CAApB,GAAI,IAAA4oD,OAAJ,CACI,KAAM,6BAAN,CAGA,IAAAa,IAAAhL,KAAA,CAAcz+C,IAAd,CALyC,CAWjDsoD,WAAA3sD,UAAAyiD,MAAA,CAA6BiQ,QAAS,EAAG,CACjB,CAApB,GAAI,IAAAzF,OAAJ,GACI,IAAA9N,KAAA,CAAU,8BAAV,CAGA,CAFA,IAAA8N,OAEA,CAFc,CAEd,CADA,IAAAkF,kBAAA,EACA,CAAI,IAAAvS,cAAJ;CACI,IAAAA,cAAA,EACA,CAAA,IAAAA,cAAA,CAAqB,IAFzB,CAJJ,CADqC,CAezC+M,WAAA3sD,UAAAmyD,kBAAA,CAAyCQ,QAAS,EAAG,CACjD,IAAAxT,KAAA,CAAU,+BAAV,CACI,KAAAmO,MAAJ,GACI,IAAAA,MAAA7K,MAAA,EACA,CAAA,IAAA6K,MAAA,CAAa,IAFjB,CAII,KAAAS,eAAJ,GACI,IAAAA,eAAAtL,MAAA,EACA,CAAA,IAAAsL,eAAA,CAAsB,IAF1B,CAII,KAAAG,gBAAJ,GACI1N,YAAA,CAAa,IAAA0N,gBAAb,CACA,CAAA,IAAAA,gBAAA,CAAuB,IAF3B,CAViD,CAerD,OAAOvB,WAzbiC,CAAZ,EAxbhC,CA04BIiG,cAA+B,QAAS,EAAG,CAC3CA,QAASA,cAAa,EAAG,EAQzBA,aAAA5yD,UAAA6yD,IAAA,CAA8BC,QAAS,CAACppD,UAAD,CAAarF,IAAb,CAAmByN,UAAnB,CAA+BmG,IAA/B,CAAqC,EAO5E26C,cAAA5yD,UAAA6jC,MAAA;AAAgCkvB,QAAS,CAACrpD,UAAD,CAAarF,IAAb,CAAmByN,UAAnB,CAA+BmG,IAA/B,CAAqC,EAK9E26C,cAAA5yD,UAAAgzD,iBAAA,CAA2CC,QAAS,CAACC,KAAD,CAAQ,EAM5DN,cAAA5yD,UAAAmzD,gBAAA,CAA0CC,QAAS,CAAC1pD,UAAD,CAAarF,IAAb,CAAmByN,UAAnB,CAA+B,EAMlF8gD,cAAA5yD,UAAAqzD,kBAAA,CAA4CC,QAAS,CAAC5pD,UAAD,CAAarF,IAAb,CAAmByN,UAAnB,CAA+B,EAKpF8gD,cAAA5yD,UAAAmS,mBAAA,CAA6CohD,QAAS,CAAC7pD,UAAD,CAAaoI,UAAb,CAAyB,EAI/E8gD,cAAA5yD,UAAAw6C,YAAA,CAAsCgZ,QAAS,CAACnZ,KAAD,CAAQ,EACvD,OAAOuY,cA3CoC,CAAZ,EA14BnC,CAs9BIa,qBAAsC,QAAS,CAAC3+C,MAAD,CAAS,CAWxD2+C,QAASA,qBAAoB,CAAC7G,SAAD,CAAY8G,aAAZ;AAA2BC,gBAA3B,CAA6CC,mBAA7C,CAAkEC,kBAAlE,CAAsFC,aAAtF,CAAqG,CAC9H,IAAI/wC,MAAQjO,MAAA8R,KAAA,CAAY,IAAZ,CAAR7D,EAA6B,IACjCA,MAAA6pC,UAAA,CAAkBA,SAClB7pC,MAAA2wC,cAAA,CAAsBA,aACtB3wC,MAAA4wC,iBAAA,CAAyBA,gBACzB5wC,MAAA6wC,oBAAA,CAA4BA,mBAC5B7wC,MAAA8wC,mBAAA,CAA2BA,kBAC3B9wC,MAAA+wC,cAAA,CAAsBA,aAEtB/wC,MAAA9gB,GAAA,CAAWwxD,oBAAAM,4BAAA,EACXhxC,MAAAo8B,KAAA,CAAat7C,UAAA,CAAW,IAAX,CAAkBkf,KAAA9gB,GAAlB,CAA6B,GAA7B,CAEb8gB,MAAAixC,kBAAA,CAA0B,EAC1BjxC,MAAAkxC,SAAA,CAAiB,EACjBlxC,MAAAmxC,iBAAA,CAAyB,EACzBnxC;KAAAoxC,qBAAA,CAA6B,CAC7BpxC,MAAAqxC,0BAAA,CAAkC,EAClCrxC,MAAAsxC,WAAA,CAAmB,CAAA,CACnBtxC,MAAAuxC,gBAAA,CA3CkBC,GA4ClBxxC,MAAAyxC,mBAAA,CA3C0BC,GA4C1B1xC,MAAA2xC,uBAAA,CAA+B,IAC/B3xC,MAAAg8B,cAAA,CAAsB,IAEtBh8B,MAAA4xC,0BAAA,CAAkC,IAElC5xC,MAAAk6B,SAAA,CAAiB,CAAA,CAEjBl6B,MAAA6xC,eAAA,CAAuB,EACvB7xC,MAAA8xC,eAAA,CAAuB,CAKvB9xC,MAAA+xC,UAAA,CAAkB,IAElB/xC,MAAAgyC,WAAA,CAAmB,IACnBhyC,MAAAiyC,mBAAA,CAA2B,CAAA,CAC3BjyC,MAAAkyC,uBAAA,CAA+B,CAC/BlyC,MAAAmyC,iBAAA,CAAyB,CAAA,CACzBnyC,MAAAoyC,2BAAA,CAAmC,IACnCpyC,MAAAqyC,+BAAA;AAAuC,IACvC,IAAItB,aAAJ,EAAqB,CAAC33D,IAAAiD,UAAA,EAAtB,CACI,KAAU8E,MAAJ,CAAU,gFAAV,CAAN,CAEJ6e,KAAAsyC,iBAAA,CAAuB,CAAvB,CACAvY,kBAAAl+C,YAAA,EAAA2wB,GAAA,CAAmC,SAAnC,CAA8CxM,KAAAuyC,WAA9C,CAAgEvyC,KAAhE,CACA,IAA2C,EAA3C,GAAI6pC,SAAAjgD,KAAAK,QAAA,CAAuB,SAAvB,CAAJ,CACIowC,aAAAx+C,YAAA,EAAA2wB,GAAA,CAA+B,QAA/B,CAAyCxM,KAAAwyC,UAAzC,CAA0DxyC,KAA1D,CAEJ,OAAOA,MAjDuH,CAVlIpjB,OAAAoV,UAAA,CAAkB0+C,oBAAlB,CAAwC3+C,MAAxC,CAmEA2+C,qBAAAzzD,UAAA6uD,YAAA,CAA6C2G,QAAS,CAAC39C,MAAD,CAAS9S,IAAT,CAAe0wD,UAAf,CAA2B,CAC7E,IAAIC,UAAY,EAAE,IAAAb,eACd5F;MAAAA,CAAM,CAAEld,EAAG2jB,SAAL,CAAgBvwD,EAAG0S,MAAnB,CAA2BzS,EAAGL,IAA9B,CACV,KAAAo6C,KAAA,CAAUhjD,IAAAmE,UAAA,CAAe2uD,MAAf,CAAV,CACA9yD,KAAAC,OAAA,CAAY,IAAAi4D,WAAZ,CAA6B,wDAA7B,CACA,KAAAS,UAAAjG,YAAA,CAA2BI,MAA3B,CACIwG,WAAJ,GACI,IAAAb,eAAA,CAAoBc,SAApB,CADJ,CACqCD,UADrC,CAN6E,CAajFhC,qBAAAzzD,UAAA21D,OAAA,CAAwCC,QAAS,CAACjqC,KAAD,CAAQkqC,aAAR,CAAuBjkB,GAAvB,CAA4B9/B,UAA5B,CAAwC,CACrF,IAAIgkB,QAAUnK,KAAAoH,gBAAA,EAAd,CACIrpB,WAAaiiB,KAAAjgB,KAAA3K,SAAA,EACjB,KAAAo+C,KAAA,CAAU,oBAAV,CAAiCz1C,UAAjC,CAA8C,GAA9C,CAAoDosB,OAApD,CACA,KAAAm+B,SAAA,CAAcvqD,UAAd,CAAA,CAA4B,IAAAuqD,SAAA,CAAcvqD,UAAd,CAA5B;AAAyD,EACzDvN,KAAAC,OAAA,CAAYuvB,KAAAC,eAAA,EAAAupB,UAAA,EAAZ,EACI,CAACxpB,KAAAC,eAAA,EAAAub,aAAA,EADL,CAC4C,oDAD5C,CAEAhrC,KAAAC,OAAA,CAAY,CAAC,IAAA63D,SAAA,CAAcvqD,UAAd,CAAA,CAA0BosB,OAA1B,CAAb,CAAiD,8CAAjD,CACIggC,MAAAA,CAAa,CACbhkD,WAAYA,UADC,CAEbkiC,OAAQ6hB,aAFK,CAGblqC,MAAOA,KAHM,CAIbimB,IAAKA,GAJQ,CAMjB,KAAAqiB,SAAA,CAAcvqD,UAAd,CAAA,CAA0BosB,OAA1B,CAAA,CAAqCggC,KACjC,KAAAzB,WAAJ,EACI,IAAA0B,YAAA,CAAiBD,KAAjB,CAhBiF,CA0BzFrC,qBAAAzzD,UAAA+1D,YAAA,CAA6CC,QAAS,CAACF,UAAD,CAAa,CAC/D,IAAI/yC,MAAQ,IAAZ,CACI4I,MAAQmqC,UAAAnqC,MADZ,CAEIjiB;AAAaiiB,KAAAjgB,KAAA3K,SAAA,EAFjB,CAGI+0B,QAAUnK,KAAAoH,gBAAA,EACd,KAAAosB,KAAA,CAAU,YAAV,CAAyBz1C,UAAzB,CAAsC,OAAtC,CAAgDosB,OAAhD,CACA,KAAImgC,IAAM,CAAWC,EAAGxsD,UAAd,CAGNosD,WAAAlkB,IAAJ,GACIqkB,GAAA,EACA,CADWtqC,KAAAiH,YAAA,EACX,CAAAqjC,GAAA,EAAA,CAAWH,UAAAlkB,IAFf,CAIAqkB,IAAA,EAAA,CAAoBH,UAAA9hB,OAAA,EACpB,KAAA6a,YAAA,CAPah3C,GAOb,CAAyBo+C,GAAzB,CAA8B,QAAS,CAACjzD,OAAD,CAAU,CAC7C,IAAI+tD,QAAU/tD,OAAA,EAAd,CACI0yC,OAAS1yC,OAAA,EAEbywD,qBAAA0C,sBAAA,CAA2CpF,OAA3C,CAAoDplC,KAApD,CAGA,KAFwB5I,KAAAkxC,SAAA,CAAevqD,UAAf,CAExB,EAFsDqZ,KAAAkxC,SAAA,CAAevqD,UAAf,CAAA,CAA2BosB,OAA3B,CAEtD,IAA0BggC,UAA1B,GACI/yC,KAAAo8B,KAAA,CAAW,iBAAX,CAA8Bn8C,OAA9B,CAII8O,CAHW,IAGXA,GAHA4jC,MAGA5jC,EAFAiR,KAAAqzC,cAAA,CAAoB1sD,UAApB;AAAgCosB,OAAhC,CAEAhkB,CAAAgkD,UAAAhkD,WALR,EAMQgkD,UAAAhkD,WAAA,CAAsB4jC,MAAtB,CAA8Bqb,OAA9B,CAbqC,CAAjD,CAd+D,CAqCnE0C,qBAAA0C,sBAAA,CAA6CE,QAAS,CAACtF,OAAD,CAAUplC,KAAV,CAAiB,CAC/DolC,OAAJ,EAAkC,QAAlC,GAAe,MAAOA,QAAtB,EAA8C50D,IAAAS,SAAA,CAAcm0D,OAAd,CAAuB,GAAvB,CAA9C,GACQuF,OACJ,CADen6D,IAAA2lB,QAAA,CAAaivC,OAAb,CAAsB,GAAtB,CACf,CAAIz0D,KAAA4G,QAAA,CAAcozD,OAAd,CAAJ,EAA+B,CAACA,OAAAtpD,QAAA,CAAiB,UAAjB,CAAhC,GACQupD,OAOJ,CAPgB,eAOhB,CANI5qC,KAAAC,eAAA,EAAAC,SAAA,EAAA9qB,SAAA,EAMJ,CAFI,GAEJ,CAAAoD,IAAA,CAAK,+DAAL,EACK,0CADL,CACkDoyD,OADlD,CAC8D,MAD9D,GADgB5qC,KAAAjgB,KAAA3K,SAAAy1D,EAChB;AAEiB,iDAFjB,EARJ,CAFJ,CADmE,CAoBvE/C,qBAAAzzD,UAAAgzD,iBAAA,CAAkDyD,QAAS,CAACvD,KAAD,CAAQ,CAC/D,IAAA6B,WAAA,CAAkB7B,KAClB,KAAA/T,KAAA,CAAU,sBAAV,CACI,KAAA4V,WAAJ,CACI,IAAA2B,QAAA,EADJ,CAMQ,IAAArC,WANR,EAOQ,IAAAxF,YAAA,CAAiB,QAAjB,CAA2B,EAA3B,CAA+B,QAAS,EAAG,EAA3C,CAGR,KAAA8H,uCAAA,CAA4CzD,KAA5C,CAb+D,CAmBnEO,qBAAAzzD,UAAA22D,uCAAA,CAAwEC,QAAS,CAACC,UAAD,CAAa,CAI1F,GADuBA,UACvB,EAD2D,EAC3D,GADqCA,UAAAn5D,OACrC,EAAwBvB,IAAA26D,QAAA,CAAaD,UAAb,CAAxB,CACI,IAAA1X,KAAA,CAAU,+DAAV,CACA;AAAA,IAAAqV,mBAAA,CAzMyBuC,GAmM6D,CAa9FtD,qBAAAzzD,UAAA02D,QAAA,CAAyCM,QAAS,EAAG,CACjD,IAAIj0C,MAAQ,IACZ,IAAI,IAAAsxC,WAAJ,EAAuB,IAAAU,WAAvB,CAAwC,CACpC,IAAIkC,QAAU,IAAAlC,WAAd,CACImC,WAAa/6D,IAAAg7D,cAAA,CAAmBF,OAAnB,CAAA,CAA8B,MAA9B,CAAuC,OADxD,CAEIG,YAAc,CAAEC,KAAMJ,OAAR,CACS,KAA3B,GAAI,IAAAnD,cAAJ,CACIsD,WAAA,OADJ,CAC4B,CAAA,CAD5B,CAGuC,QAHvC,GAGS,MAAO,KAAAtD,cAHhB,GAIIsD,WAAA,QAJJ,CAI6B,IAAAtD,cAJ7B,CAMA,KAAAjF,YAAA,CAAiBqI,UAAjB,CAA6BE,WAA7B,CAA0C,QAAS,CAACE,GAAD,CAAM,CACrD,IAAI5hB,OAAS4hB,GAAA,EACTjzD,IAAAA,CAAOizD,GAAA,EAAPjzD,EAA4B,OAChC,IAAI0e,KAAAgyC,WAAJ,GAAyBkC,OAAzB,CACI,GAAe,IAAf,GAAIvhB,MAAJ,CACI3yB,KAAAkyC,uBAAA;AAA+B,CADnC,KAKIlyC,MAAAw0C,eAAA,CAAqB7hB,MAArB,CAA6BrxC,GAA7B,CAT6C,CAAzD,CAVoC,CAFS,CA8BrDovD,qBAAAzzD,UAAAw3D,SAAA,CAA0CC,QAAS,CAAC9rC,KAAD,CAAQimB,GAAR,CAAa,CAC5D,IAAIloC,WAAaiiB,KAAAjgB,KAAA3K,SAAA,EAAjB,CACI+0B,QAAUnK,KAAAoH,gBAAA,EACd,KAAAosB,KAAA,CAAU,sBAAV,CAAmCz1C,UAAnC,CAAgD,GAAhD,CAAsDosB,OAAtD,CACA35B,KAAAC,OAAA,CAAYuvB,KAAAC,eAAA,EAAAupB,UAAA,EAAZ,EACI,CAACxpB,KAAAC,eAAA,EAAAub,aAAA,EADL,CAC4C,sDAD5C,CAEa,KAAAivB,cAAAT,CAAmBjsD,UAAnBisD,CAA+B7/B,OAA/B6/B,CACb,EAAc,IAAAtB,WAAd,EACI,IAAAqD,cAAA,CAAmBhuD,UAAnB,CAA+BosB,OAA/B,CAAwCnK,KAAAiH,YAAA,EAAxC,CAA6Dgf,GAA7D,CARwD,CAWhE6hB,qBAAAzzD,UAAA03D,cAAA;AAA+CC,QAAS,CAACjuD,UAAD,CAAaosB,OAAb,CAAsB8hC,QAAtB,CAAgChmB,GAAhC,CAAqC,CACzF,IAAAuN,KAAA,CAAU,cAAV,CAA2Bz1C,UAA3B,CAAwC,OAAxC,CAAkDosB,OAAlD,CACImgC,WAAAA,CAAM,CAAWC,EAAGxsD,UAAd,CAGNkoC,IAAJ,GACIqkB,UAAA,EACA,CADW2B,QACX,CAAA3B,UAAA,EAAA,CAAWrkB,GAFf,CAIA,KAAAid,YAAA,CANah3C,GAMb,CAAyBo+C,UAAzB,CATyF,CAc7FxC,qBAAAzzD,UAAAmzD,gBAAA,CAAiD0E,QAAS,CAACnuD,UAAD,CAAarF,IAAb,CAAmByN,UAAnB,CAA+B,CACjF,IAAAuiD,WAAJ,CACI,IAAAyD,kBAAA,CAAuB,GAAvB,CAA4BpuD,UAA5B,CAAwCrF,IAAxC,CAA8CyN,UAA9C,CADJ,CAII,IAAAsiD,0BAAA52D,KAAA,CAAoC,CAChCkM,WAAYA,UADoB,CAEhCmO,OAAQ,GAFwB,CAGhCxT,KAAMA,IAH0B,CAIhCyN,WAAYA,UAJoB,CAApC,CALiF,CAgBzF2hD,qBAAAzzD,UAAAqzD,kBAAA;AAAmD0E,QAAS,CAACruD,UAAD,CAAarF,IAAb,CAAmByN,UAAnB,CAA+B,CACnF,IAAAuiD,WAAJ,CACI,IAAAyD,kBAAA,CAAuB,IAAvB,CAA6BpuD,UAA7B,CAAyCrF,IAAzC,CAA+CyN,UAA/C,CADJ,CAII,IAAAsiD,0BAAA52D,KAAA,CAAoC,CAChCkM,WAAYA,UADoB,CAEhCmO,OAAQ,IAFwB,CAGhCxT,KAAMA,IAH0B,CAIhCyN,WAAYA,UAJoB,CAApC,CALmF,CAgB3F2hD,qBAAAzzD,UAAAmS,mBAAA,CAAoD6lD,QAAS,CAACtuD,UAAD,CAAaoI,UAAb,CAAyB,CAC9E,IAAAuiD,WAAJ,CACI,IAAAyD,kBAAA,CAAuB,IAAvB,CAA6BpuD,UAA7B,CAAyC,IAAzC,CAA+CoI,UAA/C,CADJ,CAII,IAAAsiD,0BAAA52D,KAAA,CAAoC,CAChCkM,WAAYA,UADoB,CAEhCmO,OAAQ,IAFwB,CAGhCxT,KAAM,IAH0B,CAIhCyN,WAAYA,UAJoB,CAApC,CAL8E,CAatF2hD,qBAAAzzD,UAAA83D,kBAAA;AAAmDG,QAAS,CAACpgD,MAAD,CAASnO,UAAT,CAAqBrF,IAArB,CAA2ByN,UAA3B,CAAuC,CAC3FomD,UAAAA,CAAU,CAAWhC,EAAGxsD,UAAd,CAAmCi8C,EAAGthD,IAAtC,CACd,KAAA86C,KAAA,CAAU,eAAV,CAA4BtnC,MAA5B,CAAoCqgD,UAApC,CACA,KAAArJ,YAAA,CAAiBh3C,MAAjB,CAAyBqgD,UAAzB,CAAkC,QAAS,CAACC,QAAD,CAAW,CAC9CrmD,UAAJ,EACI9M,UAAA,CAAW,QAAS,EAAG,CACnB8M,UAAA,CAAWqmD,QAAA,EAAX,CAAqCA,QAAA,EAArC,CADmB,CAAvB,CAEG,CAFH,CAF8C,CAAtD,CAH+F,CAcnG1E,qBAAAzzD,UAAA6yD,IAAA,CAAqCuF,QAAS,CAAC1uD,UAAD,CAAarF,IAAb,CAAmByN,UAAnB,CAA+BmG,IAA/B,CAAqC,CAC/E,IAAAogD,YAAA,CAAiB,GAAjB,CAAsB3uD,UAAtB,CAAkCrF,IAAlC,CAAwCyN,UAAxC,CAAoDmG,IAApD,CAD+E,CAMnFw7C,qBAAAzzD,UAAA6jC,MAAA,CAAuCy0B,QAAS,CAAC5uD,UAAD,CAAarF,IAAb,CAAmByN,UAAnB,CAA+BmG,IAA/B,CAAqC,CACjF,IAAAogD,YAAA,CAAiB,GAAjB,CAAsB3uD,UAAtB,CAAkCrF,IAAlC,CAAwCyN,UAAxC;AAAoDmG,IAApD,CADiF,CAGrFw7C,qBAAAzzD,UAAAq4D,YAAA,CAA6CE,QAAS,CAAC1gD,MAAD,CAASnO,UAAT,CAAqBrF,IAArB,CAA2ByN,UAA3B,CAAuCmG,IAAvC,CAA6C,CAC3FigD,IAAAA,CAAU,CACDhC,EAAGxsD,UADF,CAEDi8C,EAAGthD,IAFF,CAIDiM,KAAAA,EAAb,GAAI2H,IAAJ,GACIigD,IAAA,EADJ,CAC4BjgD,IAD5B,CAGA,KAAAi8C,iBAAA12D,KAAA,CAA2B,CACvBqa,OAAQA,MADe,CAEvBqgD,QAASA,IAFc,CAGvBpmD,WAAYA,UAHW,CAA3B,CAKA,KAAAqiD,qBAAA,EACIv8C,OAAAA,CAAQ,IAAAs8C,iBAAAx2D,OAARka,CAAuC,CACvC,KAAAy8C,WAAJ,CACI,IAAAmE,SAAA,CAAc5gD,MAAd,CADJ,CAII,IAAAunC,KAAA,CAAU,iBAAV,CAA8Bz1C,UAA9B,CAnB2F,CAsBnG+pD,qBAAAzzD,UAAAw4D,SAAA,CAA0CC,QAAS,CAAC7gD,KAAD,CAAQ,CACvD,IAAImL,MAAQ,IAAZ,CACIlL,OAAS,IAAAq8C,iBAAA,CAAsBt8C,KAAtB,CAAAC,OADb,CAEIqgD;AAAU,IAAAhE,iBAAA,CAAsBt8C,KAAtB,CAAAsgD,QAFd,CAGIpmD,WAAa,IAAAoiD,iBAAA,CAAsBt8C,KAAtB,CAAA9F,WACjB,KAAAoiD,iBAAA,CAAsBt8C,KAAtB,CAAA8gD,OAAA,CAAsC,IAAArE,WACtC,KAAAxF,YAAA,CAAiBh3C,MAAjB,CAAyBqgD,OAAzB,CAAkC,QAAS,CAACl1D,OAAD,CAAU,CACjD+f,KAAAo8B,KAAA,CAAWtnC,MAAX,CAAoB,WAApB,CAAiC7U,OAAjC,CACA,QAAO+f,KAAAmxC,iBAAA,CAAuBt8C,KAAvB,CACPmL,MAAAoxC,qBAAA,EAEmC,EAAnC,GAAIpxC,KAAAoxC,qBAAJ,GACIpxC,KAAAmxC,iBADJ,CAC6B,EAD7B,CAGIpiD,WAAJ,EACIA,UAAA,CAAW9O,OAAA,EAAX,CAAoCA,OAAA,EAApC,CAT6C,CAArD,CANuD,CAqB3DywD,qBAAAzzD,UAAAw6C,YAAA,CAA6Cme,QAAS,CAACte,KAAD,CAAQ,CAC1D,IAAIt3B,MAAQ,IAER,KAAAsxC,WAAJ,GACQ6D,KAEJ,CAFc,CAAe7xD,EAAGg0C,KAAlB,CAEd;AADA,IAAA8E,KAAA,CAAU,aAAV,CAAyB+Y,KAAzB,CACA,CAAA,IAAArJ,YAAA,CAA2B,GAA3B,CAAgCqJ,KAAhC,CAAyC,QAAS,CAACz9C,MAAD,CAAS,CAExC,IAAf,GADaA,MAAAi7B,EACb,EAEI3yB,KAAAo8B,KAAA,CAAW,aAAX,CAA0B,uBAA1B,CADkB1kC,MAAAm+C,EAClB,CAJmD,CAA3D,CAHJ,CAH0D,CAmB9DnF,qBAAAzzD,UAAAywD,eAAA,CAAgDoI,QAAS,CAAC71D,OAAD,CAAU,CAC/D,GAAI,GAAJ,EAAWA,QAAX,CAAoB,CAEhB,IAAAm8C,KAAA,CAAU,eAAV,CAA4BhjD,IAAAmE,UAAA,CAAe0C,OAAf,CAA5B,CACA,KAAI81D,OAAS91D,OAAA,EAAb,CACIyyD,WAAa,IAAAb,eAAA,CAAoBkE,MAApB,CACbrD,WAAJ,GACI,OAAO,IAAAb,eAAA,CAAoBkE,MAApB,CACP,CAAArD,UAAA,CAAWzyD,OAAA,EAAX,CAFJ,CALgB,CAApB,IAUK,CAAA,GAAI,OAAJ,EAAeA,QAAf,CACD,KAAM,oCAAN,CAA6CA,OAAA,MAA7C;AAEC,GAAI,GAAJ,EAAWA,QAAX,CAED,IAAA+1D,YAAA,CAAiB/1D,OAAA,EAAjB,CAA+BA,OAAA,EAA/B,CALC,CAX0D,CAmBnEywD,qBAAAzzD,UAAA+4D,YAAA,CAA6CC,QAAS,CAACnhD,MAAD,CAAS9S,IAAT,CAAe,CACjE,IAAAo6C,KAAA,CAAU,qBAAV,CAAiCtnC,MAAjC,CAAyC9S,IAAzC,CACA,IAAe,GAAf,GAAI8S,MAAJ,CACI,IAAA67C,cAAA,CAAmB3uD,IAAA,EAAnB,CAAuCA,IAAA,EAAvC,CACY,CAAA,CADZ,CACmBA,IAAA,EADnB,CADJ,KAGK,IAAe,GAAf,GAAI8S,MAAJ,CACD,IAAA67C,cAAA,CAAmB3uD,IAAA,EAAnB,CAAuCA,IAAA,EAAvC,CACa,CAAA,CADb,CACmBA,IAAA,EADnB,CADC,KAGA,IAAe,GAAf,GAAI8S,MAAJ,CACD,IAAAohD,iBAAA,CAAsBl0D,IAAA,EAAtB,CAA0CA,IAAA,EAA1C,CADC,KAEA,IAAe,IAAf,GAAI8S,MAAJ,CACD,IAAA0/C,eAAA,CAAoBxyD,IAAA,EAApB,CAA+CA,IAAA,EAA/C,CADC,KAEA,IAAe,IAAf,GAAI8S,MAAJ,CACD,IAAAqhD,uBAAA,CAA4Bn0D,IAA5B,CADC,KAGDf,eAAA,CAAM,4CAAN;AACI7H,IAAAmE,UAAA,CAAeuX,MAAf,CADJ,CAEI,oCAFJ,CAf6D,CAmBrE47C,qBAAAzzD,UAAA6sD,SAAA,CAA0CsM,QAAS,CAAC1H,SAAD,CAAYG,SAAZ,CAAuB,CACtE,IAAAzS,KAAA,CAAU,kBAAV,CACA,KAAAkV,WAAA,CAAkB,CAAA,CAClB,KAAAe,+BAAA,CAAsCgE,CAAA,IAAIC,IAAJD,SAAA,EACtC,KAAAE,iBAAA,CAAsB7H,SAAtB,CACA,KAAA1S,cAAA,CAAqB6S,SACjB,KAAAsD,iBAAJ,EACI,IAAAqE,kBAAA,EAEJ,KAAAC,cAAA,EACA,KAAAtE,iBAAA,CAAwB,CAAA,CACxB,KAAAvB,iBAAA,CAAsB,CAAA,CAAtB,CAXsE,CAa1EF,qBAAAzzD,UAAAq1D,iBAAA,CAAkDoE,QAAS,CAAClxD,OAAD,CAAU,CACjE,IAAIwa,MAAQ,IACZ5mB;IAAAC,OAAA,CAAY,CAAC,IAAA04D,UAAb,CAA6B,wDAA7B,CACI,KAAAH,0BAAJ,EACInU,YAAA,CAAa,IAAAmU,0BAAb,CAIJ,KAAAA,0BAAA,CAAiC3vD,UAAA,CAAW,QAAS,EAAG,CACpD+d,KAAA4xC,0BAAA,CAAkC,IAClC5xC,MAAA22C,qBAAA,EAFoD,CAAvB,CAG9B7yD,IAAAK,MAAA,CAAWqB,OAAX,CAH8B,CARgC,CAiBrEkrD,qBAAAzzD,UAAAs1D,WAAA,CAA4CqE,QAAS,CAACltB,OAAD,CAAU,CAEvDA,OAAJ,EACI,CAAC,IAAAwQ,SADL,EAEI,IAAAqX,gBAFJ,GAE6B,IAAAE,mBAF7B,GAGI,IAAArV,KAAA,CAAU,yCAAV,CAEA,CADA,IAAAmV,gBACA;AAtdcC,GAsdd,CAAK,IAAAO,UAAL,EACI,IAAAO,iBAAA,CAAsB,CAAtB,CANR,CASA,KAAApY,SAAA,CAAgBxQ,OAX2C,CAa/DgnB,qBAAAzzD,UAAAu1D,UAAA,CAA2CqE,QAAS,CAACC,MAAD,CAAS,CACrDA,MAAJ,EACI,IAAA1a,KAAA,CAAU,sBAAV,CAEA,CADA,IAAAmV,gBACA,CAhecC,GAged,CAAK,IAAAO,UAAL,EACI,IAAAO,iBAAA,CAAsB,CAAtB,CAJR,GAQI,IAAAlW,KAAA,CAAU,4CAAV,CACA,CAAI,IAAA2V,UAAJ,EACI,IAAAA,UAAArS,MAAA,EAVR,CADyD,CAe7DgR,qBAAAzzD,UAAA85D,sBAAA,CAAuDC,QAAS,EAAG,CAC/D,IAAA5a,KAAA,CAAU,0BAAV,CACA,KAAAkV,WAAA,CAAkB,CAAA,CAClB,KAAAS,UAAA,CAAiB,IAEjB,KAAAkF,wBAAA,EAEA;IAAApF,eAAA,CAAsB,EACtB,IAAI,IAAAqF,iBAAA,EAAJ,CAA6B,CACpB,IAAAhd,SAAL,CAKS,IAAAmY,+BALT,GAhfwB8E,GA0fpB,CAHoCd,CAAA,IAAIC,IAAJD,SAAA,EAGpC,CAH2D,IAAAhE,+BAG3D,GADI,IAAAd,gBACJ,CA9fUC,GA8fV,EAAA,IAAAa,+BAAA,CAAsC,IAV1C,GACI,IAAAjW,KAAA,CAAU,4CAAV,CAEA,CADA,IAAAmV,gBACA,CADuB,IAAAE,mBACvB,CAAA,IAAAW,2BAAA,CAAkCiE,CAAA,IAAIC,IAAJD,SAAA,EAHtC,CAYA,KAAIe,4BAA8Bf,CAAA,IAAIC,IAAJD,SAAA,EAA9Be,CAAqD,IAAAhF,2BACrDiF,4BAAAA;AAAiBvzD,IAAAiF,IAAA,CAAS,CAAT,CAAY,IAAAwoD,gBAAZ,CAAmC6F,2BAAnC,CACrBC,4BAAA,EAAiBvzD,IAAA+M,OAAA,EACjB,KAAAurC,KAAA,CAAU,yBAAV,CAAsCib,2BAAtC,CAAuD,IAAvD,CACA,KAAA/E,iBAAA,CAAsB+E,2BAAtB,CAEA,KAAA9F,gBAAA,CAAuBztD,IAAAI,IAAA,CAAS,IAAAutD,mBAAT,CAngBF6F,GAmgBE,CAAkC,IAAA/F,gBAAlC,CAnBE,CAqB7B,IAAAX,iBAAA,CAAsB,CAAA,CAAtB,CA7B+D,CA+BnEF,qBAAAzzD,UAAA05D,qBAAA,CAAsDY,QAAS,EAAG,CAC9D,GAAI,IAAAL,iBAAA,EAAJ,CAA6B,CACzB,IAAA9a,KAAA,CAAU,6BAAV,CACA,KAAAgW,2BAAA,CAAkCiE,CAAA,IAAIC,IAAJD,SAAA,EAClC;IAAAhE,+BAAA,CAAsC,IACtC,KAAImF,gBAAkB,IAAA9J,eAAA7sD,KAAA,CAAyB,IAAzB,CAAtB,CACI42D,UAAY,IAAA3N,SAAAjpD,KAAA,CAAmB,IAAnB,CADhB,CAEI62D,eAAiB,IAAAX,sBAAAl2D,KAAA,CAAgC,IAAhC,CAFrB,CAGI82D,SAAW,IAAAz4D,GAAXy4D,CAAqB,GAArBA,CAA2BjH,oBAAAkH,kBAAA,EAH/B,CAII/lC,OAAS,IAJb,CAKIgmC,gBAAkB,IAAA7b,cALtB,CAMI8b,WAAa,CAAA,CANjB,CAOIC,aAAe,IAPnB,CAQIC,UAAYA,QAAS,EAAG,CACpBD,YAAJ,CACIA,YAAArY,MAAA,EADJ,EAIIoY,UACA,CADa,CAAA,CACb,CAAAJ,cAAA,EALJ,CADwB,CAa5B,KAAA3F,UAAA,CAAiB,CACbrS,MAAOsY,SADM,CAEblM,YANgBmM,QAAS,CAAC/L,GAAD,CAAM,CAC/B9yD,IAAAC,OAAA,CAAY0+D,YAAZ,CAA0B,wDAA1B,CACAA;YAAAjM,YAAA,CAAyBI,GAAzB,CAF+B,CAIlB,CAIjB,KAAIxX,aAAe,IAAAud,mBACnB,KAAAA,mBAAA,CAA0B,CAAA,CAE1B,KAAAnB,mBAAAtc,SAAA,CACcE,YADd,CAAAC,KAAA,CAEU,QAAS,CAACj9B,MAAD,CAAS,CACnBogD,UAAL,CAUIl3D,GAAA,CAAI,uCAAJ,CAVJ,EACIA,GAAA,CAAI,4CAAJ,CAEA,CADAixB,MAAAmgC,WACA,CADoBt6C,MACpB,EAD8BA,MAAAwgD,YAC9B,CAAAH,YAAA,CAAe,IAAInO,UAAJ,CAAe+N,QAAf,CAAyB9lC,MAAAg4B,UAAzB,CAA2C2N,eAA3C,CAA4DC,SAA5D,CAAuEC,cAAvE,CACD,QAAS,CAAC9kB,MAAD,CAAS,CAC5BxxC,IAAA,CAAKwxC,MAAL,CAAc,IAAd,CAAqB/gB,MAAAg4B,UAAA7rD,SAAA,EAArB,CAAmD,GAAnD,CACA6zB,OAAAsmC,UAAA,CA/iBWC,aA+iBX,CAF4B,CADjB;AAIZP,eAJY,CAHnB,CADwB,CAF5B,CAAAljB,KAAA,CAgBU,IAhBV,CAgBgB,QAAS,CAAC1zC,KAAD,CAAQ,CAC7B4wB,MAAAuqB,KAAA,CAAY,uBAAZ,CAAsCn7C,KAAtC,CACK62D,WAAL,GACQ1+D,IAAAosD,UAAAC,WAMJ,EAFIrkD,IAAA,CAAKH,KAAL,CAEJ,CAAA+2D,SAAA,EAPJ,CAF6B,CAhBjC,CAhCyB,CADiC,CAkElEtH,qBAAAzzD,UAAAk7D,UAAA,CAA2CE,QAAS,CAACzlB,MAAD,CAAS,CACzDhyC,GAAA,CAAI,sCAAJ,CAA6CgyC,MAA7C,CACA,KAAAqe,kBAAA,CAAuBre,MAAvB,CAAA,CAAiC,CAAA,CACjC,IAAI,IAAAmf,UAAJ,CACI,IAAAA,UAAArS,MAAA,EADJ,KAQI,IAJI,IAAAkS,0BAIAN,GAHA7T,YAAA,CAAa,IAAAmU,0BAAb,CACA,CAAA,IAAAA,0BAAA,CAAiC,IAEjCN,EAAA,IAAAA,WAAJ,CACI,IAAAyF,sBAAA,EAZiD,CAmB7DrG;oBAAAzzD,UAAAq7D,OAAA,CAAwCC,QAAS,CAAC3lB,MAAD,CAAS,CACtDhyC,GAAA,CAAI,kCAAJ,CAAyCgyC,MAAzC,CACA,QAAO,IAAAqe,kBAAA,CAAuBre,MAAvB,CACHx5C,KAAAa,QAAA,CAAa,IAAAg3D,kBAAb,CAAJ,GACI,IAAAM,gBACA,CApmBcC,GAomBd,CAAK,IAAAO,UAAL,EACI,IAAAO,iBAAA,CAAsB,CAAtB,CAHR,CAHsD,CAU1D5B,qBAAAzzD,UAAAs5D,iBAAA,CAAkDiC,QAAS,CAAC9J,SAAD,CAAY,CACvDA,SAARhY,EAAoB2f,CAAA,IAAIC,IAAJD,SAAA,EACxB,KAAAxF,oBAAA,CAAyB,CAAE4H,iBAAkB/hB,SAApB,CAAzB,CAFmE,CAIvEga,qBAAAzzD,UAAAg6D,wBAAA,CAAyDyB,QAAS,EAAG,CACjE,IAAK,IAAIx4D,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAAixD,iBAAAx2D,OAApB,CAAkDuF,CAAA,EAAlD,CAAuD,CACnD,IAAI4vD;AAAM,IAAAqB,iBAAA,CAAsBjxD,CAAtB,CACV,IAAI4vD,GAAJ,EAAoB,GAApB,EAA2BA,IAAAqF,QAA3B,EAA0CrF,GAAA6F,OAA1C,CAAsD,CAClD,GAAI7F,GAAA/gD,WAAJ,CACI+gD,GAAA/gD,WAAA,CAAe,YAAf,CACJ,QAAO,IAAAoiD,iBAAA,CAAsBjxD,CAAtB,CACP,KAAAkxD,qBAAA,EAJkD,CAFH,CAUrB,CAAlC,GAAI,IAAAA,qBAAJ,GACI,IAAAD,iBADJ,CAC4B,EAD5B,CAXiE,CAmBrET,qBAAAzzD,UAAAi5D,iBAAA,CAAkDyC,QAAS,CAAChyD,UAAD,CAAaiiB,KAAb,CAAoB,CAOvEmK,KAAA,CAJCnK,KAAL,CAIcA,KAAA3I,IAAA,CAAU,QAAS,CAAC24C,CAAD,CAAI,CAAE,MAAO91D,kBAAA,CAAkB81D,CAAlB,CAAT,CAAvB,CAAAj0D,KAAA,CAA8D,GAA9D,CAJd,CACc,SAMd,KADIiuD,UACJ,CADa,IAAAS,cAAA,CAAmB1sD,UAAnB,CAA+BosB,KAA/B,CACb,GAAc6/B,UAAA7jD,WAAd,CACI6jD,UAAA7jD,WAAA,CAAkB,mBAAlB,CAXuE,CAmB/E2hD;oBAAAzzD,UAAAo2D,cAAA,CAA+CwF,QAAS,CAAClyD,UAAD,CAAaosB,OAAb,CAAsB,CACtE+lC,UAAAA,CAAuB96D,CAAA,IAAIyH,IAAJ,CAASkB,UAAT,CAAA3I,UAAA,EAE3B,IAA4CuP,IAAAA,EAA5C,GAAI,IAAA2jD,SAAA,CAAc4H,UAAd,CAAJ,CAAuD,CACnD,IAAAlG,OAAS,IAAA1B,SAAA,CAAc4H,UAAd,CAAA,CAAoC/lC,OAApC,CACT,QAAO,IAAAm+B,SAAA,CAAc4H,UAAd,CAAA,CAAoC/lC,OAApC,CACoD,EAA3D,GAAI35B,IAAAkxB,SAAA,CAAc,IAAA4mC,SAAA,CAAc4H,UAAd,CAAd,CAAJ,EACI,OAAO,IAAA5H,SAAA,CAAc4H,UAAd,CAJwC,CAAvD,IASIlG,OAAA,CAASrlD,IAAAA,EAEb,OAAOqlD,OAdmE,CAgB9ElC,qBAAAzzD,UAAAu3D,eAAA,CAAgDuE,QAAS,CAACC,UAAD,CAAaC,WAAb,CAA0B,CAC/Er4D,GAAA,CAAI,sBAAJ,CAA6Bo4D,UAA7B,CAA0C,GAA1C,CAAgDC,WAAhD,CACA,KAAAjH,WAAA;AAAkB,IAClB,KAAAC,mBAAA,CAA0B,CAAA,CAC1B,KAAAF,UAAArS,MAAA,EACA,IAAmB,eAAnB,GAAIsZ,UAAJ,EAAqD,mBAArD,GAAsCA,UAAtC,CAII,IAAA9G,uBAAA,EACA,CAtqBuBgH,CAsqBvB,EAAI,IAAAhH,uBAAJ,GAEI,IAAAX,gBAGA,CAhrBqByC,GAgrBrB,CAAA,IAAAlD,mBAAA7b,sBAAA,EALJ,CAV2E,CAmBnFyb,qBAAAzzD,UAAAk5D,uBAAA,CAAwDgD,QAAS,CAACn3D,IAAD,CAAO,CAChE,IAAA2vD,uBAAJ,CACI,IAAAA,uBAAA,CAA4B3vD,IAA5B,CADJ,CAIQ,KAJR,EAIiBA,KAJjB,EAKQo3D,OAAAx4D,IAAA,CAAY,YAAZ,CAA2BoB,IAAA,IAAAmK,QAAA,CAAoB,IAApB,CAA0B,cAA1B,CAA3B,CAN4D,CAUxEukD,qBAAAzzD,UAAAw5D,cAAA;AAA+C4C,QAAS,EAAG,CACvD,IAAIr5C,MAAQ,IAEZ,KAAA2zC,QAAA,EAGAv6D,KAAAM,QAAA,CAAa,IAAAw3D,SAAb,CAA4B,QAAS,CAACvqD,UAAD,CAAaorC,OAAb,CAAsB,CACvD34C,IAAAM,QAAA,CAAaq4C,OAAb,CAAsB,QAAS,CAACp4C,GAAD,CAAMo5D,UAAN,CAAkB,CAC7C/yC,KAAAgzC,YAAA,CAAkBD,UAAlB,CAD6C,CAAjD,CADuD,CAA3D,CAKA,KAAK,IAAI7yD,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAAixD,iBAAAx2D,OAApB,CAAkDuF,CAAA,EAAlD,CACQ,IAAAixD,iBAAA,CAAsBjxD,CAAtB,CAAJ,EACI,IAAAu1D,SAAA,CAAcv1D,CAAd,CAER,KAAA,CAAO,IAAAmxD,0BAAA12D,OAAP,CAAA,CACQw6D,CACJ,CADc,IAAA9D,0BAAAtO,MAAA,EACd,CAAA,IAAAgS,kBAAA,CAAuBI,CAAArgD,OAAvB,CAAuCqgD,CAAAxuD,WAAvC,CAA2DwuD,CAAA7zD,KAA3D,CAAyE6zD,CAAApmD,WAAzE,CAjBmD,CAwB3D2hD,qBAAAzzD,UAAAu5D,kBAAA,CAAmD8C,QAAS,EAAG,CAC3D,IAAIhiB,MAAQ,EAAZ,CACIiiB;AAAa,IACbngE,KAAAosD,UAAAC,WAAJ,CACI8T,UADJ,CACiB,YADjB,CAGSngE,IAAAosD,UAAAgU,YAHT,GAIID,UAJJ,CAIiB,MAJjB,CAMAjiB,MAAA,CAAM,MAAN,CAAeiiB,UAAf,CAA4B,GAA5B,CAAkC98D,QAAA6oD,YAAAn5C,QAAA,CAA6B,KAA7B,CAAoC,GAApC,CAAlC,CAAA,CAA8E,CAC1E/S,KAAAmhD,gBAAA,EAAJ,CACIjD,KAAA,CAAM,mBAAN,CADJ,CACiC,CADjC,CAGSl+C,IAAAqgE,cAAA,EAHT,GAIIniB,KAAA,CAAM,uBAAN,CAJJ,CAIqC,CAJrC,CAMA,KAAAG,YAAA,CAAiBH,KAAjB,CAhB2D,CAsB/DoZ,qBAAAzzD,UAAAi6D,iBAAA,CAAkDwC,QAAS,EAAG,CAC1D,IAAI5C,OAASzc,aAAAx+C,YAAA,EAAA6+C,gBAAA,EACb,OAAOthD,KAAAa,QAAA,CAAa,IAAAg3D,kBAAb,CAAP,EAA+C6F,MAFW,CAO9DpG,qBAAAM,4BAAA;AAAmD,CAMnDN,qBAAAkH,kBAAA,CAAyC,CACzC,OAAOlH,qBA9uBiD,CAAlB,CA+uBxCb,aA/uBwC,CAt9B1C,CA4tDI8J,mBAAoC,QAAS,CAAC5nD,MAAD,CAAS,CAQtD4nD,QAASA,mBAAkB,CAAC9P,SAAD,CAAY8G,aAAZ,CAA2BG,kBAA3B,CAA+C,CACtE,IAAI9wC,MAAQjO,MAAA8R,KAAA,CAAY,IAAZ,CAAR7D,EAA6B,IACjCA,MAAA6pC,UAAA,CAAkBA,SAClB7pC,MAAA2wC,cAAA,CAAsBA,aACtB3wC,MAAA8wC,mBAAA,CAA2BA,kBAE3B9wC,MAAAo8B,KAAA,CAAat7C,UAAA,CAAW,SAAX,CAObkf,MAAAkxC,SAAA,CAAiB,EACjB,OAAOlxC,MAd+D,CAP1EpjB,OAAAoV,UAAA,CAAkB2nD,kBAAlB,CAAsC5nD,MAAtC,CAuBA4nD,mBAAA18D,UAAAw6C,YAAA,CAA2CmiB,QAAS,CAACtiB,KAAD,CAAQ,CACxD,KAAUn2C,MAAJ,CAAU,yBAAV,CAAN;AADwD,CAS5Dw4D,mBAAAE,aAAA,CAAkCC,QAAS,CAAClxC,KAAD,CAAQimB,GAAR,CAAa,CACpD,GAAYthC,IAAAA,EAAZ,GAAIshC,GAAJ,CACI,MAAO,MAAP,CAAgBA,GAGhBz1C,KAAAC,OAAA,CAAYuvB,KAAAC,eAAA,EAAAupB,UAAA,EAAZ,CAAgD,gDAAhD,CACA,OAAOxpB,MAAAjgB,KAAA3K,SAAA,EANyC,CAUxD27D,mBAAA18D,UAAA21D,OAAA,CAAsCmH,QAAS,CAACnxC,KAAD,CAAQkqC,aAAR,CAAuBjkB,GAAvB,CAA4B9/B,UAA5B,CAAwC,CACnF,IAAIiR,MAAQ,IAAZ,CACIrZ,WAAaiiB,KAAAjgB,KAAA3K,SAAA,EACjB,KAAAo+C,KAAA,CAAU,oBAAV,CAAiCz1C,UAAjC,CAA8C,GAA9C,CAAoDiiB,KAAAoH,gBAAA,EAApD,CAEA,KAAIgqC,SAAWL,kBAAAE,aAAA,CAAgCjxC,KAAhC,CAAuCimB,GAAvC,CAAf,CACIorB,WAAa,EACjB,KAAA/I,SAAA,CAAc8I,QAAd,CAAA;AAA0BC,UACtBC,MAAAA,CAAwBtxC,KAAAC,eAAA,EAAAsxC,4BAAA,EAG5B,KAAAC,aAAA,CAAkBzzD,UAAlB,CAA+B,OAA/B,CAAwCuzD,KAAxC,CAA+D,QAAS,CAACj5D,KAAD,CAAQyW,MAAR,CAAgB,CAEtE,GAAd,GAAIzW,KAAJ,GAEIA,KAFJ,CACIK,MADJ,CACW,IADX,CAIA,IAAc,IAAd,GAAIL,KAAJ,CACI+e,KAAA2wC,cAAA,CAAoBhqD,UAApB,CAAgCrF,MAAhC,CAAmD,CAAA,CAAnD,CAA0DutC,GAA1D,CAEAz1C,KAAA2lB,QAAA,CAAaiB,KAAAkxC,SAAb,CAA6B8I,QAA7B,CAAJ,GAA+CC,UAA/C,EAWIlrD,UAAA,CATK9N,KAALo5D,CAGkB,GAAb,EAAIp5D,KAAJ,CACU,mBADV,CAIU,aAJV,CAI0BA,KAP/Bo5D,CACe,IAQf,CAAqB,IAArB,CApBgF,CAAxF,CAXmF,CAoCvFV,mBAAA18D,UAAAw3D,SAAA,CAAwC6F,QAAS,CAAC1xC,KAAD,CAAQimB,GAAR,CAAa,CACtDmrB,KAAAA,CAAWL,kBAAAE,aAAA,CAAgCjxC,KAAhC,CAAuCimB,GAAvC,CACf,QAAO,IAAAqiB,SAAA,CAAc8I,KAAd,CAFmD,CAK9DL;kBAAA18D,UAAAgzD,iBAAA,CAAgDsK,QAAS,CAACpK,KAAD,CAAQ,EAYjEwJ,mBAAA18D,UAAAm9D,aAAA,CAA4CI,QAAS,CAAC7zD,UAAD,CAAauzD,qBAAb,CAAoCxtC,QAApC,CAA8C,CAC/F,IAAI1M,MAAQ,IACkB,KAAK,EAAnC,GAAIk6C,qBAAJ,GAAwCA,qBAAxC,CAAgE,EAAhE,CACAA,sBAAA,OAAA,CAAkC,QAClC,KAAApJ,mBAAAtc,SAAA,CACgC,CAAA,CADhC,CAAAG,KAAA,CAEU,QAAS,CAAC8lB,aAAD,CAAgB,CAE/B,CADIC,aACJ,CADgBD,aAChB,EADiCA,aAAAvC,YACjC,IACIgC,qBAAA,KADJ,CACoCQ,aADpC,CAGA,KAAI/+D,KAAOqkB,KAAA6pC,UAAAhgD,OAAA,CAAyB,UAAzB,CAAsC,SAA7ClO,EACAqkB,KAAA6pC,UAAAjgD,KADAjO;AAEAgL,UAFAhL,CAIA,SAJAA,CAKAqkB,KAAA6pC,UAAAvuD,UALAK,CAMAvC,IAAAuhE,YAAA,CAAiBT,qBAAjB,CACJl6C,MAAAo8B,KAAA,CAAW,2BAAX,CAAyCzgD,GAAzC,CACA,KAAIi/D,IAAM,IAAIC,cACdD,IAAAxW,mBAAA,CAAyB0W,QAAS,EAAG,CACjC,GAAIpuC,QAAJ,EAAmC,CAAnC,GAAgBkuC,GAAA/4D,WAAhB,CAAsC,CAClCme,KAAAo8B,KAAA,CAAW,oBAAX,CAAkCzgD,GAAlC,CAAwC,oBAAxC,CAA8Di/D,GAAAjoB,OAA9D,CAA0E,WAA1E,CAAuFioB,GAAAG,aAAvF,CACA,KAAIxG,IAAM,IACV,IAAkB,GAAlB,EAAIqG,GAAAjoB,OAAJ,EAAsC,GAAtC,CAAyBioB,GAAAjoB,OAAzB,CAA2C,CACvC,GAAI,CACA4hB,GAAA,CAAMn7D,IAAAwE,SAAA,CAAcg9D,GAAAG,aAAd,CADN,CAGJ,MAAOn8D,CAAP,CAAU,CACNwC,IAAA,CAAK,oCAAL,CACIzF,GADJ,CAEI,IAFJ,CAGIi/D,GAAAG,aAHJ,CADM,CAMVruC,QAAA,CAAS,IAAT;AAAe6nC,GAAf,CAVuC,CAA3C,IAcuB,IAMnB,GANIqG,GAAAjoB,OAMJ,EANyC,GAMzC,GAN0BioB,GAAAjoB,OAM1B,EALIvxC,IAAA,CAAK,qCAAL,CACIzF,GADJ,CAEI,WAFJ,CAGIi/D,GAAAjoB,OAHJ,CAKJ,CAAAjmB,QAAA,CAASkuC,GAAAjoB,OAAT,CAEJjmB,SAAA,CAAW,IAzBuB,CADL,CA6BrCkuC,IAAApe,KAAA,CAAS,KAAT,CAAgB7gD,GAAhB,CAAuC,CAAA,CAAvC,CACAi/D,IAAA7a,KAAA,EA5C+B,CAFnC,CAJ+F,CAqDnG,OAAO4Z,mBArJ+C,CAAlB,CAsJtC9J,aAtJsC,CA5tDxC,CAw4DImL,KAAsB,QAAS,EAAG,CAMlCA,QAASA,KAAI,CAACnR,SAAD,CAAYoR,eAAZ,CAA6Bx/D,GAA7B,CAAkC,CAC3C,IAAIukB,MAAQ,IACZ,KAAA6pC,UAAA,CAAiBA,SACjB,KAAApuD,IAAA,CAAWA,GACX,KAAAy/D,gBAAA,CAAuB,CACvB,KAAAlkB,eAAA,CAAsB,IACtB,KAAAmkB,YAAA,CAAmB,IAAIxjB,UACvB,KAAAyjB,aAAA,CAAoB,CACpB,KAAAC,6BAAA,CAAoC,IAEpC,KAAAxe,cAAA;AAAqB,IAAIxrB,kBAKzB,KAAAiqC,sBAAA,CAA6B,IAE7B,KAAIC,kBAAoB,IAAIjnB,iBAAJ,CAAsB74C,GAAtB,CACxB,KAAA4gD,OAAA,CAAczG,YAAAC,cAAA,CAA2BgU,SAA3B,CACd,IAAIoR,eAAJ,EAhsXoH,CAgsXpH,EAhsXIO,CAR2B,QAQ3BA,GARS,MAAO98D,OAQhB88D,EAPJ98D,MAAA,UAOI88D,EANJ98D,MAAA,UAAA,UAMI88D,EALJ,EAKIA,QAAA,CAAiB,0FAAjB,CAgsXJ,CACI,IAAA1kB,QAEA,CAFe,IAAI6iB,kBAAJ,CAAuB,IAAA9P,UAAvB,CAAuC,IAAA8G,cAAA9vD,KAAA,CAAwB,IAAxB,CAAvC,CAAsE06D,iBAAtE,CAEf,CAAAt5D,UAAA,CAAW,IAAA2uD,iBAAA/vD,KAAA,CAA2B,IAA3B,CAAiC,CAAA,CAAjC,CAAX,CAAmD,CAAnD,CAHJ;IAKK,CACG46D,eAAAA,CAAehgE,GAAA25C,QAAA,6BAEnB,IAA4B,WAA5B,GAAI,MAAOqmB,gBAAX,EAA4D,IAA5D,GAA2CA,eAA3C,CAAkE,CAC9D,GAA4B,QAA5B,GAAI,MAAOA,gBAAX,CACI,KAAUt6D,MAAJ,CAAU,oEAAV,CAAN,CAEJ,GAAI,CACA/H,IAAAmE,UAAA,CAAek+D,eAAf,CADA,CAGJ,MAAO78D,CAAP,CAAU,CACN,KAAUuC,MAAJ,CAAU,iCAAV,CAA8CvC,CAA9C,CAAN,CADM,CAPoD,CAYlE,IAAAk4C,QAAA,CADA,IAAAwkB,sBACA,CAD6B,IAAI5K,oBAAJ,CAAyB,IAAA7G,UAAzB,CAAyC,IAAA8G,cAAA9vD,KAAA,CAAwB,IAAxB,CAAzC,CAAwE,IAAA+vD,iBAAA/vD,KAAA,CAA2B,IAA3B,CAAxE,CAA0G,IAAAgwD,oBAAAhwD,KAAA,CAA8B,IAA9B,CAA1G;AAA+I06D,iBAA/I,CAAkKE,eAAlK,CAd5B,CAiBLF,iBAAA1mB,uBAAA,CAAyC,QAAS,CAACsb,KAAD,CAAQ,CACtDnwC,KAAA82B,QAAAmZ,iBAAA,CAA+BE,KAA/B,CADsD,CAA1D,CAKA,KAAAuL,eAAA,CAAsB9lB,YAAAK,oBAAA,CAAiC4T,SAAjC,CAA4C,QAAS,EAAG,CAAE,MAAO,KAAIjT,aAAJ,CAAkB52B,KAAAq8B,OAAlB,CAAgCr8B,KAAA82B,QAAhC,CAAT,CAAxD,CACtB,KAAA6kB,mBAAA,EAEA,KAAAC,UAAA,CAAiB,IAAI5nB,cACrB,KAAA6nB,cAAA,CAAqB,IAAIzuB,QAAJ,CAAa,CAC9B0D,eAAgBA,QAAS,CAACloB,KAAD,CAAQimB,GAAR,CAAaikB,aAAb,CAA4B/jD,UAA5B,CAAwC,CACzD+sD,GAAAA,CAAa,EACbhrD,cAAAA,CAAOkP,KAAA47C,UAAA3jC,QAAA,CAAwBrP,KAAAjgB,KAAxB,CAGNmI,cAAA7W,QAAA,EAAL,GACI6hE,GACA;AADa97C,KAAA67C,cAAAxtB,qBAAA,CAAyCzlB,KAAAjgB,KAAzC,CAAqDmI,aAArD,CACb,CAAA7O,UAAA,CAAW,QAAS,EAAG,CACnB8M,UAAA,CAAW,IAAX,CADmB,CAAvB,CAEG,CAFH,CAFJ,CAMA,OAAO+sD,IAXsD,CADnC,CAc9B5qB,cAAeA,QAAS,EAAG,EAdG,CAAb,CAgBrB,KAAA6qB,YAAA,CAAiB,WAAjB,CAA8B,CAAA,CAA9B,CACA,KAAAC,gBAAA,CAAuB,IAAI5uB,QAAJ,CAAa,CAChC0D,eAAgBA,QAAS,CAACloB,KAAD,CAAQimB,GAAR,CAAaikB,aAAb,CAA4B/jD,UAA5B,CAAwC,CAC7DiR,KAAA82B,QAAA8b,OAAA,CAAqBhqC,KAArB,CAA4BkqC,aAA5B,CAA2CjkB,GAA3C,CAAgD,QAAS,CAAC8D,MAAD,CAASrxC,IAAT,CAAe,CAChEghC,MAAAA,CAASvzB,UAAA,CAAW4jC,MAAX,CAAmBrxC,IAAnB,CACb0e,MAAAm7C,YAAA5iB,0BAAA,CAA4C3vB,KAAAjgB,KAA5C,CAAwD25B,MAAxD,CAFoE,CAAxE,CAKA,OAAO,EANsD,CADjC,CAShC4O,cAAeA,QAAS,CAACtoB,KAAD,CAAQimB,GAAR,CAAa,CACjC7uB,KAAA82B,QAAA2d,SAAA,CAAuB7rC,KAAvB;AAA8BimB,GAA9B,CADiC,CATL,CAAb,CAnEoB,CAoF/CmsB,IAAA/9D,UAAAe,SAAA,CAA0Bi+D,QAAS,EAAG,CAClC,OAAS,IAAApS,UAAAhgD,OAAA,CAAwB,UAAxB,CAAqC,SAA9C,EAA2D,IAAAggD,UAAAjgD,KADzB,CAMtCoxD,KAAA/9D,UAAApE,KAAA,CAAsBqjE,QAAS,EAAG,CAC9B,MAAO,KAAArS,UAAAvuD,UADuB,CAMlC0/D,KAAA/9D,UAAAk/D,WAAA,CAA4BC,QAAS,EAAG,CAEpC,IAAIC,OADa,IAAAT,UAAA3jC,QAAAqkC,CAAuB,IAAI72D,IAAJ,CAAS,wBAAT,CAAvB62D,CACJ94D,IAAA,EAAT64D,EAA6B,CACjC,OAAOhG,CAAA,IAAIC,IAAJD,SAAA,EAAP,CAA8BgG,MAHM,CASxCrB,KAAA/9D,UAAAs/D,qBAAA,CAAsCC,QAAS,EAAG,CACpB,IAAA,OAAA,CACtB9N,UAAW,IAAAyN,WAAA,EADW,CAjsO9B11B,OAAA,CAASA,MAAT,EAAmB,EACnBA,OAAA,UAAA,CAAsBA,MAAA,UAAtB,EAA6C4vB,CAAA,IAAIC,IAAJD,SAAA,EAgsOzC,OA/rOG5vB,OA8rO2C,CAclDu0B;IAAA/9D,UAAA0zD,cAAA,CAA+B8L,QAAS,CAAC91D,UAAD,CAAarF,IAAb,CAAmBo7D,OAAnB,CAA4B7tB,GAA5B,CAAiC,CAErE,IAAAqsB,gBAAA,EACA,KAAIvyD,KAAO,IAAIlD,IAAJ,CAASkB,UAAT,CACXrF,KAAA,CAAO,IAAA+5D,6BAAA,CACD,IAAAA,6BAAA,CAAkC10D,UAAlC,CAA8CrF,IAA9C,CADC,CAEDA,IACFghC,WAAAA,CAAS,EACTuM,IAAJ,CACQ6tB,OAAJ,EACQC,IAGJ,CAHqBvjE,IAAA6mB,IAAA,CAAS3e,IAAT,CAAe,QAAS,CAACs7D,GAAD,CAAM,CAC/C,MAAO7jE,eAAA,CAAe6jE,GAAf,CADwC,CAA9B,CAGrB,CAAAt6B,UAAA,CAAS,IAAA05B,gBAAA3sB,sBAAA,CAA2C1mC,IAA3C,CAAiDg0D,IAAjD,CAAiE9tB,GAAjE,CAJb,GAOQguB,IACJ,CADiB9jE,cAAA,CAAeuI,IAAf,CACjB,CAAAghC,UAAA,CAAS,IAAA05B,gBAAArtB,0BAAA,CAA+ChmC,IAA/C,CAAqDk0D,IAArD,CAAiEhuB,GAAjE,CARb,CADJ,CAYS6tB,OAAJ,EACGj8B,GAGJ,CAHsBrnC,IAAA6mB,IAAA,CAAS3e,IAAT;AAAe,QAAS,CAACs7D,GAAD,CAAM,CAChD,MAAO7jE,eAAA,CAAe6jE,GAAf,CADyC,CAA9B,CAGtB,CAAAt6B,UAAA,CAAS,IAAA05B,gBAAAztB,iBAAA,CAAsC5lC,IAAtC,CAA4C83B,GAA5C,CAJR,GAOGtb,GACJ,CADWpsB,cAAA,CAAeuI,IAAf,CACX,CAAAghC,UAAA,CAAS,IAAA05B,gBAAA3tB,qBAAA,CAA0C1lC,IAA1C,CAAgDwc,GAAhD,CARR,CAUDwV,IAAAA,CAAehyB,IACC,EAApB,CAAI25B,UAAA3nC,OAAJ,GAGIggC,GAHJ,CAGmB,IAAAmiC,mBAAA,CAAwBn0D,IAAxB,CAHnB,CAKA,KAAAwyD,YAAA5iB,0BAAA,CAA2C5d,GAA3C,CAAyD2H,UAAzD,CApCqE,CA2CzE04B,KAAA/9D,UAAA8/D,qBAAA,CAAsCC,QAAS,CAACtwC,QAAD,CAAW,CACtD,IAAA2uC,6BAAA,CAAoC3uC,QADkB,CAO1DsuC,KAAA/9D,UAAA2zD,iBAAA,CAAkCqM,QAAS,CAACC,aAAD,CAAgB,CACvD,IAAAnB,YAAA,CAAiB,WAAjB;AAA8BmB,aAA9B,CACsB,EAAA,CAAtB,GAAIA,aAAJ,EACI,IAAAC,uBAAA,EAHmD,CAU3DnC,KAAA/9D,UAAA4zD,oBAAA,CAAqCuM,QAAS,CAACv1B,OAAD,CAAU,CACpD,IAAI7nB,MAAQ,IACZzc,KAAA,CAAKskC,OAAL,CAAc,QAAS,CAACrrC,KAAD,CAAQ7C,GAAR,CAAa,CAChCqmB,KAAA+7C,YAAA,CAAkBpiE,GAAlB,CAAuB6C,KAAvB,CADgC,CAApC,CAFoD,CAYxDw+D,KAAA/9D,UAAA8+D,YAAA,CAA6BsB,QAAS,CAAC12D,UAAD,CAAanK,KAAb,CAAoB,CAClDmM,UAAAA,CAAO,IAAIlD,IAAJ,CAAS,SAAT,CAAqBkB,UAArB,CACP4K,MAAAA,CAAUxY,cAAA,CAAeyD,KAAf,CACd,KAAAo/D,UAAAznB,eAAA,CAA8BxrC,UAA9B,CAAoC4I,KAApC,CACI+wB,MAAAA,CAAS,IAAAu5B,cAAAxtB,qBAAA,CAAwC1lC,UAAxC,CAA8C4I,KAA9C,CACb,KAAA4pD,YAAA5iB,0BAAA,CAA2C5vC,UAA3C,CAAiD25B,KAAjD,CALsD,CAW1D04B,KAAA/9D,UAAAqgE,gBAAA;AAAiCC,QAAS,EAAG,CACzC,MAAO,KAAAnC,aAAA,EADkC,CAS7CJ,KAAA/9D,UAAAyS,gBAAA,CAAiC8tD,QAAS,CAAC70D,IAAD,CAAO80D,MAAP,CAAex8C,WAAf,CAA4BlS,UAA5B,CAAwC,CAC9E,IAAIiR,MAAQ,IACZ,KAAAo8B,KAAA,CAAU,KAAV,CAAiB,CACbzzC,KAAMA,IAAA3K,SAAA,EADO,CAEbxB,MAAOihE,MAFM,CAGbxkE,SAAUgoB,WAHG,CAAjB,CAOA,KAAIqR,aAAe,IAAAiqC,qBAAA,EACfmB,OAAAA,CAAoB3kE,cAAA,CAAe0kE,MAAf,CAAuBx8C,WAAvB,CACpB1P,aAAAA,CAAUkhB,4BAAA,CAA6BirC,MAA7B,CAAgDprC,YAAhD,CACd,KAAImX,QAAU,IAAA6zB,gBAAA,EACVh7B,aAAAA,CAAS,IAAA05B,gBAAAtuB,mBAAA,CAAwC/kC,IAAxC,CAA8C4I,YAA9C,CAAuDk4B,OAAvD,CAAgE,CAAA,CAAhE,CACb,KAAA0xB,YAAArjB,YAAA,CAA6BxV,YAA7B,CACA;IAAAwU,QAAAgZ,IAAA,CAAiBnnD,IAAA3K,SAAA,EAAjB,CAAkC0/D,MAAAl6D,IAAA,CAAkC,CAAA,CAAlC,CAAlC,CAA2E,QAAS,CAACmvC,MAAD,CAASkjB,WAAT,CAAsB,CACtG,IAAI8H,QAAqB,IAArBA,GAAUhrB,MACTgrB,QAAL,EACIv8D,IAAA,CAAK,SAAL,CAAiBuH,IAAjB,CAAwB,WAAxB,CAAsCgqC,MAAtC,CAEAirB,QAAAA,CAAc59C,KAAAg8C,gBAAA/tB,aAAA,CAAmCxE,OAAnC,CAA4C,CAACk0B,OAA7C,CAClB39C,MAAAm7C,YAAA5iB,0BAAA,CAA4C5vC,IAA5C,CAAkDi1D,OAAlD,CACA59C,MAAA69C,uBAAA,CAA6B9uD,UAA7B,CAAyC4jC,MAAzC,CAAiDkjB,WAAjD,CAPsG,CAA1G,CASIl7B,aAAAA,CAAe,IAAAmjC,mBAAA,CAAwBn1D,IAAxB,CACnB,KAAAm0D,mBAAA,CAAwBniC,YAAxB,CAEA,KAAAwgC,YAAA5iB,0BAAA,CAA2C5d,YAA3C,CAAyD,EAAzD,CA3B8E,CAkClFqgC,KAAA/9D,UAAAuC,OAAA,CAAwBu+D,QAAS,CAACp1D,IAAD;AAAOq1D,eAAP,CAAwBjvD,UAAxB,CAAoC,CACjE,IAAIiR,MAAQ,IACZ,KAAAo8B,KAAA,CAAU,QAAV,CAAoB,CAAEzzC,KAAMA,IAAA3K,SAAA,EAAR,CAAyBxB,MAAOwhE,eAAhC,CAApB,CAEA,KAAIC,MAAQ,CAAA,CAAZ,CACI3rC,aAAe,IAAAiqC,qBAAA,EADnB,CAEI97B,gBAAkB,EACtBrnC,KAAAM,QAAA,CAAaskE,eAAb,CAA8B,QAAS,CAACE,UAAD,CAAaC,YAAb,CAA2B,CAC9DF,KAAA,CAAQ,CAAA,CACJP,aAAAA,CAAoB3kE,cAAA,CAAeolE,YAAf,CACxB19B,gBAAA,CAAgBy9B,UAAhB,CAAA,CAA8BzrC,4BAAA,CAA6BirC,YAA7B,CAAgDprC,YAAhD,CAHgC,CAAlE,CAKA,IAAK2rC,KAAL,CAsBIr9D,GAAA,CAAI,sDAAJ,CACA,CAAA,IAAAi9D,uBAAA,CAA4B9uD,UAA5B,CAAwC,IAAxC,CAvBJ,KAAY,CACR,IAAIqvD;AAAY,IAAAd,gBAAA,EAAhB,CACIh7B,OAAS,IAAA05B,gBAAAluB,eAAA,CAAoCnlC,IAApC,CAA0C83B,eAA1C,CAA2D29B,SAA3D,CACb,KAAAjD,YAAArjB,YAAA,CAA6BxV,MAA7B,CACA,KAAAwU,QAAAhW,MAAA,CAAmBn4B,IAAA3K,SAAA,EAAnB,CAAoCggE,eAApC,CAAqD,QAAS,CAACrrB,MAAD,CAASkjB,WAAT,CAAsB,CAChF,IAAI8H,QAAqB,IAArBA,GAAUhrB,MACTgrB,QAAL,EACIv8D,IAAA,CAAK,YAAL,CAAoBuH,IAApB,CAA2B,WAA3B,CAAyCgqC,MAAzC,CAEAirB,QAAAA,CAAc59C,KAAAg8C,gBAAA/tB,aAAA,CAAmCmwB,SAAnC,CAA8C,CAACT,OAA/C,CAClB,KAAIhjC,aAAoC,CAArB,CAAAijC,OAAAjjE,OAAA,CAAyBqlB,KAAA88C,mBAAA,CAAyBn0D,IAAzB,CAAzB,CAA0DA,IAC7EqX,MAAAm7C,YAAA5iB,0BAAA,CAA4C5d,YAA5C,CAA0DijC,OAA1D,CACA59C,MAAA69C,uBAAA,CAA6B9uD,UAA7B;AAAyC4jC,MAAzC,CAAiDkjB,WAAjD,CARgF,CAApF,CAUAz8D,KAAAM,QAAA,CAAaskE,eAAb,CAA8B,QAAS,CAACvlB,WAAD,CAAc,CAC7C9d,WAAAA,CAAe3a,KAAA89C,mBAAA,CAAyBn1D,IAAApO,MAAA,CAAWk+C,WAAX,CAAzB,CACnBz4B,MAAA88C,mBAAA,CAAyBniC,WAAzB,CAFiD,CAArD,CAKA,KAAAwgC,YAAA5iB,0BAAA,CAA2C5vC,IAA3C,CAAiD,EAAjD,CAnBQ,CAZqD,CA0CrEqyD,KAAA/9D,UAAAkgE,uBAAA,CAAwCkB,QAAS,EAAG,CAChD,IAAIr+C,MAAQ,IACZ,KAAAo8B,KAAA,CAAU,oBAAV,CACA,KAAI9pB,aAAe,IAAAiqC,qBAAA,EAAnB,CAEIj6B,OAAS,EADkB/P,yBAAA+rC,CAAyB,IAAAzhB,cAAzByhB,CAA6ChsC,YAA7CgsC,CAE/BtsC,YAAA,CAAqCvsB,IAAAquB,MAArC,CAAiD,QAAS,CAACnrB,IAAD,CAAOwc,IAAP,CAAa,CACnEmd,MAAA,CAASA,MAAAthC,OAAA,CAAcgf,KAAAg8C,gBAAA3tB,qBAAA,CAA2C1lC,IAA3C;AAAiDwc,IAAjD,CAAd,CACLwV,KAAAA,CAAe3a,KAAA89C,mBAAA,CAAyBn1D,IAAzB,CACnBqX,MAAA88C,mBAAA,CAAyBniC,IAAzB,CAHmE,CAAvE,CAKA,KAAAkiB,cAAA,CAAqB,IAAIxrB,kBACzB,KAAA8pC,YAAA5iB,0BAAA,CAA2C9yC,IAAAquB,MAA3C,CAAuDwO,MAAvD,CAZgD,CAkBpD04B,KAAA/9D,UAAAmS,mBAAA,CAAoCmvD,QAAS,CAAC51D,IAAD,CAAOoG,UAAP,CAAmB,CAC5D,IAAIiR,MAAQ,IACZ,KAAA82B,QAAA1nC,mBAAA,CAAgCzG,IAAA3K,SAAA,EAAhC,CAAiD,QAAS,CAAC20C,MAAD,CAASkjB,WAAT,CAAsB,CAC7D,IAAf,GAAIljB,MAAJ,EACI3yB,KAAA68B,cAAAlrB,OAAA,CAA2BhpB,IAA3B,CAEJqX,MAAA69C,uBAAA,CAA6B9uD,UAA7B,CAAyC4jC,MAAzC,CAAiDkjB,WAAjD,CAJ4E,CAAhF,CAF4D,CAchEmF,KAAA/9D,UAAAuS,gBAAA,CAAiCgvD,QAAS,CAAC71D,IAAD,CAAOnM,KAAP,CAAcuS,UAAd,CAA0B,CAChE,IAAIiR;AAAQ,IAAZ,CACIzO,QAAUxY,cAAA,CAAeyD,KAAf,CACd,KAAAs6C,QAAAsZ,gBAAA,CAA6BznD,IAAA3K,SAAA,EAA7B,CAA8CuT,OAAA/N,IAAA,CAAwB,CAAA,CAAxB,CAA9C,CAA6E,QAAS,CAACmvC,MAAD,CAASkjB,WAAT,CAAsB,CACzF,IAAf,GAAIljB,MAAJ,EACI3yB,KAAA68B,cAAAprB,SAAA,CAA6B9oB,IAA7B,CAAmC4I,OAAnC,CAEJyO,MAAA69C,uBAAA,CAA6B9uD,UAA7B,CAAyC4jC,MAAzC,CAAiDkjB,WAAjD,CAJwG,CAA5G,CAHgE,CAgBpEmF,KAAA/9D,UAAA2S,4BAAA,CAA6C6uD,QAAS,CAAC91D,IAAD,CAAOnM,KAAP,CAAcvD,QAAd,CAAwB8V,UAAxB,CAAoC,CACtF,IAAIiR,MAAQ,IAAZ,CACIzO,QAAUxY,cAAA,CAAeyD,KAAf,CAAsBvD,QAAtB,CACd,KAAA69C,QAAAsZ,gBAAA,CAA6BznD,IAAA3K,SAAA,EAA7B,CAA8CuT,OAAA/N,IAAA,CAAwB,CAAA,CAAxB,CAA9C,CAA6E,QAAS,CAACmvC,MAAD,CAASkjB,WAAT,CAAsB,CACzF,IAAf,GAAIljB,MAAJ,EACI3yB,KAAA68B,cAAAprB,SAAA,CAA6B9oB,IAA7B;AAAmC4I,OAAnC,CAEJyO,MAAA69C,uBAAA,CAA6B9uD,UAA7B,CAAyC4jC,MAAzC,CAAiDkjB,WAAjD,CAJwG,CAA5G,CAHsF,CAe1FmF,KAAA/9D,UAAA+S,mBAAA,CAAoC0uD,QAAS,CAAC/1D,IAAD,CAAOq1D,eAAP,CAAwBjvD,UAAxB,CAAoC,CAC7E,IAAIiR,MAAQ,IACZ,IAAI5mB,IAAAa,QAAA,CAAa+jE,eAAb,CAAJ,CACIp9D,GAAA,CAAI,qEAAJ,CACA,CAAA,IAAAi9D,uBAAA,CAA4B9uD,UAA5B,CAAwC,IAAxC,CAFJ,KAKA,KAAA+nC,QAAAwZ,kBAAA,CAA+B3nD,IAAA3K,SAAA,EAA/B,CAAgDggE,eAAhD,CAAiE,QAAS,CAACrrB,MAAD,CAASkjB,WAAT,CAAsB,CAC7E,IAAf,GAAIljB,MAAJ,EACIv5C,IAAAM,QAAA,CAAaskE,eAAb,CAA8B,QAAS,CAACpqD,SAAD,CAAY7Z,SAAZ,CAAuB,CACtDqa,SAAAA,CAAerb,cAAA,CAAegB,SAAf,CACnBimB;KAAA68B,cAAAprB,SAAA,CAA6B9oB,IAAApO,MAAA,CAAWqZ,SAAX,CAA7B,CAAoDQ,SAApD,CAF0D,CAA9D,CAKJ4L,MAAA69C,uBAAA,CAA6B9uD,UAA7B,CAAyC4jC,MAAzC,CAAiDkjB,WAAjD,CAP4F,CAAhG,CAP6E,CAqBjFmF,KAAA/9D,UAAAowB,yBAAA,CAA0CsxC,QAAS,CAAC/1C,KAAD,CAAQzB,iBAAR,CAA2B,CAGtEmb,iBAAA,CAD0B,OAA9B,GAAI1Z,KAAAjgB,KAAAzC,SAAA,EAAJ,CACa,IAAA21D,cAAAv3B,qBAAA,CAAwC1b,KAAxC,CAA+CzB,iBAA/C,CADb,CAIa,IAAA60C,gBAAA13B,qBAAA,CAA0C1b,KAA1C,CAAiDzB,iBAAjD,CAEb,KAAAg0C,YAAA/iB,kBAAA,CAAmCxvB,KAAAjgB,KAAnC,CAA+C25B,iBAA/C,CAR0E,CAc9E04B,KAAA/9D,UAAAywB,4BAAA,CAA6CkxC,QAAS,CAACh2C,KAAD;AAAQzB,iBAAR,CAA2B,CAKzEmb,iBAAA,CAD0B,OAA9B,GAAI1Z,KAAAjgB,KAAAzC,SAAA,EAAJ,CACa,IAAA21D,cAAAr3B,wBAAA,CAA2C5b,KAA3C,CAAkDzB,iBAAlD,CADb,CAIa,IAAA60C,gBAAAx3B,wBAAA,CAA6C5b,KAA7C,CAAoDzB,iBAApD,CAEb,KAAAg0C,YAAA/iB,kBAAA,CAAmCxvB,KAAAjgB,KAAnC,CAA+C25B,iBAA/C,CAV6E,CAYjF04B,KAAA/9D,UAAAk7D,UAAA,CAA2B0G,QAAS,EAAG,CAC/B,IAAAvD,sBAAJ,EACI,IAAAA,sBAAAnD,UAAA,CAzZW2G,gBAyZX,CAF+B,CAKvC9D,KAAA/9D,UAAAq7D,OAAA,CAAwByG,QAAS,EAAG,CAC5B,IAAAzD,sBAAJ,EACI,IAAAA,sBAAAhD,OAAA,CA9ZWwG,gBA8ZX,CAF4B,CAKpC9D;IAAA/9D,UAAAq6C,MAAA,CAAuB0nB,QAAS,CAACC,SAAD,CAAY,CACtB,IAAK,EAAvB,GAAIA,SAAJ,GAA4BA,SAA5B,CAAwC,CAAA,CAAxC,CACA,IAAuB,WAAvB,GAAI,MAAO7F,QAAX,CAAA,CAGI6F,SAAJ,EACS,IAAAjoB,eAEL,GADI,IAAAA,eACJ,CAD0B,IAAIX,aAAJ,CAAkB,IAAAgG,OAAlB,CAC1B,EAAA/E,SAAA,CAAQ,IAAAN,eAAAx5C,IAAA,EAHZ,EAMI85C,SANJ,CAMY,IAAA+E,OAAA7+C,IAAA,EAEZ,KAAI0hE,YAAc5iE,MAAAyG,KAAA,CAAYu0C,SAAZ,CAAA6nB,OAAA,CAA0B,QAAS,CAACC,aAAD,CAAgBC,YAAhB,CAA8B,CAC/E,MAAOv7D,KAAAiF,IAAA,CAASs2D,YAAA1kE,OAAT,CAA8BykE,aAA9B,CADwE,CAAjE,CAEf,CAFe,CAGlBhmE,KAAAM,QAAA,CAAa49C,SAAb,CAAoB,QAAS,CAACX,IAAD,CAAOn6C,KAAP,CAAc,CAEvC,IAAK,IAAI0D,EAAIy2C,IAAAh8C,OAAb,CAA0BuF,CAA1B,CAA8Bg/D,WAA9B,CAA4C,CAA5C,CAA+Ch/D,CAAA,EAA/C,CACIy2C,IAAA,EAAQ,GACZyiB,QAAAx4D,IAAA,CAAY+1C,IAAZ;AAAmBn6C,KAAnB,CAJuC,CAA3C,CAdA,CAFwC,CAuB5Cw+D,KAAA/9D,UAAAqiE,sBAAA,CAAuCC,QAAS,CAACC,MAAD,CAAS,CACrD,IAAAnjB,OAAA9G,iBAAA,CAA6BiqB,MAA7B,CACA,KAAA9D,eAAAvkB,YAAA,CAAgCqoB,MAAhC,CAFqD,CAQzDxE,KAAA/9D,UAAAm/C,KAAA,CAAsBqjB,QAAS,EAAG,CAE9B,IADA,IAAI3/D,SAAW,EAAf,CACSC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAArF,OAAtB,CAAwCoF,EAAA,EAAxC,CACID,QAAA,CAASC,EAAT,CAAA,CAAeC,SAAA,CAAUD,EAAV,CAEfgB,GAAAA,CAAS,EACT,KAAAu6D,sBAAJ,GACIv6D,EADJ,CACa,IAAAu6D,sBAAAp8D,GADb,CAC6C,GAD7C,CAGA0B,IAAAR,MAAA,CAAU,IAAK,EAAf,CAAkB,CAACW,EAAD,CAAAC,OAAA,CAAgBlB,QAAhB,CAAlB,CAT8B,CAgBlCk7D,KAAA/9D,UAAA4gE,uBAAA,CAAwC6B,QAAS,CAAChzC,QAAD,CAAWimB,MAAX,CAAmBkjB,WAAnB,CAAgC,CACzEnpC,QAAJ,EACItnB,cAAA,CAAe,QAAS,EAAG,CACvB,GAAc,IAAd,EAAIutC,MAAJ,CACIjmB,QAAA,CAAS,IAAT,CADJ;IAGK,CACD,IAAImmB,KAAOC,CAACH,MAADG,EAAW,OAAXA,aAAA,EAAX,CACI7yC,QAAU4yC,IACVgjB,YAAJ,GACI51D,OADJ,EACe,IADf,CACsB41D,WADtB,CAEI50D,QAAAA,CAAYE,KAAJ,CAAUlB,OAAV,CACZgB,QAAA4xC,KAAA,CAAaA,IACbnmB,SAAA,CAASzrB,OAAT,CAPC,CAJkB,CAA3B,CAFyE,CAkBjF3E,OAAAC,eAAA,CAAsBy+D,IAAA/9D,UAAtB,CAAsC,UAAtC,CAAkD,CAC9CO,IAAKA,QAAS,EAAG,CACb,MAAO,KAAAmiE,WAAP,GAA2B,IAAAA,WAA3B,CAA6C,IAAI1jE,iBAAJ,CAAa,IAAb,CAA7C,CADa,CAD6B,CAI9C+J,WAAY,CAAA,CAJkC,CAK9CC,aAAc,CAAA,CALgC,CAAlD,CAOA,OAAO+0D,KAre2B,CAAZ,EAx4D1B,CAs4EI4E,aAA8B,QAAS,EAAG,CAI1CA,QAASA,aAAY,CAAC30D,MAAD,CAAS,CAC1B,IAAA40D,eAAA,CAAsB,IAAIplC,aAAJ,CAAkBxvB,MAAA6d,SAAA,EAAlB,CACtB,KAAAhD,OAAA,CAAc7a,MAAA6d,SAAA,EACd,KAAAg3C,WAAA;AAAkBF,YAAAG,cAAA,CAA2B90D,MAA3B,CAClB,KAAA+0D,SAAA,CAAgBJ,YAAAK,YAAA,CAAyBh1D,MAAzB,CAJU,CAS9B20D,YAAA3iE,UAAAijE,aAAA,CAAsCC,QAAS,EAAG,CAC9C,MAAO,KAAAL,WADuC,CAMlDF,aAAA3iE,UAAAmjE,WAAA,CAAoCC,QAAS,EAAG,CAC5C,MAAO,KAAAL,SADqC,CAOhDJ,aAAA3iE,UAAAssB,QAAA,CAAiC+2C,QAAS,CAACxvD,IAAD,CAAO,CAC7C,MAA0D,EAA1D,EAAQ,IAAAgV,OAAA3U,QAAA,CAAoB,IAAA+uD,aAAA,EAApB,CAAyCpvD,IAAzC,CAAR,EACoD,CADpD,EACI,IAAAgV,OAAA3U,QAAA,CAAoBL,IAApB,CAA0B,IAAAsvD,WAAA,EAA1B,CAFyC,CAOjDR,aAAA3iE,UAAAoX,YAAA,CAAqCksD,QAAS,CAACp7C,IAAD,CAAOxrB,GAAP,CAAYo7B,QAAZ,CAAsB4F,YAAtB,CAAoClH,MAApC,CAA4CmH,oBAA5C,CAAkE,CACvG,IAAArR,QAAA,CAAa,IAAI7uB,SAAJ,CAAcf,GAAd;AAAmBo7B,QAAnB,CAAb,CAAL,GACIA,QADJ,CACe77B,YAAAC,WADf,CAGA,OAAO,KAAA0mE,eAAAxrD,YAAA,CAAgC8Q,IAAhC,CAAsCxrB,GAAtC,CAA2Co7B,QAA3C,CAAqD4F,YAArD,CAAmElH,MAAnE,CAA2EmH,oBAA3E,CAJqG,CAShHglC,aAAA3iE,UAAA89B,eAAA,CAAwCylC,QAAS,CAACjnC,OAAD,CAAU0B,OAAV,CAAmBL,oBAAnB,CAAyC,CAClFK,OAAAjhC,WAAA,EAAJ,GAEIihC,OAFJ,CAEc/hC,YAAAC,WAFd,CAIA,KAAIu/B,SAAWuC,OAAAjlB,UAAA,CAAkB,IAAA8P,OAAlB,CAEf4S,SAAA,CAAWA,QAAAv+B,eAAA,CAAwBjB,YAAAC,WAAxB,CACX,KAAIsnE,KAAO,IACXxlC,QAAAtmB,aAAA,CAAqB3Z,cAArB,CAAqC,QAAS,CAACrB,GAAD,CAAMI,SAAN,CAAiB,CACtD0mE,IAAAl3C,QAAA,CAAa,IAAI7uB,SAAJ,CAAcf,GAAd,CAAmBI,SAAnB,CAAb,CAAL;CACI2+B,QADJ,CACeA,QAAAx+B,qBAAA,CAA8BP,GAA9B,CAAmCT,YAAAC,WAAnC,CADf,CAD2D,CAA/D,CAKA,OAAO,KAAA0mE,eAAA9kC,eAAA,CAAmCxB,OAAnC,CAA4Cb,QAA5C,CAAsDkC,oBAAtD,CAd+E,CAmB1FglC,aAAA3iE,UAAA9C,eAAA,CAAwCumE,QAAS,CAACnnC,OAAD,CAAUtY,WAAV,CAAuB,CAEpE,MAAOsY,QAF6D,CAOxEqmC,aAAA3iE,UAAAk+B,aAAA,CAAsCwlC,QAAS,EAAG,CAC9C,MAAO,CAAA,CADuC,CAMlDf,aAAA3iE,UAAAo+B,iBAAA,CAA0CulC,QAAS,EAAG,CAClD,MAAO,KAAAf,eAD2C,CAMtDD,aAAA3iE,UAAA6rB,SAAA,CAAkC+3C,QAAS,EAAG,CAC1C,MAAO,KAAA/6C,OADmC,CAQ9C85C,aAAAG,cAAA,CAA6Be,QAAS,CAAC71D,MAAD,CAAS,CAC3C,GAAIA,MAAAqgB,SAAA,EAAJ,CAAuB,CACnB,IAAIK;AAAY1gB,MAAAygB,kBAAA,EAChB,OAAOzgB,OAAA6d,SAAA,EAAArW,SAAA,CAA2BxH,MAAAsgB,mBAAA,EAA3B,CAAwDI,SAAxD,CAFY,CAKnB,MAAO1gB,OAAA6d,SAAA,EAAApX,QAAA,EANgC,CAc/CkuD,aAAAK,YAAA,CAA2Bc,QAAS,CAAC91D,MAAD,CAAS,CACzC,GAAIA,MAAAugB,OAAA,EAAJ,CAAqB,CACjB,IAAIO,QAAU9gB,MAAA6gB,gBAAA,EACd,OAAO7gB,OAAA6d,SAAA,EAAArW,SAAA,CAA2BxH,MAAAwgB,iBAAA,EAA3B,CAAsDM,OAAtD,CAFU,CAKjB,MAAO9gB,OAAA6d,SAAA,EAAAvW,QAAA,EAN8B,CAS7C,OAAOqtD,aA/GmC,CAAZ,EAt4ElC,CA8gFIoB,cAA+B,QAAS,EAAG,CAI3CA,QAASA,cAAa,CAAC/1D,MAAD,CAAS,CAC3B,IAAAg2D,cAAA,CAAqB,IAAIrB,YAAJ,CAAiB30D,MAAjB,CACrB,KAAA6a,OAAA,CAAc7a,MAAA6d,SAAA,EACd,KAAAo4C,OAAA;AAAcj2D,MAAAk2D,SAAA,EACd,KAAAC,SAAA,CAAgB,CAACn2D,MAAAo2D,eAAA,EAJU,CAS/BL,aAAA/jE,UAAAoX,YAAA,CAAsCitD,QAAS,CAACn8C,IAAD,CAAOxrB,GAAP,CAAYo7B,QAAZ,CAAsB4F,YAAtB,CAAoClH,MAApC,CAA4CmH,oBAA5C,CAAkE,CACxG,IAAAqmC,cAAA13C,QAAA,CAA2B,IAAI7uB,SAAJ,CAAcf,GAAd,CAAmBo7B,QAAnB,CAA3B,CAAL,GACIA,QADJ,CACe77B,YAAAC,WADf,CAGA,OAAIgsB,KAAAzR,kBAAA,CAAuB/Z,GAAvB,CAAA0O,OAAA,CAAmC0sB,QAAnC,CAAJ,CAEW5P,IAFX,CAISA,IAAA1Q,YAAA,EAAJ,CAAyB,IAAAysD,OAAzB,CACM,IAAAD,cAAA5lC,iBAAA,EAAAhnB,YAAA,CAEU8Q,IAFV,CAEgBxrB,GAFhB,CAEqBo7B,QAFrB,CAE+B4F,YAF/B,CAE6ClH,MAF7C,CAEqDmH,oBAFrD,CADN,CAMM,IAAA2mC,sBAAA,CAA2Bp8C,IAA3B,CAAiCxrB,GAAjC,CAAsCo7B,QAAtC,CAAgDtB,MAAhD;AAAwDmH,oBAAxD,CAdkG,CAoBjHomC,cAAA/jE,UAAA89B,eAAA,CAAyCymC,QAAS,CAACjoC,OAAD,CAAU0B,OAAV,CAAmBL,oBAAnB,CAAyC,CAEvF,GAAIK,OAAAjhC,WAAA,EAAJ,EAA4BihC,OAAAhhC,QAAA,EAA5B,CAEI,IAAAy+B,SAAWx/B,YAAAC,WAAA6c,UAAA,CAAkC,IAAA8P,OAAlC,CAFf,KAKI,IAAkB,CAAlB,CAAI,IAAAo7C,OAAJ,CAAsBjmC,OAAAxmB,YAAA,EAAtB,EACIwmB,OAAA/kB,UAAA,CAAkB,IAAA4P,OAAlB,CADJ,CACoC,CAEhC4S,QAAA,CAAWx/B,YAAAC,WAAA6c,UAAA,CAAkC,IAAA8P,OAAlC,CAEX,KAAIhD,SAAW,IAAK,EAEhBA,SAAA,CADA,IAAAs+C,SAAJ,CACenmC,OAAAne,uBAAA,CAA+B,IAAAmkD,cAAAb,WAAA,EAA/B,CAAgE,IAAAt6C,OAAhE,CADf,CAIemV,OAAAre,gBAAA,CAAwB,IAAAqkD,cAAAf,aAAA,EAAxB;AAA2D,IAAAp6C,OAA3D,CAGf,KADIzN,OACJ,CADY,CACZ,CAAOyK,QAAAnL,QAAA,EAAP,EAA6BU,OAA7B,CAAqC,IAAA6oD,OAArC,CAAA,CAAkD,CAC9C,IAAI1hD,KAAOsD,QAAAtL,QAAA,EAAX,CACIiqD,QAAU,IAAK,EASnB,IAPIA,OAOJ,CARI,IAAAL,SAAJ,CAEwE,CAFxE,EAEQ,IAAAt7C,OAAA3U,QAAA,CAAoB,IAAA8vD,cAAAf,aAAA,EAApB,CAAuD1gD,IAAvD,CAFR,CAMsE,CANtE,EAMQ,IAAAsG,OAAA3U,QAAA,CAAoBqO,IAApB,CAA0B,IAAAyhD,cAAAb,WAAA,EAA1B,CAER,CACI1nC,QACA,CADWA,QAAAx+B,qBAAA,CAA8BslB,IAAA3mB,KAA9B,CAAyC2mB,IAAA1O,KAAzC,CACX,CAAAuH,OAAA,EAFJ,KAMI,MAjB0C,CAZlB,CADpC,IAkCK,CAEDqgB,QAAA,CAAWuC,OAAAjlB,UAAA,CAAkB,IAAA8P,OAAlB,CAEX4S,SAAA,CAAWA,QAAAv+B,eAAA,CAAwBjB,YAAAC,WAAxB,CACX,KAAI0pB,UAAY,IAAK,EAArB,CACII,QAAU,IAAK,EADnB,CAEI7a,IAAM,IAAK,EACX0a,SAAJ;AAAe,IAAK,EACpB,IAAI,IAAAs+C,SAAJ,CAAmB,CACft+C,QAAA,CAAW4V,QAAA1b,mBAAA,CAA4B,IAAA8I,OAA5B,CACXjD,UAAA,CAAY,IAAAo+C,cAAAb,WAAA,EACZn9C,QAAA,CAAU,IAAAg+C,cAAAf,aAAA,EACV,KAAIwB,eAAiB,IAAA57C,OAAA7qB,WAAA,EACrBmN,IAAA,CAAMA,QAAS,CAAChG,CAAD,CAAIC,CAAJ,CAAO,CAAE,MAAOq/D,eAAA,CAAer/D,CAAf,CAAkBD,CAAlB,CAAT,CALP,CAAnB,IAQI0gB,SAGA,CAHW4V,QAAAjc,YAAA,CAAqB,IAAAqJ,OAArB,CAGX,CAFAjD,SAEA,CAFY,IAAAo+C,cAAAf,aAAA,EAEZ,CADAj9C,OACA,CADU,IAAAg+C,cAAAb,WAAA,EACV,CAAAh4D,GAAA,CAAM,IAAA0d,OAAA7qB,WAAA,EAENod,QAAJ,CAAY,CAEZ,KADA,IAAIspD,eAAiB,CAAA,CACrB,CAAO7+C,QAAAnL,QAAA,EAAP,CAAA,CACQ6H,IAMJ,CANWsD,QAAAtL,QAAA,EAMX,CALI,CAACmqD,cAKL;AAL+C,CAK/C,EALuBv5D,GAAA,CAAIya,SAAJ,CAAerD,IAAf,CAKvB,GAHImiD,cAGJ,CAHqB,CAAA,CAGrB,EAAA,CADIF,OACJ,CADcE,cACd,EADgCtpD,OAChC,CADwC,IAAA6oD,OACxC,EAD6E,CAC7E,EADuD94D,GAAA,CAAIoX,IAAJ,CAAUyD,OAAV,CACvD,EACI5K,OAAA,EADJ,CAIIqgB,QAJJ,CAIeA,QAAAx+B,qBAAA,CAA8BslB,IAAA3mB,KAA9B,CAAyCK,YAAAC,WAAzC,CAnClB,CAwCT,MAAO,KAAA8nE,cAAA5lC,iBAAA,EAAAN,eAAA,CAEaxB,OAFb,CAEsBb,QAFtB,CAEgCkC,oBAFhC,CAjFgF,CAwF3FomC,cAAA/jE,UAAA9C,eAAA,CAAyCynE,QAAS,CAACroC,OAAD,CAAUtY,WAAV,CAAuB,CAErE,MAAOsY,QAF8D,CAOzEynC,cAAA/jE,UAAAk+B,aAAA,CAAuC0mC,QAAS,EAAG,CAC/C,MAAO,CAAA,CADwC,CAMnDb,cAAA/jE,UAAAo+B,iBAAA,CAA2CymC,QAAS,EAAG,CACnD,MAAO,KAAAb,cAAA5lC,iBAAA,EAD4C,CAMvD2lC;aAAA/jE,UAAA6rB,SAAA,CAAmCi5C,QAAS,EAAG,CAC3C,MAAO,KAAAj8C,OADoC,CAY/Ck7C,cAAA/jE,UAAAskE,sBAAA,CAAgDS,QAAS,CAAC78C,IAAD,CAAOqM,QAAP,CAAiB2C,SAAjB,CAA4BV,MAA5B,CAAoCwuC,iBAApC,CAAuD,CAG5G,GAAI,IAAAb,SAAJ,CAAmB,CACf,IAAIc,WAAa,IAAAp8C,OAAA7qB,WAAA,EACjB,KAAAmN,IAAMA,QAAS,CAAChG,CAAD,CAAIC,CAAJ,CAAO,CAAE,MAAO6/D,WAAA,CAAW7/D,CAAX,CAAcD,CAAd,CAAT,CAFP,CAAnB,IAKIgG,IAAA,CAAM,IAAA0d,OAAA7qB,WAAA,EAGV7B,KAAAC,OAAA,CADoB8rB,IACR1Q,YAAA,EAAZ,EAA2C,IAAAysD,OAA3C,CAAwD,EAAxD,CACA,KAAIiB,kBAAoB,IAAIznE,SAAJ,CAAc82B,QAAd,CAAwB2C,SAAxB,CAAxB,CACIiuC,eAAiB,IAAAhB,SAAA,CAHDj8C,IAIdhD,cAAA,CAA4B,IAAA2D,OAA5B,CADe,CAHDX,IAKd5C,aAAA,CAA2B,IAAAuD,OAA3B,CAHN;AAII27C,QAAU,IAAAR,cAAA13C,QAAA,CAA2B44C,iBAA3B,CACd,IAPoBh9C,IAOhBpR,SAAA,CAAuByd,QAAvB,CAAJ,CAAsC,CAClC,IAAI6wC,aARYl9C,IAQGzR,kBAAA,CAAgC8d,QAAhC,CAEnB,KADIwE,cACJ,CADgBvC,MAAA2I,mBAAA,CAA0B,IAAAtW,OAA1B,CAAuCs8C,cAAvC,CAAuD,IAAAhB,SAAvD,CAChB,CAAoB,IAApB,EAAOprC,cAAP,GACKA,cAAAn9B,KADL,EACuB24B,QADvB,EAVgBrM,IAWmBpR,SAAA,CAAuBiiB,cAAAn9B,KAAvB,CADnC,EAAA,CAKIm9B,cAAA,CAAYvC,MAAA2I,mBAAA,CAA0B,IAAAtW,OAA1B,CAAuCkQ,cAAvC,CAAkD,IAAAorC,SAAlD,CAEZkB,OAAAA,CAA2B,IAAb,EAAAtsC,cAAA,CAAoB,CAApB,CAAwB5tB,GAAA,CAAI4tB,cAAJ,CAAemsC,iBAAf,CAE1C,IADsBV,OACtB,EADiC,CAACttC,SAAAl6B,QAAA,EAClC,EADwE,CACxE,EADyDqoE,MACzD,CAII,MAHyB,KAGlB;AAHHL,iBAGG,EAFHA,iBAAAnnC,iBAAA,CAAmCxB,MAAAW,mBAAA,CAA0BzI,QAA1B,CAAoC2C,SAApC,CAA+CkuC,YAA/C,CAAnC,CAEG,CAvBKl9C,IAuBLjrB,qBAAA,CAAmCs3B,QAAnC,CAA6C2C,SAA7C,CAGkB,KAAzB,EAAI8tC,iBAAJ,EACIA,iBAAAnnC,iBAAA,CAAmCxB,MAAAQ,mBAAA,CAA0BtI,QAA1B,CAAoC6wC,YAApC,CAAnC,CAEAhjC,KAAAA,CA7BQla,IA6BQjrB,qBAAA,CAAmCs3B,QAAnC,CAA6Ct4B,YAAAC,WAA7C,CAEpB,OADoC,KACpC,EADuB68B,cACvB,EAD4C,IAAAirC,cAAA13C,QAAA,CAA2ByM,cAA3B,CAC5C,EAC6B,IAGlB,EAHHisC,iBAGG,EAFHA,iBAAAnnC,iBAAA,CAAmCxB,MAAAK,iBAAA,CAAwB3D,cAAAn9B,KAAxB;AAAwCm9B,cAAAllB,KAAxC,CAAnC,CAEG,CAAAuuB,IAAAnlC,qBAAA,CAAmC87B,cAAAn9B,KAAnC,CAAmDm9B,cAAAllB,KAAnD,CAJX,EAOWuuB,IA/BmB,CAmCjC,MAAIlL,UAAAl6B,QAAA,EAAJ,CAEMkrB,IAFN,CAIIs8C,OAAJ,EAC6C,CAD7C,EACGr5D,GAAA,CAAIg6D,cAAJ,CAAoBD,iBAApB,CADH,EAE4B,IAIlB,EAJHF,iBAIG,GAHHA,iBAAAnnC,iBAAA,CAAmCxB,MAAAQ,mBAAA,CAA0BsoC,cAAAvpE,KAA1B,CAA+CupE,cAAAtxD,KAA/C,CAAnC,CACA,CAAAmxD,iBAAAnnC,iBAAA,CAAmCxB,MAAAK,iBAAA,CAAwBnI,QAAxB,CAAkC2C,SAAlC,CAAnC,CAEG,EApDKhP,IAoDLjrB,qBAAA,CACmBs3B,QADnB,CAC6B2C,SAD7B,CAAAj6B,qBAAA,CAEmBkoE,cAAAvpE,KAFnB,CAEwCK,YAAAC,WAFxC,CANV;AAeMgsB,IAvEiG,CA0EhH,OAAO67C,cAlOoC,CAAZ,EA9gFnC,CAywFIuB,YAA6B,QAAS,EAAG,CACzCA,QAASA,YAAW,EAAG,CAKnB,IAAAC,YAAA,CADA,IAAAC,QACA,CAFA,IAAAC,cAEA,CAHA,IAAAC,UAGA,CAJA,IAAAC,UAIA,CAJiB,CAAA,CAKjB,KAAA1B,OAAA,CAAc,CACd,KAAA2B,UAAA,CAAiB,EACjB,KAAAC,iBAAA,CAAwB,IACxB,KAAAC,gBAAA,CAAuB,EACvB,KAAAC,eAAA,CAAsB,IACtB,KAAAC,cAAA,CAAqB,EACrB,KAAAn9C,OAAA,CAAc9qB,cAZK,CAiBvBunE,WAAAtlE,UAAAquB,SAAA,CAAiC43C,QAAS,EAAG,CACzC,MAAO,KAAAP,UADkC,CAM7CJ,YAAAtlE,UAAAokE,eAAA,CAAuC8B,QAAS,EAAG,CAC/C,MAAuB,EAAvB,GAAI,IAAAN,UAAJ,CAKW,IAAAF,UALX,CAQY,IAAAE,UARZ,GAQ+BN,WAAAa,yBAAAC,eATgB,CAgBnDd;WAAAtlE,UAAAsuB,mBAAA,CAA2C+3C,QAAS,EAAG,CACnDlqE,IAAAC,OAAA,CAAY,IAAAspE,UAAZ,CAA4B,kCAA5B,CACA,OAAO,KAAAG,iBAF4C,CASvDP,YAAAtlE,UAAAyuB,kBAAA,CAA0C63C,QAAS,EAAG,CAClDnqE,IAAAC,OAAA,CAAY,IAAAspE,UAAZ,CAA4B,kCAA5B,CACA,OAAI,KAAAD,cAAJ,CACW,IAAAK,gBADX,CAx4ZOzgE,YAs4Z2C,CAYtDigE,YAAAtlE,UAAAuuB,OAAA,CAA+Bg4C,QAAS,EAAG,CACvC,MAAO,KAAAf,QADgC,CAO3CF,YAAAtlE,UAAAwuB,iBAAA,CAAyCg4C,QAAS,EAAG,CACjDrqE,IAAAC,OAAA,CAAY,IAAAopE,QAAZ,CAA0B,gCAA1B,CACA,OAAO,KAAAO,eAF0C,CASrDT;WAAAtlE,UAAA6uB,gBAAA,CAAwC43C,QAAS,EAAG,CAChDtqE,IAAAC,OAAA,CAAY,IAAAopE,QAAZ,CAA0B,gCAA1B,CACA,OAAI,KAAAD,YAAJ,CACW,IAAAS,cADX,CA/5ZO1gE,YA65ZyC,CAYpDggE,YAAAtlE,UAAAivB,SAAA,CAAiCy3C,QAAS,EAAG,CACzC,MAAO,KAAAf,UADkC,CAM7CL,YAAAtlE,UAAAkvB,iBAAA,CAAyCy3C,QAAS,EAAG,CACjD,MAAO,KAAAhB,UAAP,EAA4C,EAA5C,GAAyB,IAAAC,UADwB,CAOrDN,YAAAtlE,UAAAkkE,SAAA,CAAiC0C,QAAS,EAAG,CACzCzqE,IAAAC,OAAA,CAAY,IAAAupE,UAAZ,CAA4B,kCAA5B,CACA,OAAO,KAAA1B,OAFkC,CAO7CqB,YAAAtlE,UAAA6rB,SAAA,CAAiCg7C,QAAS,EAAG,CACzC,MAAO,KAAAh+C,OADkC,CAO7Cy8C;WAAAtlE,UAAA8mE,MAAA,CAA8BC,QAAS,EAAG,CACtC,IAAI7rD,KAAO,IAAIoqD,WACfpqD,KAAAyqD,UAAA,CAAiB,IAAAA,UACjBzqD,KAAA+oD,OAAA,CAAc,IAAAA,OACd/oD,KAAAwqD,UAAA,CAAiB,IAAAA,UACjBxqD,KAAA2qD,iBAAA,CAAwB,IAAAA,iBACxB3qD,KAAAuqD,cAAA,CAAqB,IAAAA,cACrBvqD,KAAA4qD,gBAAA,CAAuB,IAAAA,gBACvB5qD,KAAAsqD,QAAA,CAAe,IAAAA,QACftqD,KAAA6qD,eAAA,CAAsB,IAAAA,eACtB7qD,KAAAqqD,YAAA,CAAmB,IAAAA,YACnBrqD,KAAA8qD,cAAA,CAAqB,IAAAA,cACrB9qD,KAAA2N,OAAA,CAAc,IAAAA,OACd3N,KAAA0qD,UAAA,CAAiB,IAAAA,UACjB,OAAO1qD,KAd+B,CAoB1CoqD,YAAAtlE,UAAAsxB,MAAA;AAA8B01C,QAAS,CAACC,QAAD,CAAW,CAC9C,IAAIr1C,UAAY,IAAAk1C,MAAA,EAChBl1C,UAAA+zC,UAAA,CAAsB,CAAA,CACtB/zC,UAAAqyC,OAAA,CAAmBgD,QACnBr1C,UAAAg0C,UAAA,CAAsB,EACtB,OAAOh0C,UALuC,CAWlD0zC,YAAAtlE,UAAAoxB,aAAA,CAAqC81C,QAAS,CAACD,QAAD,CAAW,CACrD,IAAIr1C,UAAY,IAAAk1C,MAAA,EAChBl1C,UAAA+zC,UAAA,CAAsB,CAAA,CACtB/zC,UAAAqyC,OAAA,CAAmBgD,QACnBr1C,UAAAg0C,UAAA,CAAsBN,WAAAa,yBAAAC,eACtB,OAAOx0C,UAL8C,CAWzD0zC,YAAAtlE,UAAAuxB,YAAA,CAAoC41C,QAAS,CAACF,QAAD,CAAW,CACpD,IAAIr1C,UAAY,IAAAk1C,MAAA,EAChBl1C,UAAA+zC,UAAA,CAAsB,CAAA,CACtB/zC,UAAAqyC,OAAA,CAAmBgD,QACnBr1C,UAAAg0C,UAAA;AAAsBN,WAAAa,yBAAAiB,gBACtB,OAAOx1C,UAL6C,CAYxD0zC,YAAAtlE,UAAAoyB,QAAA,CAAgCi1C,QAAS,CAAC3xD,UAAD,CAAahZ,GAAb,CAAkB,CACvD,IAAIk1B,UAAY,IAAAk1C,MAAA,EAChBl1C,UAAA8zC,UAAA,CAAsB,CAAA,CACDp1D,KAAAA,EAArB,GAAMoF,UAAN,GACIA,UADJ,CACiB,IADjB,CAGAkc,UAAAi0C,iBAAA,CAA6BnwD,UAClB,KAAX,EAAIhZ,GAAJ,EACIk1B,SAAA6zC,cACA,CAD0B,CAAA,CAC1B,CAAA7zC,SAAAk0C,gBAAA,CAA4BppE,GAFhC,GAKIk1B,SAAA6zC,cACA,CAD0B,CAAA,CAC1B,CAAA7zC,SAAAk0C,gBAAA,CAA4B,EANhC,CAQA,OAAOl0C,UAfgD,CAsB3D0zC,YAAAtlE,UAAAsyB,MAAA,CAA8Bg1C,QAAS,CAAC5xD,UAAD,CAAahZ,GAAb,CAAkB,CACrD,IAAIk1B,UAAY,IAAAk1C,MAAA,EAChBl1C,UAAA4zC,QAAA,CAAoB,CAAA,CACCl1D,KAAAA,EAArB;AAAMoF,UAAN,GACIA,UADJ,CACiB,IADjB,CAGAkc,UAAAm0C,eAAA,CAA2BrwD,UACfpF,KAAAA,EAAZ,GAAI5T,GAAJ,EACIk1B,SAAA2zC,YACA,CADwB,CAAA,CACxB,CAAA3zC,SAAAo0C,cAAA,CAA0BtpE,GAF9B,GAKIk1B,SAAA2zC,YACA,CADwB,CAAA,CACxB,CAAA3zC,SAAAo0C,cAAA,CAA0B,EAN9B,CAQA,OAAOp0C,UAf8C,CAqBzD0zC,YAAAtlE,UAAA6xB,QAAA,CAAgC01C,QAAS,CAAC3vD,KAAD,CAAQ,CAC7C,IAAIga,UAAY,IAAAk1C,MAAA,EAChBl1C,UAAA/I,OAAA,CAAmBjR,KACnB,OAAOga,UAHsC,CAQjD0zC,YAAAtlE,UAAA8yB,eAAA,CAAuC00C,QAAS,EAAG,CAC/C,IAAIC,wBAA0BnC,WAAAa,yBAA9B,CACIvgE,IAAM,EACN,KAAA8/D,UAAJ,GACI9/D,GAAA,CAAI6hE,uBAAAC,kBAAJ,CACA;AADiD,IAAA7B,iBACjD,CAAI,IAAAJ,cAAJ,GACI7/D,GAAA,CAAI6hE,uBAAAE,iBAAJ,CADJ,CACoD,IAAA7B,gBADpD,CAFJ,CAMI,KAAAN,QAAJ,GACI5/D,GAAA,CAAI6hE,uBAAAG,gBAAJ,CACA,CAD+C,IAAA7B,eAC/C,CAAI,IAAAR,YAAJ,GACI3/D,GAAA,CAAI6hE,uBAAAI,eAAJ,CADJ,CACkD,IAAA7B,cADlD,CAFJ,CAMA,IAAI,IAAAL,UAAJ,CAAoB,CAChB//D,GAAA,CAAI6hE,uBAAAK,MAAJ,CAAA,CAAqC,IAAA7D,OACrC,KAAI8D,SAAW,IAAAnC,UACE,GAAjB,GAAImC,QAAJ,GAEQA,QAFR,CACQ,IAAA3D,eAAA,EAAJ,CACeqD,uBAAArB,eADf,CAIeqB,uBAAAL,gBALnB,CAQAxhE,IAAA,CAAI6hE,uBAAAO,UAAJ,CAAA;AAAyCD,QAXzB,CAchB,IAAAl/C,OAAJ,GAAoB9qB,cAApB,GACI6H,GAAA,CAAI6hE,uBAAAQ,MAAJ,CADJ,CACyC,IAAAp/C,OAAA9nB,SAAA,EADzC,CAGA,OAAO6E,IAhCwC,CAqCnD0/D,YAAAtlE,UAAAmnC,aAAA,CAAqC+gC,QAAS,EAAG,CAC7C,MAAO,EAAE,IAAAxC,UAAF,EAAoB,IAAAF,QAApB,EAAoC,IAAAG,UAApC,CADsC,CAMjDL,YAAAtlE,UAAAm1C,UAAA,CAAkCgzB,QAAS,EAAG,CAC1C,MAAO,KAAAhhC,aAAA,EAAP,EAA8B,IAAAte,OAA9B,EAA6C9qB,cADH,CAM9CunE,YAAAtlE,UAAAwmC,cAAA,CAAsC4hC,QAAS,EAAG,CAC9C,MAAI,KAAAjhC,aAAA,EAAJ,CACW,IAAI3J,aAAJ,CAAkB,IAAA3R,SAAA,EAAlB,CADX,CAGS,IAAAoD,SAAA,EAAJ,CACM,IAAI80C,aAAJ,CAAkB,IAAlB,CADN,CAIM,IAAIpB,YAAJ,CAAiB,IAAjB,CARmC,CAgBlD2C,YAAAtlE,UAAAk9D,4BAAA;AAAoDmL,QAAS,EAAG,CAC5D,IAAIC,eAAiBhD,WAAAiD,sBAArB,CACIC,GAAK,EACT,IAAI,IAAArzB,UAAA,EAAJ,CACI,MAAOqzB,GAGX,IAAI,IAAA3/C,OAAJ,GAAoB9qB,cAApB,CACI,IAAA8zB,QAAUy2C,cAAAvqE,eADd,KAGS,KAAA8qB,OAAJ,GAAoBzB,WAApB,CACDyK,OADC,CACSy2C,cAAAlhD,YADT,CAGI,IAAAyB,OAAJ,GAAoBjT,SAApB,CACDic,OADC,CACSy2C,cAAA1yD,UADT,EAIDzZ,IAAAC,OAAA,CAAY,IAAAysB,OAAZ,WAAmCf,UAAnC,CAA8C,0BAA9C,CACA,CAAA+J,OAAA,CAAU,IAAAhJ,OAAA9nB,SAAA,EALT,CAOLynE,GAAA,CAAGF,cAAAG,SAAH,CAAA,CAA8BtsE,IAAAmE,UAAA,CAAeuxB,OAAf,CAC1B,KAAA6zC,UAAJ,GACI8C,EAAA,CAAGF,cAAAI,SAAH,CACA,CAD8BvsE,IAAAmE,UAAA,CAAe,IAAAulE,iBAAf,CAC9B;AAAI,IAAAJ,cAAJ,GACI+C,EAAA,CAAGF,cAAAI,SAAH,CADJ,EACmC,GADnC,CACyCvsE,IAAAmE,UAAA,CAAe,IAAAwlE,gBAAf,CADzC,CAFJ,CAMI,KAAAN,QAAJ,GACIgD,EAAA,CAAGF,cAAAK,OAAH,CACA,CAD4BxsE,IAAAmE,UAAA,CAAe,IAAAylE,eAAf,CAC5B,CAAI,IAAAR,YAAJ,GACIiD,EAAA,CAAGF,cAAAK,OAAH,CADJ,EACiC,GADjC,CACuCxsE,IAAAmE,UAAA,CAAe,IAAA0lE,cAAf,CADvC,CAFJ,CAMI,KAAAL,UAAJ,GACQ,IAAAvB,eAAA,EAAJ,CACIoE,EAAA,CAAGF,cAAAM,eAAH,CADJ,CACwC,IAAA3E,OADxC,CAIIuE,EAAA,CAAGF,cAAAO,cAAH,CAJJ,CAIuC,IAAA5E,OAL3C,CAQA,OAAOuE,GAzCqD,CAiDhElD,YAAAa,yBAAA,CAAuC,CACnCuB,kBAAmB,IADgB,CAEnCC,iBAAkB,IAFiB,CAGnCC,gBAAiB,IAHkB;AAInCC,eAAgB,IAJmB,CAKnCC,MAAO,GAL4B,CAMnCE,UAAW,IANwB,CAOnC5B,eAAgB,GAPmB,CAQnCgB,gBAAiB,GARkB,CASnCa,MAAO,GAT4B,CAiBvC3C,YAAAiD,sBAAA,CAAoC,CAChCE,SAAU,SADsB,CAEhC1qE,eAAgB,WAFgB,CAGhCqpB,YAAa,QAHmB,CAIhCxR,UAAW,MAJqB,CAKhC8yD,SAAU,SALsB,CAMhCC,OAAQ,OANwB,CAOhCC,eAAgB,cAPgB,CAQhCC,cAAe,aARiB,CAepCvD,YAAAwD,QAAA,CAAsB,IAAIxD,WAC1B,OAAOA,YAhXkC,CAAZ,EAzwFjC,CA4oGIxmE,UAA2B,QAAS,CAACgW,MAAD,CAAS,CAa7ChW,QAASA,UAAS,CAACgvB,IAAD,CAAOpiB,IAAP,CAAa,CAE3B,GAAI,EAAEoiB,IAAF,WAAkBiwC,KAAlB,CAAJ,CACI,KAAU75D,MAAJ,CAAU,2DAAV,CAAN;AAIJ,MADQ4Q,OAAA8R,KAAA,CAAY,IAAZ,CAAkBkH,IAAlB,CAAwBpiB,IAAxB,CAA8B45D,WAAAwD,QAA9B,CAAmD,CAAA,CAAnD,CACR,EADqE,IAN1C,CAZ/BnpE,OAAAoV,UAAA,CAAkBjW,SAAlB,CAA6BgW,MAA7B,CAsBAhW,UAAAkB,UAAA6pB,OAAA,CAA6Bk/C,QAAS,EAAG,CACrC5sE,IAAA4V,iBAAA,CAAsB,eAAtB,CAAuC,CAAvC,CAA0C,CAA1C,CAA6ChP,SAAArF,OAA7C,CACA,OAAI,KAAAgO,KAAA1O,QAAA,EAAJ,CACW,IADX,CAGW,IAAA0O,KAAAnC,QAAA,EAL0B,CAWzCzK,UAAAkB,UAAA1C,MAAA,CAA4B0rE,QAAS,CAACt/D,mBAAD,CAAa,CAC9CvN,IAAA4V,iBAAA,CAAsB,iBAAtB,CAAyC,CAAzC,CAA4C,CAA5C,CAA+ChP,SAAArF,OAA/C,CACA,IAA0B,QAA1B,GAAI,MAAOgM,oBAAX,CACIA,mBAAA,CAAaI,MAAA,CAAOJ,mBAAP,CADjB,KAGK,IAAI,EAAEA,mBAAF,WAAwBlB,KAAxB,CAAJ,CACD,GAA6B,IAA7B;AAAI,IAAAkD,KAAAzC,SAAA,EAAJ,CACI,CAA6CS,IAAAA,WAAAA,mBA5kYrDA,WAAJ,GAEIA,UAFJ,CAEiBA,UAAAwF,QAAA,CAAmB,kBAAnB,CAAuC,GAAvC,CAFjB,CAIAoC,mBAAA,CAwkYmCnB,iBAxkYnC,CAwkYsDC,CAxkYtD,CAA2C1G,UAA3C,CAwkYqE2G,CAAAA,CAxkYrE,CAwkYY,CADJ,IAGIiB,mBAAA,CAAmB,iBAAnB,CAAsC,CAAtC,CAAyC5H,mBAAzC,CAAqD,CAAA,CAArD,CAER,OAAO,KAAI5K,SAAJ,CAAc,IAAAgvB,KAAd,CAAyB,IAAApiB,KAAApO,MAAA,CAAgBoM,mBAAhB,CAAzB,CAXuC,CAclD5K,UAAAkB,UAAAuqB,UAAA,CAAgC0+C,QAAS,EAAG,CACxC9sE,IAAA4V,iBAAA,CAAsB,kBAAtB,CAA0C,CAA1C,CAA6C,CAA7C,CAAgDhP,SAAArF,OAAhD,CACA,KAAIwrE,WAAa,IAAAx9D,KAAAxB,OAAA,EACjB,OAAsB,KAAf,GAAAg/D,UAAA,CAAsB,IAAtB,CAA6B,IAAIpqE,SAAJ,CAAc,IAAAgvB,KAAd;AAAyBo7C,UAAzB,CAHI,CAM5CpqE,UAAAkB,UAAAmpE,QAAA,CAA8BC,QAAS,EAAG,CACtCjtE,IAAA4V,iBAAA,CAAsB,gBAAtB,CAAwC,CAAxC,CAA2C,CAA3C,CAA8ChP,SAAArF,OAA9C,CAEA,KADA,IAAI4sB,IAAM,IACV,CAA2B,IAA3B,GAAOA,GAAAC,UAAA,EAAP,CAAA,CACID,GAAA,CAAMA,GAAAC,UAAA,EAEV,OAAOD,IAN+B,CAS1CxrB,UAAAkB,UAAAqpE,aAAA,CAAmCC,QAAS,EAAG,CAC3C,MAAO,KAAAx7C,KAAAy7C,SADoC,CAQ/CzqE,UAAAkB,UAAAC,IAAA,CAA0BupE,QAAS,CAAChJ,MAAD,CAAS1uD,UAAT,CAAqB,CACpD3V,IAAA4V,iBAAA,CAAsB,eAAtB,CAAuC,CAAvC,CAA0C,CAA1C,CAA6ChP,SAAArF,OAA7C,CACA6T,qBAAA,CAAqB,eAArB,CAAsC,IAAA7F,KAAtC,CACAwE,wBAAA,CAAwB,eAAxB,CAAyC,CAAzC,CAA4CswD,MAA5C,CAAoD,IAAA90D,KAApD,CAA+D,CAAA,CAA/D,CACAvP,KAAA6V,iBAAA,CAAsB,eAAtB;AAAuC,CAAvC,CAA0CF,UAA1C,CAAsD,CAAA,CAAtD,CACA,KAAIG,SAAW,IAAI9V,IAAA+V,SACnB,KAAA4b,KAAArb,gBAAA,CAA0B,IAAA/G,KAA1B,CAAqC80D,MAArC,CACc,IADd,CACoBvuD,QAAAG,aAAA,CAAsBN,UAAtB,CADpB,CAEA,OAAOG,SAAAI,QAR6C,CAexDvT,UAAAkB,UAAAuC,OAAA,CAA6BknE,QAAS,CAAC52D,aAAD,CAAgBf,UAAhB,CAA4B,CAC9D3V,IAAA4V,iBAAA,CAAsB,kBAAtB,CAA0C,CAA1C,CAA6C,CAA7C,CAAgDhP,SAAArF,OAAhD,CACA6T,qBAAA,CAAqB,kBAArB,CAAyC,IAAA7F,KAAzC,CACA,IAAIpP,KAAA4G,QAAA,CAAc2P,aAAd,CAAJ,CAAkC,CAE9B,IADA,IAAIC,iBAAmB,EAAvB,CACS7P,EAAI,CAAb,CAAgBA,CAAhB,CAAoB4P,aAAAnV,OAApB,CAA0C,EAAEuF,CAA5C,CACI6P,gBAAA,CAAiB,EAAjB,CAAsB7P,CAAtB,CAAA,CAA2B4P,aAAA,CAAc5P,CAAd,CAE/B4P,cAAA,CAAgBC,gBAChB3O,KAAA,CAAK,sMAAL,CAN8B,CAWlC8M,4BAAA,CAA6B,kBAA7B;AAAiD,CAAjD,CAAoD4B,aAApD,CAAmE,IAAAnH,KAAnE,CAA8E,CAAA,CAA9E,CACAvP,KAAA6V,iBAAA,CAAsB,kBAAtB,CAA0C,CAA1C,CAA6CF,UAA7C,CAAyD,CAAA,CAAzD,CACIG,iBAAAA,CAAW,IAAI9V,IAAA+V,SACnB,KAAA4b,KAAAvrB,OAAA,CAAiB,IAAAmJ,KAAjB,CAA4BmH,aAA5B,CAA2CZ,gBAAAG,aAAA,CAAsBN,UAAtB,CAA3C,CACA,OAAOG,iBAAAI,QAlBuD,CA0BlEvT,UAAAkB,UAAAyS,gBAAA,CAAsCi3D,QAAS,CAAClJ,MAAD,CAASx8C,WAAT,CAAsBlS,UAAtB,CAAkC,CAC7E3V,IAAA4V,iBAAA,CAAsB,2BAAtB,CAAmD,CAAnD,CAAsD,CAAtD,CAAyDhP,SAAArF,OAAzD,CACA6T,qBAAA,CAAqB,2BAArB,CAAkD,IAAA7F,KAAlD,CACAwE,wBAAA,CAAwB,2BAAxB,CAAqD,CAArD;AAAwDswD,MAAxD,CAAgE,IAAA90D,KAAhE,CAA2E,CAAA,CAA3E,CACAwF,iBAAA,CAAiB,2BAAjB,CAA8C,CAA9C,CAAiD8S,WAAjD,CAA8D,CAAA,CAA9D,CACA7nB,KAAA6V,iBAAA,CAAsB,2BAAtB,CAAmD,CAAnD,CAAsDF,UAAtD,CAAkE,CAAA,CAAlE,CACA,IAAsB,SAAtB,GAAI,IAAA+X,OAAA,EAAJ,EAAqD,OAArD,GAAmC,IAAAA,OAAA,EAAnC,CACI,KAAM,oCAAN,CACI,IAAAA,OAAA,EADJ,CAEI,yBAFJ,CAGJ,IAAI5X,SAAW,IAAI9V,IAAA+V,SACnB,KAAA4b,KAAArb,gBAAA,CAA0B,IAAA/G,KAA1B,CAAqC80D,MAArC,CAA6Cx8C,WAA7C,CAA0D/R,QAAAG,aAAA,CAAsBN,UAAtB,CAA1D,CACA,OAAOG,SAAAI,QAZsE,CAkBjFvT,UAAAkB,UAAAY,OAAA,CAA6B+oE,QAAS,CAAC73D,UAAD,CAAa,CAC/C3V,IAAA4V,iBAAA,CAAsB,kBAAtB;AAA0C,CAA1C,CAA6C,CAA7C,CAAgDhP,SAAArF,OAAhD,CACA6T,qBAAA,CAAqB,kBAArB,CAAyC,IAAA7F,KAAzC,CACAvP,KAAA6V,iBAAA,CAAsB,kBAAtB,CAA0C,CAA1C,CAA6CF,UAA7C,CAAyD,CAAA,CAAzD,CACA,OAAO,KAAA7R,IAAA,CAAS,IAAT,CAAe6R,UAAf,CAJwC,CAYnDhT,UAAAkB,UAAA4pE,YAAA,CAAkCC,QAAS,CAACC,iBAAD,CAAoBh4D,UAApB,CAAgCi4D,YAAhC,CAA8C,CACrF5tE,IAAA4V,iBAAA,CAAsB,uBAAtB,CAA+C,CAA/C,CAAkD,CAAlD,CAAqDhP,SAAArF,OAArD,CACA6T,qBAAA,CAAqB,uBAArB,CAA8C,IAAA7F,KAA9C,CACAvP,KAAA6V,iBAAA,CAAsB,uBAAtB,CAA+C,CAA/C,CAAkD83D,iBAAlD,CAAqE,CAAA,CAArE,CACA3tE,KAAA6V,iBAAA,CAAsB,uBAAtB,CAA+C,CAA/C,CAAkDF,UAAlD;AAA8D,CAAA,CAA9D,CA5pYJ,IAAyBxB,IAAAA,EAAzB,GA+pYgDy5D,YA/pYhD,EAEoB,SAFpB,GAEI,MA6pY4CA,aA/pYhD,CAGI,KAAU7lE,MAAJ,CAAU/H,IAAAqU,YAAA,CA4pYAL,uBA5pYA,CA4pYyBC,CA5pYzB,CA4pY0CC,CAAAA,CA5pY1C,CAAV,CAA+D,oBAA/D,CAAN,CA6pYA,GAAsB,SAAtB,GAAI,IAAAwZ,OAAA,EAAJ,EAAqD,OAArD,GAAmC,IAAAA,OAAA,EAAnC,CACI,KAAM,gCAAN,CACI,IAAAA,OAAA,EADJ,CAEI,yBAFJ,CAGiBvZ,IAAAA,EAArB,GAAIy5D,YAAJ,GACIA,YADJ,CACmB,CAAA,CADnB,CAEA,KAAI93D,SAAW,IAAI9V,IAAA+V,SACO,WAA1B,GAAI,MAAOJ,WAAX,EACIG,QAAAI,QAAA0e,MAAA,CAAuB,QAAS,EAAG,EAAnC,CAaJ,KAAAjD,KAAAk8C,iBAAA,CAA2B,IAAAt+D,KAA3B,CAAsCo+D,iBAAtC,CAXsBG,QAAS,CAACjmE,KAAD,CAAQiP,SAAR,CAAmBC,QAAnB,CAA6B,CACpDlP,KAAJ;AACIiO,QAAAkf,OAAA,CAAgBntB,KAAhB,CADJ,CAIIiO,QAAAgf,QAAA,CAAiB,IAAIje,iBAAJ,CAAsBC,SAAtB,CAAiCC,QAAjC,CAAjB,CAEsB,WAA1B,GAAI,MAAOpB,WAAX,EACIA,UAAA,CAAW9N,KAAX,CAAkBiP,SAAlB,CAA6BC,QAA7B,CARoD,CAW5D,CAA0E62D,YAA1E,CACA,OAAO93D,SAAAI,QA9B8E,CAqCzFvT,UAAAkB,UAAAkqE,YAAA,CAAkCC,QAAS,CAACnuE,QAAD,CAAW8V,UAAX,CAAuB,CAC9D3V,IAAA4V,iBAAA,CAAsB,uBAAtB,CAA+C,CAA/C,CAAkD,CAAlD,CAAqDhP,SAAArF,OAArD,CACA6T,qBAAA,CAAqB,uBAArB,CAA8C,IAAA7F,KAA9C,CACAwF,iBAAA,CAAiB,uBAAjB,CAA0C,CAA1C,CAA6ClV,QAA7C,CAAuD,CAAA,CAAvD,CACAG,KAAA6V,iBAAA,CAAsB,uBAAtB,CAA+C,CAA/C,CAAkDF,UAAlD,CAA8D,CAAA,CAA9D,CACA,KAAIG;AAAW,IAAI9V,IAAA+V,SACnB,KAAA4b,KAAArb,gBAAA,CAA0B,IAAA/G,KAAApO,MAAA,CAAgB,WAAhB,CAA1B,CAAwDtB,QAAxD,CAAkE,IAAlE,CAAwEiW,QAAAG,aAAA,CAAsBN,UAAtB,CAAxE,CACA,OAAOG,SAAAI,QAPuD,CAclEvT,UAAAkB,UAAAxC,KAAA,CAA2B4sE,QAAS,CAAC7qE,KAAD,CAAQuS,UAAR,CAAoB,CACpD3V,IAAA4V,iBAAA,CAAsB,gBAAtB,CAAwC,CAAxC,CAA2C,CAA3C,CAA8ChP,SAAArF,OAA9C,CACA6T,qBAAA,CAAqB,gBAArB,CAAuC,IAAA7F,KAAvC,CACAwE,wBAAA,CAAwB,gBAAxB,CAA0C,CAA1C,CAA6C3Q,KAA7C,CAAoD,IAAAmM,KAApD,CAA+D,CAAA,CAA/D,CACAvP,KAAA6V,iBAAA,CAAsB,gBAAtB,CAAwC,CAAxC,CAA2CF,UAA3C,CAAuD,CAAA,CAAvD,CACA,KAAI0B,IAAM,IAAAsa,KAAAoxC,WAAA,EAAV,CACItjE,KAAOyX,UAAA,CAAWG,GAAX,CAMP62D,IAAAA,CAAmB,IAAA/sE,MAAA,CAAW1B,IAAX,CACvB;IAAI0uE,QAAU,IAAAhtE,MAAA,CAAW1B,IAAX,CAGVyW,KAAA,CADS,IAAb,EAAI9S,KAAJ,CACc8qE,GAAApqE,IAAA,CAAqBV,KAArB,CAA4BuS,UAA5B,CAAA4lC,KAAA,CAA6C,QAAS,EAAG,CAAE,MAAO4yB,QAAT,CAAzD,CADd,CAIc3yB,OAAA1mB,QAAA,CAAgBq5C,OAAhB,CAEdD,IAAA3yB,KAAA,CAAwBrlC,IAAAqlC,KAAA9zC,KAAA,CAAkByO,IAAlB,CACxBg4D,IAAAt5C,MAAA,CAAyB1e,IAAAqlC,KAAA9zC,KAAA,CAAkByO,IAAlB,CAA2B/B,IAAAA,EAA3B,CACC,WAA1B,GAAI,MAAOwB,WAAX,EACIO,IAAA0e,MAAA,CAAc,QAAS,EAAG,EAA1B,CAEJ,OAAOs5C,IA1B6C,CA+BxDvrE,UAAAkB,UAAA0/C,aAAA,CAAmC6qB,QAAS,EAAG,CAC3Ch5D,oBAAA,CAAqB,wBAArB,CAA+C,IAAA7F,KAA/C,CACA,OAAO,KAAIgG,YAAJ,CAAiB,IAAAoc,KAAjB,CAA4B,IAAApiB,KAA5B,CAFoC,CAI/CrM,OAAAC,eAAA,CAAsBR,SAAAkB,UAAtB,CAA2C,UAA3C,CAAuD,CACnDO,IAAKA,QAAS,EAAG,CACb,MAAO,KAAA8oE,aAAA,EADM,CADkC;AAInDtgE,WAAY,CAAA,CAJuC,CAKnDC,aAAc,CAAA,CALqC,CAAvD,CAOA3J,OAAAC,eAAA,CAAsBR,SAAAkB,UAAtB,CAA2C,KAA3C,CAAkD,CAC9CO,IAAKA,QAAS,EAAG,CACb,MAAO,KAAAspB,OAAA,EADM,CAD6B,CAI9C9gB,WAAY,CAAA,CAJkC,CAK9CC,aAAc,CAAA,CALgC,CAAlD,CAOA3J,OAAAC,eAAA,CAAsBR,SAAAkB,UAAtB,CAA2C,QAA3C,CAAqD,CACjDO,IAAKA,QAAS,EAAG,CACb,MAAO,KAAAgqB,UAAA,EADM,CADgC,CAIjDxhB,WAAY,CAAA,CAJqC,CAKjDC,aAAc,CAAA,CALmC,CAArD,CAOA3J,OAAAC,eAAA,CAAsBR,SAAAkB,UAAtB,CAA2C,MAA3C,CAAmD,CAC/CO,IAAKA,QAAS,EAAG,CACb,MAAO,KAAA4oE,QAAA,EADM,CAD8B,CAI/CpgE,WAAY,CAAA,CAJmC,CAK/CC,aAAc,CAAA,CALiC,CAAnD,CAOA,OAAOlK,UAhQsC,CAAlB,CAiQ7BC,KAjQ6B,CAwQ/BA,MAAA8uB,uBAAA,CAA+B/uB,SAC/BypC,UAAA1a,uBAAA,CAAmC/uB,SAqBnC;IAAI0rE,SAA0B,QAAS,EAAG,CAQtC,MAPAA,SAAiB,EAAG,CAGhB,IAAA7zC,SAAA,CAAgB,EAChB,KAAA8zC,WAAA,CAAkB,CAClB,KAAAlrE,MAAA,CAAa,IALG,CADkB,CAAZ,EAA9B,CAeImrE,KAAsB,QAAS,EAAG,CAOlCA,QAASA,KAAI,CAACC,KAAD,CAAQC,OAAR,CAAiBjiD,KAAjB,CAAwB,CACnB,IAAK,EAAnB,GAAIgiD,KAAJ,GAAwBA,KAAxB,CAAgC,EAAhC,CACgB,KAAK,EAArB,GAAIC,OAAJ,GAA0BA,OAA1B,CAAoC,IAApC,CACc,KAAK,EAAnB,GAAIjiD,KAAJ,GAAwBA,KAAxB,CAAgC,IAAI6hD,QAApC,CACA,KAAAG,MAAA,CAAaA,KACb,KAAAC,QAAA,CAAeA,OACf,KAAAjiD,MAAA,CAAaA,KANoB,CAcrC+hD,IAAA1qE,UAAA6qE,QAAA,CAAyBC,QAAS,CAACC,OAAD,CAAU,CAEpCr/D,OAAAA,CAAOq/D,OAAA,WAAmBviE,KAAnB,CAA0BuiE,OAA1B,CAAoC,IAAIviE,IAAJ,CAASuiE,OAAT,CAE/C,KAJwC,IAGpCztE,MAAQ,IAH4B,CAGtBilB,IAClB,CAAoC,IAApC,IAAQA,IAAR,CAAe7W,OAAAzC,SAAA,EAAf,EAAA,CAA0C,CACtC,IAAInM,UAAYX,IAAA2lB,QAAA,CAAaxkB,KAAAqrB,MAAAgO,SAAb;AAAmCpU,IAAnC,CAAZzlB,EAAwD,IAAI0tE,QAChEltE,MAAA,CAAQ,IAAIotE,IAAJ,CAASnoD,IAAT,CAAejlB,KAAf,CAAsBR,SAAtB,CACR4O,QAAA,CAAOA,OAAArC,SAAA,EAH+B,CAK1C,MAAO/L,MATiC,CAgB5CotE,KAAA1qE,UAAAgY,SAAA,CAA0BgzD,QAAS,EAAG,CAClC,MAAO,KAAAriD,MAAAppB,MAD2B,CAQtCmrE,KAAA1qE,UAAAirE,SAAA,CAA0BC,QAAS,CAAC3rE,KAAD,CAAQ,CACvCpD,IAAAC,OAAA,CAA6B,WAA7B,GAAY,MAAOmD,MAAnB,CAA0C,+BAA1C,CACA,KAAAopB,MAAAppB,MAAA,CAAmBA,KACnB,KAAA4rE,eAAA,EAHuC,CAQ3CT,KAAA1qE,UAAA8zB,MAAA,CAAuBs3C,QAAS,EAAG,CAC/B,IAAAziD,MAAAppB,MAAA,CAAmB,IACnB,KAAAopB,MAAAgO,SAAA,CAAsB,EACtB,KAAAhO,MAAA8hD,WAAA,CAAwB,CACxB,KAAAU,eAAA,EAJ+B,CASnCT,KAAA1qE,UAAA2pB,YAAA,CAA6B0hD,QAAS,EAAG,CACrC,MAA+B,EAA/B,CAAO,IAAA1iD,MAAA8hD,WAD8B,CAMzCC;IAAA1qE,UAAAhD,QAAA,CAAyBsuE,QAAS,EAAG,CACjC,MAA2B,KAA3B,GAAO,IAAAtzD,SAAA,EAAP,EAAmC,CAAC,IAAA2R,YAAA,EADH,CAQrC+gD,KAAA1qE,UAAA0X,aAAA,CAA8B6zD,QAAS,CAAC1zD,MAAD,CAAS,CAC5C,IAAIkL,MAAQ,IACZ5mB,KAAAM,QAAA,CAAa,IAAAksB,MAAAgO,SAAb,CAAkC,QAAS,CAACr5B,KAAD,CAAQ8jB,SAAR,CAAmB,CAC1DvJ,MAAA,CAAO,IAAI6yD,IAAJ,CAASptE,KAAT,CAAgBylB,KAAhB,CAAuB3B,SAAvB,CAAP,CAD0D,CAA9D,CAF4C,CAehDspD,KAAA1qE,UAAAwrE,kBAAA,CAAmCC,QAAS,CAAC5zD,MAAD,CAAS6zD,WAAT,CAAsBC,aAAtB,CAAqC,CACzED,WAAJ,EAAmB,CAACC,aAApB,EACI9zD,MAAA,CAAO,IAAP,CACJ,KAAAH,aAAA,CAAkB,QAAS,CAACpa,KAAD,CAAQ,CAC/BA,KAAAkuE,kBAAA,CAAwB3zD,MAAxB,CAAiD,CAAA,CAAjD,CAAuD8zD,aAAvD,CAD+B,CAAnC,CAGID,YAAJ,EAAmBC,aAAnB,EACI9zD,MAAA,CAAO,IAAP,CAPyE,CAiBjF6yD,KAAA1qE,UAAA4rE,gBAAA;AAAiCC,QAAS,CAACh0D,MAAD,CAAS6zD,WAAT,CAAsB,CAE5D,IADI73D,WACJ,CADW63D,WAAA,CAAc,IAAd,CAAqB,IAAAxhE,OAAA,EAChC,CAAgB,IAAhB,GAAO2J,WAAP,CAAA,CAAsB,CAClB,GAAIgE,MAAA,CAAOhE,WAAP,CAAJ,CACI,MAAO,CAAA,CAEXA,YAAA,CAAOA,WAAA3J,OAAA,EAJW,CAMtB,MAAO,CAAA,CARqD,CAiBhEwgE,KAAA1qE,UAAA8rE,oCAAA,CAAqDC,QAAS,CAACl0D,MAAD,CAAS,CACnE,IAAAH,aAAA,CAAkB,QAAS,CAACpa,KAAD,CAAQ,CACN,IAAzB,GAAIA,KAAA0a,SAAA,EAAJ,CACIH,MAAA,CAAOva,KAAP,CADJ,CAGIA,KAAAwuE,oCAAA,CAA0Cj0D,MAA1C,CAJ2B,CAAnC,CADmE,CAWvE6yD,KAAA1qE,UAAA0L,KAAA,CAAsBsgE,QAAS,EAAG,CAC9B,MAAO,KAAIxjE,IAAJ,CAA0B,IAAjB,GAAA,IAAAoiE,QAAA,CACV,IAAAD,MADU,CAEV,IAAAC,QAAAl/D,KAAA,EAFU,CAEY,GAFZ,CAEkB,IAAAi/D,MAF3B,CADuB,CAQlCD,KAAA1qE,UAAApE,KAAA,CAAsBqwE,QAAS,EAAG,CAC9B,MAAO,KAAAtB,MADuB,CAMlCD;IAAA1qE,UAAAkK,OAAA,CAAwBgiE,QAAS,EAAG,CAChC,MAAO,KAAAtB,QADyB,CAQpCF,KAAA1qE,UAAAmrE,eAAA,CAAgCgB,QAAS,EAAG,CACnB,IAArB,GAAI,IAAAvB,QAAJ,EACI,IAAAA,QAAAwB,aAAA,CAA0B,IAAAzB,MAA1B,CAAsC,IAAtC,CAFoC,CAW5CD,KAAA1qE,UAAAosE,aAAA,CAA8BC,QAAS,CAAC11D,SAAD,CAAYrZ,KAAZ,CAAmB,CACtD,IAAIgvE,WAAahvE,KAAAN,QAAA,EAAjB,CACIuvE,YAAcpwE,IAAAS,SAAA,CAAc,IAAA+rB,MAAAgO,SAAd,CAAmChgB,SAAnC,CACd21D,WAAJ,EAAkBC,WAAlB,EACI,OAAO,IAAA5jD,MAAAgO,SAAA,CAAoBhgB,SAApB,CAEP,CADA,IAAAgS,MAAA8hD,WAAA,EACA,CAAA,IAAAU,eAAA,EAHJ,EAKUmB,UALV,EAKyBC,WALzB,GAMI,IAAA5jD,MAAAgO,SAAA,CAAoBhgB,SAApB,CAEA,CAFiCrZ,KAAAqrB,MAEjC,CADA,IAAAA,MAAA8hD,WAAA,EACA;AAAA,IAAAU,eAAA,EARJ,CAHsD,CAc1D,OAAOT,KAvL2B,CAAZ,EAf1B,CAgOI8B,iBACH,UAAS,CAACA,iBAAD,CAAoB,CAI1BA,iBAAA,CAAkBA,iBAAA,IAAlB,CAA6C,CAA7C,CAAA,CAAkD,KAGlDA,kBAAA,CAAkBA,iBAAA,KAAlB,CAA8C,CAA9C,CAAA,CAAmD,MAGnDA,kBAAA,CAAkBA,iBAAA,UAAlB,CAAmD,CAAnD,CAAA,CAAwD,WAGxDA,kBAAA,CAAkBA,iBAAA,iBAAlB,CAA0D,CAA1D,CAAA,CAA+D,kBAE/DA,kBAAA,CAAkBA,iBAAA,YAAlB,CAAqD,CAArD,CAAA,CAA0D,aAfhC,CAA7B,CAAD,CAgBGA,iBAhBH,GAgByBA,iBAhBzB,CAgB6C,EAhB7C,EAwBAzO,KAAA0O,yBAAA,CAAgC,EAKhC1O,KAAA/9D,UAAA0+D,mBAAA,CAAoCgO,QAAS,EAAG,CAO5C,IAAAC,sBAAA;AAA6B,IAAIjC,IAPW,CAiBhD3M,KAAA/9D,UAAAgqE,iBAAA,CAAkC4C,QAAS,CAAClhE,IAAD,CAAOo+D,iBAAP,CAA0Bh4D,UAA1B,CAAsCi4D,YAAtC,CAAoD,CAC3F,IAAA5qB,KAAA,CAAU,iBAAV,CAA8BzzC,IAA9B,CAEA,KAAImhE,cAAgBA,QAAS,EAAG,EAAhC,CACIC,SAAW,IAAIhuE,SAAJ,CAAc,IAAd,CAAoB4M,IAApB,CACfohE,SAAAv9C,GAAA,CAAY,OAAZ,CAAqBs9C,aAArB,CAKIjD,kBAAAA,CAAc,CACdl+D,KAAMA,IADQ,CAEdnJ,OAAQunE,iBAFM,CAGdh4D,WAAYA,UAHE,CAKd4jC,OAAQ,IALM,CAOdq3B,MAAO/qE,aAAA,EAPO,CASd+nE,aAAcA,YATA,CAWdiD,WAAY,CAXE,CAadC,UAjBYA,QAAS,EAAG,CACxBH,QAAAx8C,IAAA,CAAa,OAAb,CAAsBu8C,aAAtB,CADwB,CAIV,CAedK,YAAa,IAfC,CAgBdC,eAAgB,IAhBF,CAiBdC,qBAAsB,IAjBR;AAkBdC,yBAA0B,IAlBZ,CAmBdC,8BAA+B,IAnBjB,CAsBdC,WAAAA,CAAe,IAAAC,gBAAA,CAAqB9hE,IAArB,CACnBk+D,kBAAAwD,qBAAA,CAAmCG,UAC/B/M,WAAAA,CAASoJ,iBAAArnE,OAAA,CAAmBgrE,UAAAhnE,IAAA,EAAnB,CACb,IAAe+J,IAAAA,EAAf,GAAIkwD,UAAJ,CAEIoJ,iBAAAqD,UAAA,EAGA,CAFArD,iBAAAyD,yBAEA,CAFuC,IAEvC,CADAzD,iBAAA0D,8BACA,CAD4C,IAC5C,CAAI1D,iBAAA93D,WAAJ,GAEQoB,IACJ,CADe,IAAIwV,YAAJ,CAAiBkhD,iBAAAwD,qBAAjB,CAAmD,IAAItuE,SAAJ,CAAc,IAAd,CAAoB8qE,iBAAAl+D,KAApB,CAAnD,CAA0F3N,cAA1F,CACf;AAAA6rE,iBAAA93D,WAAA,CAAuB,IAAvB,CAA6B,CAAA,CAA7B,CAAoCoB,IAApC,CAHJ,CALJ,KAWK,CACD3C,oBAAA,CAAqB,oCAArB,CAA2DiwD,UAA3D,CAAmEoJ,iBAAAl+D,KAAnE,CAEAk+D,kBAAAl0B,OAAA,CAAqB82B,iBAAAiB,IACjBC,aAAAA,CAAY,IAAAf,sBAAA9B,QAAA,CAAmCn/D,IAAnC,CAChB,KAAIiiE,UAAYD,YAAA11D,SAAA,EAAZ21D,EAAoC,EACxCA,UAAAnwE,KAAA,CAAeosE,iBAAf,CACA8D,aAAAzC,SAAA,CAAmB0C,SAAnB,CAIIC,UAAAA,CAAkB,IAAK,EACL,SAAtB,GAAI,MAAOpN,WAAX,EACe,IADf,GACIA,UADJ,EAEIrkE,IAAAS,SAAA,CAAc4jE,UAAd,CAAsB,WAAtB,CAFJ,EAGIoN,SACA,CADkBzxE,IAAA2lB,QAAA,CAAa0+C,UAAb,CAAqB,WAArB,CAClB;AAAArkE,IAAAC,OAAA,CAAY6T,eAAA,CAAgB29D,SAAhB,CAAZ,CAA8C,kHAA9C,CAJJ,EAUIA,SAVJ,CAUsBrwE,CAFA,IAAAwhE,gBAAAz8B,uBAAA,CAA4C52B,IAA5C,CAEAnO,EADdtB,YAAAC,WACcqB,aAAA,EAAAgJ,IAAA,EAGlB8uB,aAAAA,CAAe,IAAAiqC,qBAAA,EACfmB,WAAAA,CAAoB3kE,cAAA,CAAe0kE,UAAf,CAAuBoN,SAAvB,CACpBt5D,aAAAA,CAAUkhB,4BAAA,CAA6BirC,UAA7B,CAAgDprC,YAAhD,CACdu0C,kBAAAyD,yBAAA,CAAuC5M,UACvCmJ,kBAAA0D,8BAAA;AAA4Ch5D,YAC5Cs1D,kBAAAuD,eAAA,CAA6B,IAAA9M,gBAAA,EACzBh7B,kBAAAA,CAAS,IAAA05B,gBAAAtuB,mBAAA,CAAwC/kC,IAAxC,CAA8C4I,YAA9C,CAAuDs1D,iBAAAuD,eAAvD,CAAmFvD,iBAAAG,aAAnF,CACb,KAAA7L,YAAA5iB,0BAAA,CAA2C5vC,IAA3C,CAAiD25B,iBAAjD,CACA,KAAAwoC,uBAAA,EAjCC,CA9CsF,CAwF/F9P,KAAA/9D,UAAAwtE,gBAAA,CAAiCM,QAAS,CAACpiE,IAAD,CAAOqiE,WAAP,CAAoB,CAC1D,MAAQ,KAAAhP,gBAAAz8B,uBAAA,CAA4C52B,IAA5C,CAAkDqiE,WAAlD,CAAR,EACI9xE,YAAAC,WAFsD,CAc9D6hE,KAAA/9D,UAAA6tE,uBAAA,CAAwCG,QAAS,CAACn6D,IAAD,CAAO,CACpD,IAAIkP;AAAQ,IACC,KAAK,EAAlB,GAAIlP,IAAJ,GAAuBA,IAAvB,CAA8B,IAAA84D,sBAA9B,CAEK94D,KAAL,EACI,IAAAo6D,qCAAA,CAA0Cp6D,IAA1C,CAEJ,IAAwB,IAAxB,GAAIA,IAAAmE,SAAA,EAAJ,CAA8B,CAC1B,IAAIk2D,MAAQ,IAAAC,uBAAA,CAA4Bt6D,IAA5B,CACZ1X,KAAAC,OAAA,CAA2B,CAA3B,CAAY8xE,KAAAxwE,OAAZ,CAA8B,uCAA9B,CACawwE,MAAAxgD,MAAA0gD,CAAY,QAAS,CAACxE,WAAD,CAAc,CAAE,MAAOA,YAAAl0B,OAAP,GAA8B82B,iBAAAiB,IAAhC,CAAnCW,CAEb,EACI,IAAAC,sBAAA,CAA2Bx6D,IAAAnI,KAAA,EAA3B,CAAwCwiE,KAAxC,CANsB,CAA9B,IASSr6D,KAAA8V,YAAA,EAAJ,EACD9V,IAAA6D,aAAA,CAAkB,QAAS,CAAC5a,SAAD,CAAY,CACnCimB,KAAA8qD,uBAAA,CAA6B/wE,SAA7B,CADmC,CAAvC,CAjBgD,CA6BxDihE,KAAA/9D,UAAAquE,sBAAA;AAAuCC,QAAS,CAAC5iE,IAAD,CAAOwiE,KAAP,CAAc,CAC1D,IAAInrD,MAAQ,IAAZ,CAEIwrD,aAAeL,KAAAlrD,IAAA,CAAU,QAAS,CAACwrD,GAAD,CAAM,CACxC,MAAOA,IAAArB,eADiC,CAAzB,CAFnB,CAKIsB,YAAc,IAAAjB,gBAAA,CAAqB9hE,IAArB,CAA2B6iE,YAA3B,CACdG,aAAAA,CAAaD,WACbE,YAAAA,CAAaF,WAAAx2D,KAAA,EACjB,KAAK,IAAIhV,WAAI,CAAb,CAAgBA,UAAhB,CAAoBirE,KAAAxwE,OAApB,CAAkCuF,UAAA,EAAlC,CAAuC,CACnC,IAAIurE,IAAMN,KAAA,CAAMjrE,UAAN,CACV9G,KAAAC,OAAA,CAAYoyE,GAAA94B,OAAZ,GAA2B82B,iBAAAiB,IAA3B,CAAkD,+DAAlD,CACAe,IAAA94B,OAAA,CAAa82B,iBAAAoC,KACbJ,IAAAxB,WAAA,EACA,KAAIviE,aAAejC,IAAAiC,aAAA,CAAkBiB,IAAlB,CAAwB8iE,GAAA9iE,KAAxB,CAEnBgjE;YAAA,CAAaA,YAAAt3D,YAAA,CAAuB3M,YAAvB,CAAyD+jE,GAAAnB,yBAAzD,CAPsB,CASnCwB,YAAAA,CAAaH,YAAAnoE,IAAA,CAAe,CAAA,CAAf,CAGjB,KAAAszC,QAAAgZ,IAAA,CAFiBnnD,IAEA3K,SAAA,EAAjB,CAAwC8tE,YAAxC,CAAoD,QAAS,CAACn5B,MAAD,CAAS,CAClE3yB,KAAAo8B,KAAA,CAAW,0BAAX,CAAuC,CACnCzzC,KAJSA,IAIH3K,SAAA,EAD6B,CAEnC20C,OAAQA,MAF2B,CAAvC,CAIA,KAAIrQ,OAAS,EACb,IAAe,IAAf,GAAIqQ,MAAJ,CAAqB,CAGb3lB,MAAAA,CAAY,EAChB,KAAK,IAAI9sB,EAAI,CAAb,CAAgBA,CAAhB,CAAoBirE,KAAAxwE,OAApB,CAAkCuF,CAAA,EAAlC,CAAuC,CACnCirE,KAAA,CAAMjrE,CAAN,CAAAyyC,OAAA,CAAkB82B,iBAAAsC,UAClBzpC,OAAA,CAASA,MAAAthC,OAAA,CAAcgf,KAAAg8C,gBAAA/tB,aAAA,CAAmCk9B,KAAA,CAAMjrE,CAAN,CAAAkqE,eAAnC,CAAd,CACT,IAAIe,KAAA,CAAMjrE,CAAN,CAAA6O,WAAJ,CAAyB,CAErB,IAAI+B,KAAOq6D,KAAA,CAAMjrE,CAAN,CAAAqqE,8BAAX;AACIhjD,IAAM,IAAIxrB,SAAJ,CAAcikB,KAAd,CAAqBmrD,KAAA,CAAMjrE,CAAN,CAAAyI,KAArB,CACNwH,KAAAA,CAAW,IAAIwV,YAAJ,CAAiB7U,IAAjB,CAAuByW,GAAvB,CAA4BvsB,cAA5B,CACfgyB,OAAAvyB,KAAA,CAAe0wE,KAAA,CAAMjrE,CAAN,CAAA6O,WAAAlO,KAAA,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,CAAA,CAArC,CAA2CsP,IAA3C,CAAf,CALqB,CAOzBg7D,KAAA,CAAMjrE,CAAN,CAAAgqE,UAAA,EAVmC,CAavClqD,KAAAkrD,qCAAA,CAA2ClrD,KAAA4pD,sBAAA9B,QAAA,CAAoCn/D,IAApC,CAA3C,CAEAqX,MAAA8qD,uBAAA,EACA9qD,MAAAm7C,YAAA5iB,0BAAA,CAA4C5vC,IAA5C,CAAkD25B,MAAlD,CAEA,KAASpiC,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB8sB,MAAAryB,OAApB,CAAsCuF,CAAA,EAAtC,CACIkF,cAAA,CAAe4nB,MAAA,CAAU9sB,CAAV,CAAf,CAvBa,CAArB,IA0BK,CAED,GAAe,WAAf,GAAIyyC,MAAJ,CACI,IAASzyC,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBirE,KAAAxwE,OAApB,CAAkCuF,CAAA,EAAlC,CAEQirE,KAAA,CAAMjrE,CAAN,CAAAyyC,OAAA,CADAw4B,KAAA,CAAMjrE,CAAN,CAAAyyC,OAAJ,GAAwB82B,iBAAAuC,iBAAxB;AACsBvC,iBAAAwC,YADtB,CAGsBxC,iBAAAiB,IAL9B,KAUI,KADAtpE,IAAA,CAAK,iBAAL,CA7CKuH,IA6CoB3K,SAAA,EAAzB,CAAiD,WAAjD,CAA+D20C,MAA/D,CACK,CAAIzyC,CAAJ,CAAQ,CAAb,CAAgBA,CAAhB,CAAoBirE,KAAAxwE,OAApB,CAAkCuF,CAAA,EAAlC,CACIirE,KAAA,CAAMjrE,CAAN,CAAAyyC,OACA,CADkB82B,iBAAAwC,YAClB,CAAAd,KAAA,CAAMjrE,CAAN,CAAAiqE,YAAA,CAAuBx3B,MAG/B3yB,MAAA88C,mBAAA,CAAyBn0D,IAAzB,CAjBC,CAhC6D,CAAtE,CAmDGijE,WAnDH,CArB0D,CAsF9D5Q,KAAA/9D,UAAA6/D,mBAAA,CAAoCoP,QAAS,CAACzzB,WAAD,CAAc,CACvD,IAAI0zB,wBAA0B,IAAAC,4BAAA,CAAiC3zB,WAAjC,CAC1B9vC,YAAAA,CAAOwjE,uBAAAxjE,KAAA,EACPwiE,wBAAAA,CAAQ,IAAAC,uBAAA,CAA4Be,uBAA5B,CACZ;IAAAE,uBAAA,CAA4BlB,uBAA5B,CAAmCxiE,WAAnC,CACA,OAAOA,YALgD,CAc3DqyD,KAAA/9D,UAAAovE,uBAAA,CAAwCC,QAAS,CAACnB,KAAD,CAAQxiE,IAAR,CAAc,CAC3D,GAAqB,CAArB,GAAIwiE,KAAAxwE,OAAJ,CAAA,CAcA,IATA,IAAIqyB,UAAY,EAAhB,CACIsV,OAAS,EADb,CAMIkpC,aAHcL,KAAAvoC,OAAA2pC,CAAa,QAAS,CAAC3T,CAAD,CAAI,CACxC,MAAOA,EAAAjmB,OAAP,GAAoB82B,iBAAAiB,IADoB,CAA1B6B,CAGCtsD,IAAA,CAAgB,QAAS,CAAC24C,CAAD,CAAI,CAC5C,MAAOA,EAAAwR,eADqC,CAA7B,CANnB,CASSlqE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBirE,KAAAxwE,OAApB,CAAkCuF,CAAA,EAAlC,CAAuC,CACnC,IAAI2mE,YAAcsE,KAAA,CAAMjrE,CAAN,CAAlB,CACIwH,aAAejC,IAAAiC,aAAA,CAAkBiB,IAAlB,CAAwBk+D,WAAAl+D,KAAxB,CADnB,CAEI6jE,iBAAmB,CAAA,CAFvB,CAE8BrC,YAAc,IAAK,EACjD/wE,KAAAC,OAAA,CAA6B,IAA7B,GAAYqO,YAAZ,CAAmC,+DAAnC,CACA;GAAIm/D,WAAAl0B,OAAJ,GAA2B82B,iBAAAwC,YAA3B,CACIO,gBAEA,CAFmB,CAAA,CAEnB,CADArC,WACA,CADctD,WAAAsD,YACd,CAAA7nC,MAAA,CAASA,MAAAthC,OAAA,CAAc,IAAAg7D,gBAAA/tB,aAAA,CAAkC44B,WAAAuD,eAAlC,CAA8D,CAAA,CAA9D,CAAd,CAHb,KAKK,IAAIvD,WAAAl0B,OAAJ,GAA2B82B,iBAAAiB,IAA3B,CACD,GAAI7D,WAAAoD,WAAJ,EAA8BjP,IAAA0O,yBAA9B,CACI8C,gBAEA,CAFmB,CAAA,CAEnB,CADArC,WACA,CADc,UACd,CAAA7nC,MAAA,CAASA,MAAAthC,OAAA,CAAc,IAAAg7D,gBAAA/tB,aAAA,CAAkC44B,WAAAuD,eAAlC,CAA8D,CAAA,CAA9D,CAAd,CAHb,KAKK,CAED,IAAIqC,YAAc,IAAAhC,gBAAA,CAAqB5D,WAAAl+D,KAArB,CAAuC6iE,YAAvC,CAClB3E;WAAAwD,qBAAA,CAAmCoC,WACnC,KAAI7+B,QAAUu9B,KAAA,CAAMjrE,CAAN,CAAAV,OAAA,CAAgBitE,WAAAjpE,IAAA,EAAhB,CACE+J,KAAAA,EAAhB,GAAIqgC,OAAJ,EACIpgC,oBAAA,CAAqB,oCAArB,CAA2DogC,OAA3D,CAAoEi5B,WAAAl+D,KAApE,CAkBA,CAjBI+jE,YAiBJ,CAjBkB3zE,cAAA,CAAe60C,OAAf,CAiBlB,CAhB6C,QAgB7C,GAhB0B,MAAOA,QAgBjC,EAfe,IAef,EAfIA,OAeJ,EAdIx0C,IAAAS,SAAA,CAAc+zC,OAAd,CAAuB,WAAvB,CAcJ,GAXI8+B,YAWJ,CAXkBA,YAAAvyE,eAAA,CAA2BsyE,WAAAjyE,YAAA,EAA3B,CAWlB,EATImyE,WASJ,CATiB9F,WAAAuD,eASjB,CARI93C,OAQJ,CARmB,IAAAiqC,qBAAA,EAQnB,CAPIqQ,OAOJ,CAPsBn6C,4BAAA,CAA6Bi6C,YAA7B;AAA0Cp6C,OAA1C,CAOtB,CANAu0C,WAAAyD,yBAMA,CANuCoC,YAMvC,CALA7F,WAAA0D,8BAKA,CAL4CqC,OAK5C,CAJA/F,WAAAuD,eAIA,CAJ6B,IAAA9M,gBAAA,EAI7B,CAFAkO,YAAArhC,OAAA,CAAoBqhC,YAAAvhE,QAAA,CAAqB0iE,WAArB,CAApB,CAAsD,CAAtD,CAEA,CADArqC,MACA,CADSA,MAAAthC,OAAA,CAAc,IAAAg7D,gBAAAtuB,mBAAA,CAAwCm5B,WAAAl+D,KAAxC,CAA0DikE,OAA1D,CAA2E/F,WAAAuD,eAA3E,CAAuGvD,WAAAG,aAAvG,CAAd,CACT,CAAA1kC,MAAA,CAASA,MAAAthC,OAAA,CAAc,IAAAg7D,gBAAA/tB,aAAA,CAAkC0+B,WAAlC,CAA8C,CAAA,CAA9C,CAAd,CAnBb,GAsBIH,gBAEA,CAFmB,CAAA,CAEnB,CADArC,WACA,CADc,QACd,CAAA7nC,MAAA,CAASA,MAAAthC,OAAA,CAAc,IAAAg7D,gBAAA/tB,aAAA,CAAkC44B,WAAAuD,eAAlC;AAA8D,CAAA,CAA9D,CAAd,CAxBb,CALC,CAiCT,IAAAjP,YAAA5iB,0BAAA,CAA2C5vC,IAA3C,CAAiD25B,MAAjD,CACAA,OAAA,CAAS,EACLkqC,iBAAJ,GAEIrB,KAAA,CAAMjrE,CAAN,CAAAyyC,OAMA,CANkB82B,iBAAAsC,UAMlB,CAFI9pE,UAAA,CACDkpE,KAAA,CAAMjrE,CAAN,CAAAgqE,UADC,CAAsB,CAAtB,CAEJ,CAAIiB,KAAA,CAAMjrE,CAAN,CAAA6O,WAAJ,GACwB,QAApB,GAAIo7D,WAAJ,EACQ5iD,WAIJ,CAJU,IAAIxrB,SAAJ,CAAc,IAAd,CAAoBovE,KAAA,CAAMjrE,CAAN,CAAAyI,KAApB,CAIV,CADIwH,WACJ,CADe,IAAIwV,YAAJ,CADsBwlD,KAAA,CAAMjrE,CAAN,CAAAmqE,qBACtB,CAA4B9iD,WAA5B,CAAiCvsB,cAAjC,CACf,CAAAgyB,SAAAvyB,KAAA,CAAe0wE,KAAA,CAAMjrE,CAAN,CAAA6O,WAAAlO,KAAA,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,CAAA,CAArC,CAA4CsP,WAA5C,CAAf,CALJ,EAQI6c,SAAAvyB,KAAA,CAAe0wE,KAAA,CAAMjrE,CAAN,CAAA6O,WAAAlO,KAAA,CAAyB,IAAzB,CAAmCM,KAAJ,CAAUgpE,WAAV,CAA/B,CAAuD,CAAA,CAAvD,CAA8D,IAA9D,CAAf,CATR,CARJ,CAnDmC,CA0EvC,IAAAe,qCAAA,CAA0C,IAAAtB,sBAA1C,CAEA;IAAS1pE,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB8sB,SAAAryB,OAApB,CAAsCuF,CAAA,EAAtC,CACIkF,cAAA,CAAe4nB,SAAA,CAAU9sB,CAAV,CAAf,CAGJ,KAAA4qE,uBAAA,EA9FA,CAD2D,CAyG/D9P,KAAA/9D,UAAAmvE,4BAAA,CAA6CS,QAAS,CAAClkE,IAAD,CAAO,CAIzD,IAHA,IAAI4L,KAAJ,CAEIu4D,gBAAkB,IAAAlD,sBACtB,CAAqC,IAArC,IAAQr1D,KAAR,CAAgB5L,IAAAzC,SAAA,EAAhB,GACmC,IADnC,GACI4mE,eAAA73D,SAAA,EADJ,CAAA,CAEI63D,eACA,CADkBA,eAAAhF,QAAA,CAAwBvzD,KAAxB,CAClB,CAAA5L,IAAA,CAAOA,IAAArC,SAAA,EAEX,OAAOwmE,gBATkD,CAkB7D9R,KAAA/9D,UAAAmuE,uBAAA,CAAwC2B,QAAS,CAACD,eAAD,CAAkB,CAE/D,IAAIE,iBAAmB,EACvB,KAAAC,mCAAA,CAAwCH,eAAxC;AAAyDE,gBAAzD,CAEAA,iBAAA/pE,KAAA,CAAsB,QAAS,CAACb,CAAD,CAAIC,CAAJ,CAAO,CAClC,MAAOD,EAAA4nE,MAAP,CAAiB3nE,CAAA2nE,MADiB,CAAtC,CAGA,OAAOgD,iBARwD,CAenEhS,KAAA/9D,UAAAgwE,mCAAA,CAAoDC,QAAS,CAACp8D,IAAD,CAAOq6D,KAAP,CAAc,CACvE,IAAInrD,MAAQ,IAAZ,CACI4qD,UAAY95D,IAAAmE,SAAA,EAChB,IAAkB,IAAlB,GAAI21D,SAAJ,CACI,IAAK,IAAI1qE,EAAI,CAAb,CAAgBA,CAAhB,CAAoB0qE,SAAAjwE,OAApB,CAAsCuF,CAAA,EAAtC,CACIirE,KAAA1wE,KAAA,CAAWmwE,SAAA,CAAU1qE,CAAV,CAAX,CAGR4Q,KAAA6D,aAAA,CAAkB,QAAS,CAACpa,KAAD,CAAQ,CAC/BylB,KAAAitD,mCAAA,CAAyC1yE,KAAzC,CAAgD4wE,KAAhD,CAD+B,CAAnC,CARuE,CAkB3EnQ,KAAA/9D,UAAAiuE,qCAAA,CAAsDiC,QAAS,CAACr8D,IAAD,CAAO,CAClE,IAAIkP,MAAQ,IAAZ,CACImrD,MAAQr6D,IAAAmE,SAAA,EACZ,IAAIk2D,KAAJ,CAAW,CAEP,IADA,IAAIiC;AAAK,CAAT,CACSC,KAAO,CAAhB,CAAmBA,IAAnB,CAA0BlC,KAAAxwE,OAA1B,CAAwC0yE,IAAA,EAAxC,CACQlC,KAAA,CAAMkC,IAAN,CAAA16B,OAAJ,GAA2B82B,iBAAAsC,UAA3B,GACIZ,KAAA,CAAMiC,EAAN,CACA,CADYjC,KAAA,CAAMkC,IAAN,CACZ,CAAAD,EAAA,EAFJ,CAKJjC,MAAAxwE,OAAA,CAAeyyE,EACft8D,KAAAo3D,SAAA,CAA6B,CAAf,CAAAiD,KAAAxwE,OAAA,CAAmBwwE,KAAnB,CAA2B,IAAzC,CATO,CAWXr6D,IAAA6D,aAAA,CAAkB,QAAS,CAAC5a,SAAD,CAAY,CACnCimB,KAAAkrD,qCAAA,CAA2CnxE,SAA3C,CADmC,CAAvC,CAdkE,CA0BtEihE,KAAA/9D,UAAA6gE,mBAAA,CAAoCwP,QAAS,CAAC3kE,IAAD,CAAO,CAChD,IAAIqX,MAAQ,IAAZ,CACI2a,aAAe,IAAAyxC,4BAAA,CAAiCzjE,IAAjC,CAAAA,KAAA,EACfmkE,KAAAA,CAAkB,IAAAlD,sBAAA9B,QAAA,CAAmCn/D,IAAnC,CACtBmkE,KAAAjE,gBAAA,CAAgC,QAAS,CAAC/3D,IAAD,CAAO,CAC5CkP,KAAAutD,yBAAA,CAA+Bz8D,IAA/B,CAD4C,CAAhD,CAGA;IAAAy8D,yBAAA,CAA8BT,IAA9B,CACAA,KAAArE,kBAAA,CAAkC,QAAS,CAAC33D,IAAD,CAAO,CAC9CkP,KAAAutD,yBAAA,CAA+Bz8D,IAA/B,CAD8C,CAAlD,CAGA,OAAO6pB,aAXyC,CAmBpDqgC,KAAA/9D,UAAAswE,yBAAA,CAA0CC,QAAS,CAAC18D,IAAD,CAAO,CACtD,IAAIq6D,MAAQr6D,IAAAmE,SAAA,EACZ,IAAc,IAAd,GAAIk2D,KAAJ,CAAoB,CAQhB,IALA,IAAIn+C,UAAY,EAAhB,CAGIsV,OAAS,EAHb,CAIImrC,SAAY,EAJhB,CAKSvtE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBirE,KAAAxwE,OAApB,CAAkCuF,CAAA,EAAlC,CACQirE,KAAA,CAAMjrE,CAAN,CAAAyyC,OAAJ,GAAwB82B,iBAAAuC,iBAAxB,GACSb,KAAA,CAAMjrE,CAAN,CAAAyyC,OAAJ,GAAwB82B,iBAAAoC,KAAxB,EACDzyE,IAAAC,OAAA,CAAYo0E,QAAZ,GAAyBvtE,CAAzB,CAA6B,CAA7B,CAAgC,iDAAhC,CAIA,CAHAutE,QAGA,CAHWvtE,CAGX,CADAirE,KAAA,CAAMjrE,CAAN,CAAAyyC,OACA,CADkB82B,iBAAAuC,iBAClB;AAAAb,KAAA,CAAMjrE,CAAN,CAAAiqE,YAAA,CAAuB,KALtB,GAQD/wE,IAAAC,OAAA,CAAY8xE,KAAA,CAAMjrE,CAAN,CAAAyyC,OAAZ,GAAgC82B,iBAAAiB,IAAhC,CAAuD,wCAAvD,CAIA,CAFAS,KAAA,CAAMjrE,CAAN,CAAAgqE,UAAA,EAEA,CADA5nC,MACA,CADSA,MAAAthC,OAAA,CAAc,IAAAg7D,gBAAA/tB,aAAA,CAAkCk9B,KAAA,CAAMjrE,CAAN,CAAAkqE,eAAlC,CAA2D,CAAA,CAA3D,CAAd,CACT,CAAIe,KAAA,CAAMjrE,CAAN,CAAA6O,WAAJ,EAEIie,SAAAvyB,KAAA,CAAe0wE,KAAA,CAAMjrE,CAAN,CAAA6O,WAAAlO,KAAA,CAAyB,IAAzB,CAAmCM,KAAJ,CAAU,KAAV,CAA/B,CAAiD,CAAA,CAAjD,CADAgP,IACA,CAAf,CAdH,CADL,CAmBc,GAAlB,GAAIs9D,QAAJ,CAEI38D,IAAAo3D,SAAA,CAAc,IAAd,CAFJ,CAMIiD,KAAAxwE,OANJ,CAMmB8yE,QANnB,CAM8B,CAG9B,KAAAtS,YAAA5iB,0BAAA,CAA2CznC,IAAAnI,KAAA,EAA3C,CAAwD25B,MAAxD,CACA,KAASpiC,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB8sB,SAAAryB,OAApB,CAAsCuF,CAAA,EAAtC,CACIkF,cAAA,CAAe4nB,SAAA,CAAU9sB,CAAV,CAAf,CAvCY,CAFkC,CAgE1D;IAAIwtE,eAAJ,CAII9xE,YAA6B,QAAS,EAAG,CACzCA,QAASA,YAAW,EAAG,CAInB,IAAA+xE,OAAA,CAAc,EAKd,KAAAC,eAAA,CAAsB,CAAA,CATH,CAWvBhyE,WAAAC,YAAA,CAA0BgyE,QAAS,EAAG,CAC7BH,eAAL,GACIA,eADJ,CACsB,IAAI9xE,WAD1B,CAGA,OAAO8xE,gBAJ2B,CAOtC9xE,YAAAqB,UAAAk7D,UAAA,CAAkC2V,QAAS,EAAG,CAC1C,IAAKC,IAAIA,OAAT,GAAoB,KAAAJ,OAApB,CACI,IAAKK,IAAIA,KAAT,GAAkB,KAAAL,OAAA,CAAYI,OAAZ,CAAlB,CACI,IAAAJ,OAAA,CAAYI,OAAZ,CAAA,CAAqBC,KAArB,CAAA7V,UAAA,EAHkC,CAO9Cv8D,YAAAqB,UAAAq7D,OAAA,CAA+B2V,QAAS,EAAG,CACvC,IAAKF,IAAIA,OAAT,GAAoB,KAAAJ,OAApB,CACI,IAAKK,IAAIA,KAAT,GAAkB,KAAAL,OAAA,CAAYI,OAAZ,CAAlB,CACI,IAAAJ,OAAA,CAAYI,OAAZ,CAAA,CAAqBC,KAArB,CAAA1V,OAAA,EAH+B,CAa3C18D;WAAAqB,UAAAnB,gBAAA,CAAwCoyE,QAAS,CAACzyE,GAAD,CAAME,GAAN,CAAW,CACpDqyE,GAAAA,CAAQryE,GAARqyE,EAAevyE,GAAA25C,QAAA,YACL7nC,KAAAA,EAAd,GAAIygE,GAAJ,EACI9sE,KAAA,CAAM,sHAAN,CAIAwN,IAAAA,CAAYjD,aAAA,CAAcuiE,GAAd,CAChB,KAAInhE,SAAW6B,GAAA7B,SACf4B,YAAA,CAAY,+BAAZ,CAA6C,CAA7C,CAAgDC,GAAhD,CACKA,IAAA/F,KAAA1O,QAAA,EAAL,EACIiH,KAAA,CAAM,0FAAN,CAIJ,OADW,KAAAitE,WAAApjD,CAAgBle,QAAhBke,CAA0BtvB,GAA1BsvB,CACJy7C,SAfiD,CAsB5D5qE,YAAAqB,UAAAmxE,WAAA;AAAmCC,QAAS,CAACtjD,IAAD,CAAO,CAC/C,IAAIujD,SAAWl1E,IAAA2lB,QAAA,CAAa,IAAA4uD,OAAb,CAA0B5iD,IAAAtvB,IAAA5C,KAA1B,CAEVy1E,SAAL,EAAiBl1E,IAAA2lB,QAAA,CAAauvD,QAAb,CAAuBvjD,IAAA8+B,UAAAt+C,YAAA,EAAvB,CAAjB,GAA0Ewf,IAA1E,EACI7pB,KAAA,CAAM,WAAN,CAAoB6pB,IAAAtvB,IAAA5C,KAApB,CAAoC,GAApC,CAA0CkyB,IAAA8+B,UAA1C,CAA2D,6BAA3D,CAEJ9+B,KAAAotC,UAAA,EACA,QAAOmW,QAAA,CAASvjD,IAAA8+B,UAAAt+C,YAAA,EAAT,CAPwC,CAiBnD3P,YAAAqB,UAAAkxE,WAAA,CAAmCI,QAAS,CAAC1hE,QAAD,CAAWpR,GAAX,CAAgB,CACxD,IAAI6yE,SAAWl1E,IAAA2lB,QAAA,CAAa,IAAA4uD,OAAb,CAA0BlyE,GAAA5C,KAA1B,CACVy1E,SAAL,GACIA,QACA,CADW,EACX,CAAA,IAAAX,OAAA,CAAYlyE,GAAA5C,KAAZ,CAAA,CAAwBy1E,QAF5B,CAIA,KAAIvjD,KAAO3xB,IAAA2lB,QAAA,CAAauvD,QAAb,CAAuBzhE,QAAAtB,YAAA,EAAvB,CACPwf,KAAJ;AACI7pB,KAAA,CAAM,yHAAN,CAEJ6pB,KAAA,CAAO,IAAIiwC,IAAJ,CAASnuD,QAAT,CAAmB,IAAA+gE,eAAnB,CAAwCnyE,GAAxC,CAEP,OADA6yE,SAAA,CAASzhE,QAAAtB,YAAA,EAAT,CACA,CADmCwf,IAXqB,CAkB5DnvB,YAAAqB,UAAAg+D,gBAAA,CAAwCuT,QAAS,CAACvT,eAAD,CAAkB,CAC/D,IAAA2S,eAAA,CAAsB3S,eADyC,CAGnE,OAAOr/D,YAnGkC,CAAZ,EAJjC,CA8HIK,kBAA0B,QAAS,EAAG,CAKtCA,QAASA,SAAQ,CAAC2S,KAAD,CAAQ,CACrB,IAAAA,MAAA,CAAaA,KACPA,MAAN,WAAuBosD,KAAvB,EACI95D,KAAA,CAAM,sEAAN,CAGJ;IAAA0a,MAAA,CAAa,IAAI7f,SAAJ,CAAc6S,KAAd,CAAqBnJ,IAAAquB,MAArB,CACb,KAAAv4B,SAAA,CAAgB,IAAIkzE,iBAAJ,CAAsB,IAAtB,CAPK,CASzBnyE,MAAAC,eAAA,CAAsBN,QAAAgB,UAAtB,CAA0C,KAA1C,CAAiD,CAC7CO,IAAKA,QAAS,EAAG,CACb,MAAO,KAAAoR,MAAAnT,IADM,CAD4B,CAI7CuK,WAAY,CAAA,CAJiC,CAK7CC,aAAc,CAAA,CAL+B,CAAjD,CAOAhK,SAAAgB,UAAAsqB,IAAA,CAAyBmnD,QAAS,CAAC/lE,IAAD,CAAO,CACrC,IAAAgmE,cAAA,CAAmB,KAAnB,CACAv1E,KAAA4V,iBAAA,CAAsB,cAAtB,CAAsC,CAAtC,CAAyC,CAAzC,CAA4ChP,SAAArF,OAA5C,CACA,OAAIgO,KAAJ,WAAoB5M,UAApB,CACW,IAAA6yE,WAAA,CAAgBjmE,IAAA3K,SAAA,EAAhB,CADX,CAGgBuP,IAAAA,EAAT,GAAA5E,IAAA,CAAqB,IAAAiT,MAAArhB,MAAA,CAAiBoO,IAAjB,CAArB,CAA8C,IAAAiT,MANhB,CAezC3f,SAAAgB,UAAA2xE,WAAA,CAAgCC,QAAS,CAAClzE,GAAD,CAAM,CAG3C,IAAAgzE,cAAA,CADcG,qBACd,CACA11E;IAAA4V,iBAAA,CAFc8/D,qBAEd,CAA+B,CAA/B,CAAkC,CAAlC,CAAqC9uE,SAAArF,OAArC,CACA,KAAIo0E,UAAYtjE,aAAA,CAAc9P,GAAd,CAChB8S,YAAA,CAJcqgE,qBAId,CAAqB,CAArB,CAAwBC,SAAxB,CACA,KAAIliE,SAAWkiE,SAAAliE,SACXA,SAAAjD,KAAJ,GAAsB,IAAAgF,MAAAi7C,UAAAjgD,KAAtB,EACI1I,KAAA,CAAM,6EAAN,CAGI2L,QAAAjD,KAHJ,CAII,gBAJJ,CAKI,IAAAgF,MAAAi7C,UAAAjgD,KALJ,CAMI,GANJ,CAQJ,OAAO,KAAA2d,IAAA,CAASwnD,SAAApmE,KAAA3K,SAAA,EAAT,CAjBoC,CAsB/C/B,SAAAgB,UAAA0xE,cAAA,CAAmCK,QAAS,CAACF,OAAD,CAAU,CAC/B,IAAnB,GAAI,IAAAlgE,MAAJ,EACI1N,KAAA,CAAM,cAAN;AAAuB4tE,OAAvB,CAAiC,yBAAjC,CAF8C,CAMtD7yE,SAAAgB,UAAAgyE,UAAA,CAA+BC,QAAS,EAAG,CACvC91E,IAAA4V,iBAAA,CAAsB,oBAAtB,CAA4C,CAA5C,CAA+C,CAA/C,CAAkDhP,SAAArF,OAAlD,CACA,KAAAg0E,cAAA,CAAmB,WAAnB,CACA,KAAA//D,MAAAupD,UAAA,EAHuC,CAK3Cl8D,SAAAgB,UAAAkyE,SAAA,CAA8BC,QAAS,EAAG,CACtCh2E,IAAA4V,iBAAA,CAAsB,mBAAtB,CAA2C,CAA3C,CAA8C,CAA9C,CAAiDhP,SAAArF,OAAjD,CACA,KAAAg0E,cAAA,CAAmB,UAAnB,CACA,KAAA//D,MAAA0pD,OAAA,EAHsC,CAK1Cr8D,SAAAE,YAAA,CAAuB,CACnBkzE,UAAW,CACP,MAAO,WADA,CADQ,CAKvB,OAAOpzE,SA/E+B,CAAZ,EA9H9B,CA+MIwyE,kBAAmC,QAAS,EAAG,CAE/CA,QAASA,kBAAiB,CAACjI,QAAD,CAAW,CACjC,IAAAA,SAAA;AAAgBA,QADiB,CAIrCiI,iBAAAxxE,UAAAqyE,OAAA,CAAqCC,QAAS,EAAG,CAC7C,MAAO3yE,QAAA4yE,UAAA,CAAkB,IAAlB,CAAwB,IAAK,EAA7B,CAAgC,IAAK,EAArC,CAAwC,QAAS,EAAG,CACvD,MAAO5yE,QAAA6yE,YAAA,CAAoB,IAApB,CAA0B,QAAS,CAACljE,EAAD,CAAK,CAC3C,IAAAi6D,SAAAmI,cAAA,CAA4B,QAA5B,CACA/yE,YAAAC,YAAA,EAAAuyE,WAAA,CAAqC,IAAA5H,SAAA53D,MAArC,CACA,KAAA43D,SAAA53D,MAAA,CAAsB,IACtB,KAAA43D,SAAA5qD,MAAA,CAAsB,IAEtB,KAAA4qD,SAAA,CADA,IAAAA,SAAAjrE,SACA,CADyB,IAEzB,OAAO,CAAC,CAAD,CAPoC,CAAxC,CADgD,CAApD,CADsC,CAajD,OAAOkzE,kBAnBwC,CAAZ,EA/MvC,CAuRIlzE,SAAwBe,MAAAozE,OAAA,CAAc,CACxCC,iBA5BqBA,QAAS,EAAG,CAC/B9qB,mBAAA/F,cAAA,EACAjD,sBAAA8C,WAAA,EAF+B,CA2BO;AAExCixB,gBAzBoBA,QAAS,EAAG,CAC9B/zB,qBAAAiD,cAAA,EAD8B,CAuBQ,CAGxCoK,sBAtB0BA,QAAS,EAAG,CACpC,MAAOrE,oBAAA,YAAA,EAD6B,CAmBE,CAIxCgrB,yBApB6BA,QAAS,CAACtoD,GAAD,CAAMmF,QAAN,CAAgB,CACpDnF,GAAAwD,KAAAuwC,sBAAA3J,uBAAA,CAAwDjlC,QADJ,CAgBd,CAKxC4qB,MAlBUA,QAAS,CAAC/vB,GAAD,CAAM03C,SAAN,CAAiB,CAClC13C,GAAAwD,KAAAusB,MAAA,CAAe2nB,SAAf,CADkC,CAaI,CAMxCK,sBAhB0BA,QAAS,CAAC/3C,GAAD,CAAMi4C,MAAN,CAAc,CAC/Cj4C,GAAAwD,KAAAu0C,sBAAA,CAA+BE,MAA/B,CAD+C,CAUT,CAOxCtE,gBAdoBA,QAAS,CAAC3zC,GAAD,CAAM,CACjC,MAAOA,IAAAwD,KAAAmwC,gBAD0B,CAOK,CAQxC4U,oBAZwBA,QAAS,CAACvoD,GAAD,CAAMmF,QAAN,CAAgB,CAC/C,MAAOnF,IAAAwD,KAAAgyC,qBAAA,CAA8BrwC,QAA9B,CADwC,CAIT,CAAd,CAgC5BgkC;oBAAAzzD,UAAA8yE,aAAA,CAA8CC,QAAS,CAACrpE,UAAD,CAAaoI,UAAb,CAAyB,CAC5E,IAAA+8C,YAAA,CAAiB,GAAjB,CAAsB,CAAEqH,EAAGxsD,UAAL,CAAtB,CAAyCoI,UAAzC,CAD4E,CAOhF2hD,qBAAAzzD,UAAAgzE,KAAA,CAAsCC,QAAS,CAAC5uE,IAAD,CAAO6uE,MAAP,CAAe,CAC1D,IAAArkB,YAAA,CAAiB,MAAjB,CAAyB,CAAElJ,EAAGthD,IAAL,CAAzB,CAAsC6uE,MAAtC,CAD0D,CAgD9D,KAAI/zE,YAA2BE,MAAAozE,OAAA,CAAc,CAC3CU,eA7DmB1f,oBA4DwB,CAE3C2f,mBA9CuBzmB,UA4CoB,CAG3C0mB,WA1CeA,QAAS,CAACC,OAAD,CAAU,CAChC,IAAIC,OAAS9f,oBAAAzzD,UAAA6yD,IACbY,qBAAAzzD,UAAA6yD,IAAA,CAAqCuF,QAAS,CAAC1uD,UAAD,CAAarF,IAAb,CAAmBmvE,cAAnB,CAAmCC,QAAnC,CAA6C,CACtEnjE,IAAAA,EAAjB,GAAImjE,QAAJ;CACIA,QADJ,CACeH,OAAA,EADf,CAGAC,OAAA3sD,KAAA,CAAY,IAAZ,CAAkBld,UAAlB,CAA8BrF,IAA9B,CAAoCmvE,cAApC,CAAoDC,QAApD,CAJuF,CAM3F,OAAO,SAAS,EAAG,CACfhgB,oBAAAzzD,UAAA6yD,IAAA,CAAqC0gB,MADtB,CARa,CAuCS,CAI3CG,iBA5BqBhnE,QAwBsB,CAK3CqmB,gBAxBoBA,QAAS,CAACpH,KAAD,CAAQ,CACnC,MAAOA,MAAAoH,gBAAA,EAD4B,CAmBM,CAM3C4gD,QAlBYA,QAAS,CAACC,WAAD,CAAc,CACjC,MAAOA,YAAA9lD,KAAAuwC,sBAAApK,SAD0B,CAYQ,CAO3C+J,gBAXoBA,QAAS,CAACA,eAAD,CAAkB,CAC7Cr/D,WAAAC,YAAA,EAAAo/D,gBAAA,CAA0CA,eAA1C,CAD6C,CAIJ,CAAd,CAA/B,CA0BI9+D,YAAcF,iBAAAE,YAkBlBf,iBAAA,CAAiBqB,QAAjB,CAEAlE,QAAA6C,iBAAA;AAA2BA,gBAC3B7C,QAAA0D,SAAA,CAAmBA,iBACnB1D,QAAAyD,MAAA,CAAgBA,KAChBzD,QAAAwD,UAAA,CAAoBA,SACpBxD,QAAA2D,cAAA,CAAwBA,aACxB3D,QAAA4D,YAAA,CAAsBA,WACtB5D,QAAAotB,aAAA,CAAuBA,YACvBptB,QAAAoW,aAAA,CAAuBA,YA5jegH;",
"sources":["node_modules/@firebase/database/dist/index.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$firebase$database$dist$index_cjs\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib_1 = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger$1.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger$1.LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";\u003c/script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error = new Error(message);\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n//# sourceMappingURL=index.cjs.js.map\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","NAME_ONLY_COMPARATOR","left","right","nameCompare","name","NAME_COMPARATOR","nodeFromJSON$1","json","priority","ChildrenNode","EMPTY_NODE","util","assert","LeafNode","Array","node_1","jsonObj_1","forEach","key","childData","contains","substring","childNode","isLeafNode","isEmpty","updateImmediateChild","updatePriority","children_1","childrenHavePriority_1","hinzeJsonObj_1","child","getPriority","push","NamedNode","length","childSet","buildChildSet","namedNode","sortedChildSet","PRIORITY_INDEX","getCompare","IndexMap","Default","registerDatabase","instance","namespace","INTERNAL","registerService","app","unused","url","RepoManager","getInstance","databaseFromApp","Reference","Query","Database","enableLogging","ServerValue","TEST_ACCESS","isNodeSdk","Object","defineProperty","value","firebase","_interopDefault","ex","tslib_1","logger$1","DOMStorageWrapper","domStorage_","prefix_","prototype","set","DOMStorageWrapper.prototype.set","removeItem","prefixedName_","setItem","stringify","get","DOMStorageWrapper.prototype.get","storedVal","getItem","jsonEval","remove","DOMStorageWrapper.prototype.remove","DOMStorageWrapper.prototype.prefixedName_","toString","DOMStorageWrapper.prototype.toString","MemoryStorage","cache_","isInMemoryStorage","MemoryStorage.prototype.set","MemoryStorage.prototype.get","MemoryStorage.prototype.remove","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","var_args","_i","arguments","message","i","isArray","apply","logger","firstLog_","logger_","persistent","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","concat","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","document","readyState","called_1","wrappedFn_1","body","setTimeout","addEventListener","attachEvent","a","b","MIN_NAME","MAX_NAME","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","sort","splitStringBySize","segsize","len","dataSegs","c","each","val","doubleToIEEE754String","v","f","s","Infinity","Math","abs","pow","ln","min","floor","LN2","bias","round","fbits","bits","ebits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","test","intVal","exceptionGuard","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","Path.prototype.getFront","getLength","Path.prototype.getLength","popFront","Path.prototype.popFront","getBack","Path.prototype.getBack","Path.prototype.toString","pathString","toUrlEncodedString","Path.prototype.toUrlEncodedString","encodeURIComponent","String","slice","Path.prototype.slice","begin","parent","Path.prototype.parent","pieces","Path.prototype.child","childPathObj","childPieces","Path.prototype.isEmpty","relativePath","Path.relativePath","outerPath","innerPath","outer","inner","comparePaths","Path.comparePaths","leftKeys","rightKeys","cmp","equals","Path.prototype.equals","other","j","Path.prototype.contains","ValidationPath","path","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","ValidationPath.prototype.push","pop","ValidationPath.prototype.pop","last","ValidationPath.prototype.checkValid_","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","ValidationPath.prototype.toErrorString","RepoInfo","host","secure","webSocketOnly","persistenceKey","domain","indexOf","internalHost","needsQueryParam","RepoInfo.prototype.needsQueryParam","isCustomHost","isCacheableHost","RepoInfo.prototype.isCacheableHost","isDemoHost","RepoInfo.prototype.isDemoHost","RepoInfo.prototype.isCustomHost","updateHost","RepoInfo.prototype.updateHost","newHost","connectionURL","RepoInfo.prototype.connectionURL","type","params","WEBSOCKET","connURL","LONG_POLLING","pairs","RepoInfo.prototype.toString","toURLString","RepoInfo.prototype.toURLString","parseRepoInfo","dataURL","subdomain","scheme","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","results","queryString","charAt","_a","segment","kv","parts","location","protocol","repoInfo","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","MAX_LEAF_SIZE_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateWritablePath","validateUrl","parsedUrl","OnDisconnect","repo_","cancel","OnDisconnect.prototype.cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","OnDisconnect.prototype.remove","onDisconnectSet","OnDisconnect.prototype.set","setWithPriority","OnDisconnect.prototype.setWithPriority","onDisconnectSetWithPriority","OnDisconnect.prototype.update","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","TransactionResult.prototype.toJSON","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","PUSH_CHARS","random","node","Wrap","NamedNode.Wrap","Index","Index.prototype.getCompare","compare","indexedValueChanged","Index.prototype.indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","Index.prototype.minPost","MIN","__EMPTY_NODE","KeyIndex","_super","__extends","KeyIndex.prototype.compare","isDefinedOn","KeyIndex.prototype.isDefinedOn","assertionError","KeyIndex.prototype.indexedValueChanged","KeyIndex.prototype.minPost","maxPost","KeyIndex.prototype.maxPost","makePost","KeyIndex.prototype.makePost","indexValue","KeyIndex.prototype.toString","KEY_INDEX","MAX_NODE","priorityHashText","validatePriorityNode","priorityNode","__childrenNodeConstructor","value_","priorityNode_","lazyHash_","LeafNode.prototype.isLeafNode","LeafNode.prototype.getPriority","LeafNode.prototype.updatePriority","newPriorityNode","getImmediateChild","LeafNode.prototype.getImmediateChild","childName","getChild","LeafNode.prototype.getChild","hasChild","LeafNode.prototype.hasChild","getPredecessorChildName","LeafNode.prototype.getPredecessorChildName","LeafNode.prototype.updateImmediateChild","newChildNode","updateChild","LeafNode.prototype.updateChild","front","LeafNode.prototype.isEmpty","numChildren","LeafNode.prototype.numChildren","forEachChild","LeafNode.prototype.forEachChild","index","action","LeafNode.prototype.val","exportFormat","getValue","hash","LeafNode.prototype.hash","toHash","LeafNode.prototype.getValue","compareTo","LeafNode.prototype.compareTo","compareToLeafNode_","LeafNode.prototype.compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","LeafNode.prototype.withIndex","isIndexed","LeafNode.prototype.isIndexed","LeafNode.prototype.equals","PriorityIndex","PriorityIndex.prototype.compare","aPriority","bPriority","indexCmp","PriorityIndex.prototype.isDefinedOn","PriorityIndex.prototype.indexedValueChanged","PriorityIndex.prototype.minPost","PriorityIndex.prototype.maxPost","MAX_NODE$1","PriorityIndex.prototype.makePost","nodeFromJSON","PriorityIndex.prototype.toString","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","SortedMapIterator.prototype.getNext","result","hasNext","SortedMapIterator.prototype.hasNext","peek","SortedMapIterator.prototype.peek","LLRBNode","color","RED","SortedMap","copy","LLRBNode.prototype.copy","count","LLRBNode.prototype.count","LLRBNode.prototype.isEmpty","inorderTraversal","LLRBNode.prototype.inorderTraversal","reverseTraversal","LLRBNode.prototype.reverseTraversal","min_","LLRBNode.prototype.min_","minKey","LLRBNode.prototype.minKey","maxKey","LLRBNode.prototype.maxKey","insert","LLRBNode.prototype.insert","n","fixUp_","removeMin_","LLRBNode.prototype.removeMin_","isRed_","moveRedLeft_","LLRBNode.prototype.remove","rotateRight_","moveRedRight_","smallest","LLRBNode.prototype.isRed_","LLRBNode.prototype.fixUp_","rotateLeft_","colorFlip_","LLRBNode.prototype.moveRedLeft_","LLRBNode.prototype.moveRedRight_","LLRBNode.prototype.rotateLeft_","nl","LLRBNode.prototype.rotateRight_","nr","LLRBNode.prototype.colorFlip_","checkMaxDepth_","LLRBNode.prototype.checkMaxDepth_","blackDepth","check_","LLRBNode.prototype.check_","BLACK","LLRBEmptyNode","LLRBEmptyNode.prototype.copy","LLRBEmptyNode.prototype.insert","LLRBEmptyNode.prototype.remove","LLRBEmptyNode.prototype.count","LLRBEmptyNode.prototype.isEmpty","LLRBEmptyNode.prototype.inorderTraversal","LLRBEmptyNode.prototype.reverseTraversal","LLRBEmptyNode.prototype.minKey","LLRBEmptyNode.prototype.maxKey","LLRBEmptyNode.prototype.check_","LLRBEmptyNode.prototype.isRed_","comparator_","root_","SortedMap.prototype.insert","SortedMap.prototype.remove","SortedMap.prototype.get","getPredecessorKey","SortedMap.prototype.getPredecessorKey","rightParent","SortedMap.prototype.isEmpty","SortedMap.prototype.count","SortedMap.prototype.minKey","SortedMap.prototype.maxKey","SortedMap.prototype.inorderTraversal","SortedMap.prototype.reverseTraversal","getIterator","SortedMap.prototype.getIterator","resultGenerator","getIteratorFrom","SortedMap.prototype.getIteratorFrom","getReverseIteratorFrom","SortedMap.prototype.getReverseIteratorFrom","getReverseIterator","SortedMap.prototype.getReverseIterator","LOG_2","Base12Num","current_","mask","bits_","nextBitIsOne","Base12Num.prototype.nextBitIsOne","childList","keyFn","mapSortFn","buildBalancedTree","low","high","middle","root","buildFrom12Array","base12","buildPennant","chunkSize","childTree","pennant","isOne","_defaultIndexMap","fallbackObject","indexes_","indexSet_","IndexMap.prototype.get","indexKey","sortedMap","safeGet","hasIndex","IndexMap.prototype.hasIndex","indexDefinition","addIndex","IndexMap.prototype.addIndex","existingChildren","sawIndexedValue","iter","next","newIndex","indexName","newIndexSet","clone","newIndexes","addToIndexes","IndexMap.prototype.addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","IndexMap.prototype.removeFromIndexes","children_","indexMap_","ChildrenNode.prototype.isLeafNode","ChildrenNode.prototype.getPriority","ChildrenNode.prototype.updatePriority","ChildrenNode.prototype.getImmediateChild","ChildrenNode.prototype.getChild","ChildrenNode.prototype.hasChild","ChildrenNode.prototype.updateImmediateChild","newIndexMap","newPriority","ChildrenNode.prototype.updateChild","newImmediateChild","ChildrenNode.prototype.isEmpty","ChildrenNode.prototype.numChildren","ChildrenNode.prototype.val","numKeys","allIntegerKeys","array","ChildrenNode.prototype.hash","toHash_1","childHash","ChildrenNode.prototype.getPredecessorChildName","idx","resolveIndex_","predecessor","getFirstChildName","ChildrenNode.prototype.getFirstChildName","getFirstChild","ChildrenNode.prototype.getFirstChild","getLastChildName","ChildrenNode.prototype.getLastChildName","getLastChild","ChildrenNode.prototype.getLastChild","ChildrenNode.prototype.forEachChild","wrappedNode","ChildrenNode.prototype.getIterator","ChildrenNode.prototype.getIteratorFrom","startPost","iterator","ChildrenNode.prototype.getReverseIterator","ChildrenNode.prototype.getReverseIteratorFrom","endPost","ChildrenNode.prototype.compareTo","MAX_NODE$2","ChildrenNode.prototype.withIndex","ChildrenNode.prototype.isIndexed","ChildrenNode.prototype.equals","thisIter","otherIter","thisCurrent","otherCurrent","ChildrenNode.prototype.resolveIndex_","MaxNode","call","MaxNode.prototype.compareTo","MaxNode.prototype.equals","MaxNode.prototype.getPriority","MaxNode.prototype.getImmediateChild","MaxNode.prototype.isEmpty","defineProperties","MAX","VALUE_INDEX","ValueIndex","ValueIndex.prototype.compare","ValueIndex.prototype.isDefinedOn","ValueIndex.prototype.indexedValueChanged","ValueIndex.prototype.minPost","ValueIndex.prototype.maxPost","ValueIndex.prototype.makePost","valueNode","ValueIndex.prototype.toString","PathIndex","indexPath_","extractChild","PathIndex.prototype.extractChild","snap","PathIndex.prototype.isDefinedOn","PathIndex.prototype.compare","aChild","bChild","PathIndex.prototype.makePost","PathIndex.prototype.maxPost","PathIndex.prototype.toString","DataSnapshot","node_","ref_","index_","DataSnapshot.prototype.val","exportVal","DataSnapshot.prototype.exportVal","DataSnapshot.prototype.toJSON","exists","DataSnapshot.prototype.exists","DataSnapshot.prototype.child","childPathString","childPath","childRef","DataSnapshot.prototype.hasChild","DataSnapshot.prototype.getPriority","DataSnapshot.prototype.forEach","hasChildren","DataSnapshot.prototype.hasChildren","getKey","DataSnapshot.prototype.numChildren","getRef","DataSnapshot.prototype.getRef","DataEvent","eventRegistration","prevName","getPath","DataEvent.prototype.getPath","ref","getParent","getEventType","DataEvent.prototype.getEventType","getEventRunner","DataEvent.prototype.getEventRunner","DataEvent.prototype.toString","CancelEvent","CancelEvent.prototype.getPath","CancelEvent.prototype.getEventType","CancelEvent.prototype.getEventRunner","CancelEvent.prototype.toString","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","ValueEventRegistration.prototype.respondsTo","createEvent","ValueEventRegistration.prototype.createEvent","change","query","getQueryParams","getIndex","snapshotNode","ValueEventRegistration.prototype.getEventRunner","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","ValueEventRegistration.prototype.createCancelEvent","matches","ValueEventRegistration.prototype.matches","hasAnyCallback","ValueEventRegistration.prototype.hasAnyCallback","ChildEventRegistration","callbacks_","ChildEventRegistration.prototype.respondsTo","eventToCheck","ChildEventRegistration.prototype.createCancelEvent","ChildEventRegistration.prototype.createEvent","ChildEventRegistration.prototype.getEventRunner","cancelCB_2","cb_2","ChildEventRegistration.prototype.matches","otherCount","getCount","thisCount","otherKey","getAnyKey","thisKey","every","cb","ChildEventRegistration.prototype.hasAnyCallback","__referenceConstructor","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","Query.validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","getIndexStartName","startName","tooManyArgsError","wrongArgTypeError","getIndexEndName","endName","validateLimit_","Query.validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","Query.prototype.validateNoPreviousOrderByCall_","Query.prototype.getQueryParams","Query.prototype.getRef","on","Query.prototype.on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","Query.prototype.onValueEvent","cancelCallback","container","addEventCallbackForQuery","Query.prototype.onChildEvent","off","Query.prototype.off","validateContextObject","removeEventCallbackForQuery","once","Query.prototype.once","userCallback","cancelOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","Query.prototype.limitToFirst","limit","limitToLast","Query.prototype.limitToLast","orderByChild","Query.prototype.orderByChild","parsedPath","newParams","orderBy","orderByKey","Query.prototype.orderByKey","orderByPriority","Query.prototype.orderByPriority","orderByValue","Query.prototype.orderByValue","startAt","Query.prototype.startAt","endAt","Query.prototype.endAt","equalTo","Query.prototype.equalTo","Query.prototype.toString","Query.prototype.toJSON","queryObject","Query.prototype.queryObject","getQueryObject","queryIdentifier","Query.prototype.queryIdentifier","isEqual","Query.prototype.isEqual","sameRepo","samePath","sameQueryIdentifier","Query.getCancelAndContextArgs_","CountedSet","add","CountedSet.prototype.add","item","CountedSet.prototype.contains","CountedSet.prototype.get","CountedSet.prototype.remove","clear","CountedSet.prototype.clear","CountedSet.prototype.isEmpty","CountedSet.prototype.count","CountedSet.prototype.each","CountedSet.prototype.keys","SparseSnapshotTree","find","SparseSnapshotTree.prototype.find","childKey","remember","SparseSnapshotTree.prototype.remember","forget","SparseSnapshotTree.prototype.forget","self_1","tree","safeToRemove","forEachTree","SparseSnapshotTree.prototype.forEachTree","prefixPath","func","SparseSnapshotTree.prototype.forEachChild","resolveDeferredValue","serverValues","resolveDeferredValueTree","resolvedTree","resolveDeferredValueSnapshot","rawPri","OperationType","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","OperationSource.forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","AckUserWrite.prototype.operationForChild","children","subtree","Empty","emptyChildrenSingleton","ImmutableTree","fromObject","ImmutableTree.fromObject","childSnap","ImmutableTree.prototype.isEmpty","findRootMostMatchingPathAndValue","ImmutableTree.prototype.findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","ImmutableTree.prototype.findRootMostValueAndPath","ImmutableTree.prototype.subtree","ImmutableTree.prototype.set","toSet","newChild","ImmutableTree.prototype.remove","ImmutableTree.prototype.get","setTree","ImmutableTree.prototype.setTree","newTree","fold","ImmutableTree.prototype.fold","fold_","ImmutableTree.prototype.fold_","pathSoFar","accum","findOnPath","ImmutableTree.prototype.findOnPath","findOnPath_","ImmutableTree.prototype.findOnPath_","pathToFollow","nextChild","foreachOnPath","ImmutableTree.prototype.foreachOnPath","foreachOnPath_","ImmutableTree.prototype.foreachOnPath_","currentRelativePath","foreach","ImmutableTree.prototype.foreach","foreach_","ImmutableTree.prototype.foreach_","foreachChild","ImmutableTree.prototype.foreachChild","ListenComplete","LISTEN_COMPLETE","ListenComplete.prototype.operationForChild","Overwrite","OVERWRITE","Overwrite.prototype.operationForChild","Merge","MERGE","Merge.prototype.operationForChild","Merge.prototype.toString","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","CacheNode.prototype.isFullyInitialized","isFiltered","CacheNode.prototype.isFiltered","isCompleteForPath","CacheNode.prototype.isCompleteForPath","isCompleteForChild","CacheNode.prototype.isCompleteForChild","getNode","CacheNode.prototype.getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","ViewCache.prototype.updateEventSnap","eventSnap","complete","filtered","updateServerSnap","ViewCache.prototype.updateServerSnap","serverSnap","getEventCache","ViewCache.prototype.getEventCache","getCompleteEventSnap","ViewCache.prototype.getCompleteEventSnap","getServerCache","ViewCache.prototype.getServerCache","getCompleteServerSnap","ViewCache.prototype.getCompleteServerSnap","Change","oldSnap","valueChange","Change.valueChange","VALUE","childAddedChange","Change.childAddedChange","CHILD_ADDED","childRemovedChange","Change.childRemovedChange","CHILD_REMOVED","childChangedChange","Change.childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","Change.childMovedChange","CHILD_MOVED","IndexedFilter","IndexedFilter.prototype.updateChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","IndexedFilter.prototype.updateFullNode","newSnap","IndexedFilter.prototype.updatePriority","filtersNodes","IndexedFilter.prototype.filtersNodes","getIndexedFilter","IndexedFilter.prototype.getIndexedFilter","IndexedFilter.prototype.getIndex","ChildChangeAccumulator","changeMap_","ChildChangeAccumulator.prototype.trackChildChange","oldChange","oldType","getChanges","ChildChangeAccumulator.prototype.getChanges","getValues","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","NoCompleteChildSource_.prototype.getCompleteChild","getChildAfterChild","NoCompleteChildSource_.prototype.getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","WriteTreeCompleteChildSource.prototype.getCompleteChild","serverNode","calcCompleteChild","WriteTreeCompleteChildSource.prototype.getChildAfterChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","ViewProcessor.prototype.assertIndexed","applyOperation","ViewProcessor.prototype.applyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","newViewCache","applyUserOverwrite_","filterServerNode","applyServerOverwrite_","applyUserMerge_","applyServerMerge_","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","ViewProcessor.maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","ViewProcessor.prototype.generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","serverCache","completeEventChildren","calcCompleteEventChildren","completeChildren","newEventCache","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","eventChildUpdate","newEventChild","ViewProcessor.prototype.applyServerOverwrite_","changedSnap","oldServerSnap","serverFilter","newServerCache","newServerNode","ViewProcessor.prototype.applyUserOverwrite_","newEventSnap","cacheHasChild_","ViewProcessor.cacheHasChild_","ViewProcessor.prototype.applyUserMerge_","changedChildren","curViewCache","writePath","applyMerge_","ViewProcessor.prototype.applyMerge_","merge","ViewProcessor.prototype.applyServerMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ViewProcessor.prototype.ackUserWrite_","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","ViewProcessor.prototype.listenComplete_","oldServerNode","ViewProcessor.prototype.revertUserWrite_","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","EventGenerator.prototype.generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","EventGenerator.prototype.generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","EventGenerator.prototype.materializeSingleChange_","EventGenerator.prototype.compareChanges_","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","View.prototype.getQuery","View.prototype.getServerCache","getCompleteServerCache","View.prototype.getCompleteServerCache","cache","loadsAllData","View.prototype.isEmpty","addEventRegistration","View.prototype.addEventRegistration","removeEventRegistration","View.prototype.removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","existing","View.prototype.applyOperation","generateEventsForChanges_","getInitialEvents","View.prototype.getInitialEvents","initialChanges","eventNode","View.prototype.generateEventsForChanges_","__referenceConstructor$1","SyncPoint","views_","SyncPoint.prototype.isEmpty","SyncPoint.prototype.applyOperation","optCompleteServerCache","view","events_1","SyncPoint.prototype.addEventRegistration","serverCacheComplete","eventCacheComplete","SyncPoint.prototype.removeEventRegistration","removed","hadCompleteView","hasCompleteView","viewQueryId","getQueryViews","SyncPoint.prototype.getQueryViews","values","SyncPoint.prototype.getCompleteServerCache","viewForQuery","SyncPoint.prototype.viewForQuery","getCompleteView","viewExistsForQuery","SyncPoint.prototype.viewExistsForQuery","SyncPoint.prototype.hasCompleteView","SyncPoint.prototype.getCompleteView","findValue","completeView","CompoundWrite","writeTree_","addWrite","CompoundWrite.prototype.addWrite","rootmost","rootMostPath","newWriteTree","addWrites","CompoundWrite.prototype.addWrites","updates","newWrite","removeWrite","CompoundWrite.prototype.removeWrite","hasCompleteWrite","CompoundWrite.prototype.hasCompleteWrite","getCompleteNode","CompoundWrite.prototype.getCompleteNode","getCompleteChildren","CompoundWrite.prototype.getCompleteChildren","childCompoundWrite","CompoundWrite.prototype.childCompoundWrite","shadowingNode","CompoundWrite.prototype.isEmpty","CompoundWrite.prototype.apply","applySubtreeWrite_","CompoundWrite.applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTree.prototype.childWrites","WriteTreeRef","addOverwrite","WriteTree.prototype.addOverwrite","writeId","visible","addMerge","WriteTree.prototype.addMerge","getWrite","WriteTree.prototype.getWrite","record","WriteTree.prototype.removeWrite","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","WriteTree.prototype.getCompleteWriteData","WriteTree.prototype.calcCompleteEventCache","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","WriteTree.prototype.calcCompleteEventChildren","completeServerChildren","topLevelSet","merge_1","WriteTree.prototype.calcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","WriteTree.prototype.calcCompleteChild","WriteTree.prototype.shadowingWrite","WriteTree.prototype.calcIndexedSlice","toIterate","WriteTree.prototype.recordContainsPath_","writeRecord","findKey","WriteTree.prototype.resetTree_","DefaultFilter_","WriteTree.DefaultFilter_","WriteTree.layerTree_","writes","treeRoot","compoundWrite","deepNode","treePath_","WriteTreeRef.prototype.calcCompleteEventCache","WriteTreeRef.prototype.calcCompleteEventChildren","WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite","WriteTreeRef.prototype.shadowingWrite","WriteTreeRef.prototype.calcIndexedSlice","WriteTreeRef.prototype.calcCompleteChild","existingServerCache","WriteTreeRef.prototype.child","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","SyncTree.prototype.applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","SyncTree.prototype.applyUserMerge","changeTree","ackUserWrite","SyncTree.prototype.ackUserWrite","needToReevaluate","affectedTree_1","applyServerOverwrite","SyncTree.prototype.applyServerOverwrite","applyServerMerge","SyncTree.prototype.applyServerMerge","applyListenComplete","SyncTree.prototype.applyListenComplete","applyTaggedQueryOverwrite","SyncTree.prototype.applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","op","applyTaggedOperation_","applyTaggedQueryMerge","SyncTree.prototype.applyTaggedQueryMerge","applyTaggedListenComplete","SyncTree.prototype.applyTaggedListenComplete","SyncTree.prototype.addEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","SyncTree.prototype.removeEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","defaultTag","queryToRemove","tagToRemove","removeTags_","SyncTree.prototype.calcCompleteEventCache","includeHiddenSets","SyncTree.prototype.collectDistinctViewsForSubTree_","maybeChildSyncPoint","childMap","views_1","childViews","SyncTree.prototype.removeTags_","queries","removedQuery","removedQueryKey","removedQueryTag","SyncTree.queryForListening_","isDefault","SyncTree.prototype.setupListener_","queriesToStop","queries_1","childQueries","queryToStop","SyncTree.prototype.createListenerForView_","status","reason","code","toUpperCase","SyncTree.makeQueryKey_","SyncTree.parseQueryKey_","splitIndex","SyncTree.prototype.queryKeyForTag_","SyncTree.prototype.tagForQuery_","SyncTree.getNextQueryTag_","nextQueryTag_","SyncTree.prototype.applyTaggedOperation_","SyncTree.prototype.applyOperationToSyncPoints_","applyOperationHelper_","SyncTree.prototype.applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SyncTree.prototype.applyOperationDescendantsHelper_","SnapshotHolder","rootNode_","SnapshotHolder.prototype.getNode","updateSnapshot","SnapshotHolder.prototype.updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","getToken","AuthTokenProvider.prototype.getToken","forceRefresh","then","Promise","addTokenChangeListener","AuthTokenProvider.prototype.addTokenChangeListener","removeTokenChangeListener","AuthTokenProvider.prototype.removeTokenChangeListener","notifyForInvalidToken","AuthTokenProvider.prototype.notifyForInvalidToken","errorMessage","options","StatsCollection","counters_","incrementCounter","StatsCollection.prototype.incrementCounter","amount","StatsCollection.prototype.get","deepCopy","StatsManager","getCollection","StatsManager.getCollection","hashString","collections_","getOrCreateReporter","StatsManager.getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","StatsListener.prototype.get","newStats","delta","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","FIRST_STATS_MIN_TIME","reportStats_","includeStat","StatsReporter.prototype.includeStat","StatsReporter.prototype.reportStats_","stats","reportedStats","haveStatsToReport","reportStats","REPORT_STATS_INTERVAL","EventQueue","eventLists_","recursionDepth_","queueEvents","EventQueue.prototype.queueEvents","eventDataList","currList","eventPath","EventList","raiseEventsAtPath","EventQueue.prototype.raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","EventQueue.prototype.raiseEventsForChangedPath","changedPath","EventQueue.prototype.raiseQueuedEventsMatchingPredicate_","sentAll","eventList","raise","events_","EventList.prototype.add","EventList.prototype.raise","eventFn","EventList.prototype.getPath","EventEmitter","allowedEvents_","listeners_","trigger","EventEmitter.prototype.trigger","listeners","EventEmitter.prototype.on","validateEventType_","getInitialEvent","EventEmitter.prototype.off","EventEmitter.prototype.validateEventType_","et","VisibilityMonitor","visibilityChange","hidden","visible_","VisibilityMonitor.getInstance","VisibilityMonitor.prototype.getInitialEvent","OnlineMonitor","online_","isMobileCordova","OnlineMonitor.getInstance","OnlineMonitor.prototype.getInitialEvent","currentlyOnline","OnlineMonitor.prototype.currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","PacketReceiver.prototype.closeAfter","responseNum","handleResponse","PacketReceiver.prototype.handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesReceived","bytesSent","everConnected_","log_","stats_","urlFn","this.urlFn","open","BrowserPollConnection.prototype.open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","FIREBASE_LONGPOLL_START_PARAM","password","FIREBASE_LONGPOLL_CLOSE_COMMAND","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","PROTOCOL_VERSION","href","FORGE_DOMAIN","FORGE_REF","connectURL","addTag","start","BrowserPollConnection.prototype.start","startLongPoll","addDisconnectPingFrame","forceAllow","BrowserPollConnection.forceAllow","forceAllow_","forceDisallow","BrowserPollConnection.forceDisallow","forceDisallow_","isAvailable","BrowserPollConnection.isAvailable","createElement","Windows","UI","markConnectionHealthy","BrowserPollConnection.prototype.markConnectionHealthy","shutdown_","BrowserPollConnection.prototype.shutdown_","close","myDisconnFrame","removeChild","BrowserPollConnection.prototype.onClosed_","BrowserPollConnection.prototype.close","send","BrowserPollConnection.prototype.send","dataStr","base64data","base64Encode","MAX_PAYLOAD_SIZE","enqueueSegment","BrowserPollConnection.prototype.addDisconnectPingFrame","pw","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","src","style","display","appendChild","BrowserPollConnection.prototype.incrementIncomingBytes_","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","myIFrame","createIFrame_","script","iframeContents","doc","FirebaseIFrameScriptHolder.createIFrame_","iframe","contentWindow","contentDocument","FirebaseIFrameScriptHolder.prototype.close","alive","innerHTML","myID","FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM","myPW","theURL","nodeRestRequest","FirebaseIFrameScriptHolder.prototype.startLongPoll","newRequest_","FirebaseIFrameScriptHolder.prototype.newRequest_","curDataString","MAX_URL_DATA_SIZE","nextSeg","d","SEG_HEADER_SIZE","theSeg","shift","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","seg","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","ts","FIREBASE_LONGPOLL_DATA_PARAM","addLongPollTag_","FirebaseIFrameScriptHolder.prototype.enqueueSegment","segnum","totalsegs","FirebaseIFrameScriptHolder.prototype.addLongPollTag_","serial","doNewRequest","keepaliveTimeout","readyStateCB","FirebaseIFrameScriptHolder.prototype.addTag","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","newScript_1.onreadystatechange","rstate","parentNode","onerror","newScript_1.onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","frames","keepaliveTimer","totalFrames","connectionURL_","WebSocketConnection.connectionURL_","VERSION_PARAM","WebSocketConnection.prototype.open","headers","SDK_VERSION","platform","CONSTANTS","NODE_ADMIN","device","env","proxy","origin","mySock","onopen","this.mySock.onopen","onclose","this.mySock.onclose","onmessage","this.mySock.onmessage","m","handleIncomingFrame","this.mySock.onerror","WebSocketConnection.prototype.start","WebSocketConnection.forceDisallow","WebSocketConnection.isAvailable","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","oldAndroidRegex","parseFloat","previouslyFailed","WebSocketConnection.previouslyFailed","WebSocketConnection.prototype.markConnectionHealthy","appendFrame_","WebSocketConnection.prototype.appendFrame_","fullMess","jsonMess","handleNewFrameCount_","WebSocketConnection.prototype.handleNewFrameCount_","frameCount","extractFrameCount_","WebSocketConnection.prototype.extractFrameCount_","isNaN","WebSocketConnection.prototype.handleIncomingFrame","mess","resetKeepAlive","remainingData","WebSocketConnection.prototype.send","WEBSOCKET_MAX_FRAME_SIZE","sendString_","WebSocketConnection.prototype.shutdown_","clearInterval","WebSocketConnection.prototype.onClosed_","WebSocketConnection.prototype.close","WebSocketConnection.prototype.resetKeepAlive","setInterval","WebSocketConnection.prototype.sendString_","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","TransportManager.prototype.initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","TransportManager.prototype.initialTransport","upgradeTransport","TransportManager.prototype.upgradeTransport","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","Connection.prototype.start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","rx_","tx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","BYTES_RECEIVED_HEALTHY_OVERRIDE","BYTES_SENT_HEALTHY_OVERRIDE","Connection.prototype.nextTransportId_","Connection.prototype.disconnReceiver_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","Connection.prototype.connReceiver_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","Connection.prototype.sendRequest","dataMsg","sendData_","msg","t","tryCleanupConnection","Connection.prototype.tryCleanupConnection","onSecondaryControl_","Connection.prototype.onSecondaryControl_","controlData","MESSAGE_TYPE","cmd","SWITCH_ACK","upgradeIfSecondaryHealthy_","CONTROL_RESET","CONTROL_PONG","secondaryResponsesRequired_","Connection.prototype.onSecondaryMessageReceived_","parsedData","layer","Connection.prototype.upgradeIfSecondaryHealthy_","proceedWithUpgrade_","PING","Connection.prototype.proceedWithUpgrade_","END_TRANSMISSION","Connection.prototype.onPrimaryMessageReceived_","onControl_","onDataMessage_","Connection.prototype.onDataMessage_","onPrimaryResponse_","Connection.prototype.onPrimaryResponse_","Connection.prototype.onControl_","MESSAGE_DATA","payload","SERVER_HELLO","onHandshake_","CONTROL_SHUTDOWN","onConnectionShutdown_","onReset_","CONTROL_ERROR","sendPingOnPrimaryIfNecessary_","Connection.prototype.onHandshake_","handshake","timestamp","version","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","Connection.prototype.tryStartUpgrade_","startUpgrade_","Connection.prototype.startUpgrade_","Connection.prototype.onReset_","closeConnections_","Connection.prototype.onConnectionEstablished_","Connection.prototype.sendPingOnPrimaryIfNecessary_","Connection.prototype.onSecondaryConnectionLost_","Connection.prototype.onConnectionLost_","Connection.prototype.onConnectionShutdown_","Connection.prototype.sendData_","Connection.prototype.close","Connection.prototype.closeConnections_","ServerActions","put","ServerActions.prototype.put","ServerActions.prototype.merge","refreshAuthToken","ServerActions.prototype.refreshAuthToken","token","onDisconnectPut","ServerActions.prototype.onDisconnectPut","onDisconnectMerge","ServerActions.prototype.onDisconnectMerge","ServerActions.prototype.onDisconnectCancel","ServerActions.prototype.reportStats","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","RECONNECT_MIN_DELAY","maxReconnectDelay_","RECONNECT_MAX_DELAY_DEFAULT","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","PersistentConnection.prototype.sendRequest","onResponse","curReqNum","listen","PersistentConnection.prototype.listen","currentHashFn","listenSpec","sendListen_","PersistentConnection.prototype.sendListen_","req","p","warnOnListenWarnings_","removeListen_","PersistentConnection.warnOnListenWarnings_","warnings","indexSpec","indexPath","PersistentConnection.prototype.refreshAuthToken","tryAuth","reduceReconnectDelayIfAdminCredential_","PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_","credential","isAdmin","RECONNECT_MAX_DELAY_FOR_ADMINS","PersistentConnection.prototype.tryAuth","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","PersistentConnection.prototype.unlisten","sendUnlisten_","PersistentConnection.prototype.sendUnlisten_","queryObj","PersistentConnection.prototype.onDisconnectPut","sendOnDisconnect_","PersistentConnection.prototype.onDisconnectMerge","PersistentConnection.prototype.onDisconnectCancel","PersistentConnection.prototype.sendOnDisconnect_","request","response","PersistentConnection.prototype.put","putInternal","PersistentConnection.prototype.merge","PersistentConnection.prototype.putInternal","sendPut_","PersistentConnection.prototype.sendPut_","queued","PersistentConnection.prototype.reportStats","errorReason","PersistentConnection.prototype.onDataMessage_","reqNum","onDataPush_","PersistentConnection.prototype.onDataPush_","onListenRevoked_","onSecurityDebugPacket_","PersistentConnection.prototype.onReady_","getTime","Date","handleTimestamp_","sendConnectStats_","restoreState_","PersistentConnection.prototype.scheduleConnect_","establishConnection_","PersistentConnection.prototype.onVisible_","PersistentConnection.prototype.onOnline_","online","onRealtimeDisconnect_","PersistentConnection.prototype.onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","RECONNECT_DELAY_RESET_TIMEOUT","timeSinceLastConnectAttempt","reconnectDelay","RECONNECT_DELAY_MULTIPLIER","PersistentConnection.prototype.establishConnection_","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","accessToken","interrupt","SERVER_KILL_INTERRUPT_REASON","PersistentConnection.prototype.interrupt","resume","PersistentConnection.prototype.resume","PersistentConnection.prototype.handleTimestamp_","serverTimeOffset","PersistentConnection.prototype.cancelSentTransactions_","PersistentConnection.prototype.onListenRevoked_","q","PersistentConnection.prototype.removeListen_","normalizedPathString","PersistentConnection.prototype.onAuthRevoked_","statusCode","explanation","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection.prototype.onSecurityDebugPacket_","console","PersistentConnection.prototype.restoreState_","PersistentConnection.prototype.sendConnectStats_","clientName","NODE_CLIENT","isReactNative","PersistentConnection.prototype.shouldReconnect_","ReadonlyRestClient","ReadonlyRestClient.prototype.reportStats","getListenId_","ReadonlyRestClient.getListenId_","ReadonlyRestClient.prototype.listen","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","status_1","ReadonlyRestClient.prototype.unlisten","ReadonlyRestClient.prototype.refreshAuthToken","ReadonlyRestClient.prototype.restRequest_","authTokenData","authToken","querystring","xhr","XMLHttpRequest","xhr.onreadystatechange","responseText","Repo","forceRestClient","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","search","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","Repo.prototype.toString","Repo.prototype.name","serverTime","Repo.prototype.serverTime","offset","offsetNode","generateServerValues","Repo.prototype.generateServerValues","Repo.prototype.onDataUpdate_","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","Repo.prototype.interceptServerData_","Repo.prototype.onConnectStatus_","connectStatus","runOnDisconnectEvents_","Repo.prototype.onServerInfoUpdate_","Repo.prototype.updateInfo_","getNextWriteId_","Repo.prototype.getNextWriteId_","Repo.prototype.setWithPriority","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","Repo.prototype.update","childrenToMerge","empty","changedKey","changedValue","writeId_1","Repo.prototype.runOnDisconnectEvents_","resolvedOnDisconnectTree","Repo.prototype.onDisconnectCancel","Repo.prototype.onDisconnectSet","Repo.prototype.onDisconnectSetWithPriority","Repo.prototype.onDisconnectUpdate","Repo.prototype.addEventCallbackForQuery","Repo.prototype.removeEventCallbackForQuery","Repo.prototype.interrupt","INTERRUPT_REASON","Repo.prototype.resume","Repo.prototype.stats","showDelta","longestName","reduce","previousValue","currentValue","statsIncrementCounter","Repo.prototype.statsIncrementCounter","metric","Repo.prototype.log_","Repo.prototype.callOnCompleteCallback","__database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","RangedFilter.prototype.getStartPost","getEndPost","RangedFilter.prototype.getEndPost","RangedFilter.prototype.matches","RangedFilter.prototype.updateChild","RangedFilter.prototype.updateFullNode","self","RangedFilter.prototype.updatePriority","RangedFilter.prototype.filtersNodes","RangedFilter.prototype.getIndexedFilter","RangedFilter.prototype.getIndex","RangedFilter.getStartPost_","RangedFilter.getEndPost_","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","LimitedFilter.prototype.updateChild","fullLimitUpdateChild_","LimitedFilter.prototype.updateFullNode","inRange","indexCompare_1","foundStartPost","LimitedFilter.prototype.updatePriority","LimitedFilter.prototype.filtersNodes","LimitedFilter.prototype.getIndexedFilter","LimitedFilter.prototype.getIndex","LimitedFilter.prototype.fullLimitUpdateChild_","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","QueryParams","endNameSet_","endSet_","startNameSet_","startSet_","limitSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","QueryParams.prototype.hasStart","QueryParams.prototype.isViewFromLeft","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","QueryParams.prototype.getIndexStartValue","QueryParams.prototype.getIndexStartName","QueryParams.prototype.hasEnd","QueryParams.prototype.getIndexEndValue","QueryParams.prototype.getIndexEndName","QueryParams.prototype.hasLimit","QueryParams.prototype.hasAnchoredLimit","QueryParams.prototype.getLimit","QueryParams.prototype.getIndex","copy_","QueryParams.prototype.copy_","QueryParams.prototype.limit","newLimit","QueryParams.prototype.limitToFirst","QueryParams.prototype.limitToLast","VIEW_FROM_RIGHT","QueryParams.prototype.startAt","QueryParams.prototype.endAt","QueryParams.prototype.orderBy","QueryParams.prototype.getQueryObject","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","QueryParams.prototype.loadsAllData","QueryParams.prototype.isDefault","QueryParams.prototype.getNodeFilter","QueryParams.prototype.toRestQueryStringParameters","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference.prototype.getKey","Reference.prototype.child","Reference.prototype.getParent","parentPath","getRoot","Reference.prototype.getRoot","databaseProp","Reference.prototype.databaseProp","database","Reference.prototype.set","Reference.prototype.update","Reference.prototype.setWithPriority","Reference.prototype.remove","transaction","Reference.prototype.transaction","transactionUpdate","applyLocally","startTransaction","promiseComplete","setPriority","Reference.prototype.setPriority","Reference.prototype.push","thennablePushRef","pushRef","Reference.prototype.onDisconnect","TreeNode","childCount","Tree","name_","parent_","subTree","Tree.prototype.subTree","pathObj","Tree.prototype.getValue","setValue","Tree.prototype.setValue","updateParents_","Tree.prototype.clear","Tree.prototype.hasChildren","Tree.prototype.isEmpty","Tree.prototype.forEachChild","forEachDescendant","Tree.prototype.forEachDescendant","includeSelf","childrenFirst","forEachAncestor","Tree.prototype.forEachAncestor","forEachImmediateDescendantWithValue","Tree.prototype.forEachImmediateDescendantWithValue","Tree.prototype.path","Tree.prototype.name","Tree.prototype.parent","Tree.prototype.updateParents_","updateChild_","Tree.prototype.updateChild_","childEmpty","childExists","TransactionStatus","MAX_TRANSACTION_RETRIES_","Repo.prototype.transactions_init_","transactionQueueTree_","Repo.prototype.startTransaction","valueCallback","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","Repo.prototype.getLatestState_","excludeSets","Repo.prototype.sendReadyTransactions_","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","allRun","sendTransactionQueue_","Repo.prototype.sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","Repo.prototype.rerunTransactions_","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","Repo.prototype.rerunTransactionQueue_","txnsToRerun","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","Repo.prototype.getAncestorTransactionNode_","transactionNode","Repo.prototype.buildTransactionQueue_","transactionQueue","aggregateTransactionQueuesForNode_","Repo.prototype.aggregateTransactionQueuesForNode_","Repo.prototype.pruneCompletedTransactionsBelowNode_","to","from","Repo.prototype.abortTransactions_","abortTransactionsOnNode_","Repo.prototype.abortTransactionsOnNode_","lastSent","_staticInstance","repos_","useRestClient_","RepoManager.getInstance","RepoManager.prototype.interrupt","appName","dbUrl","RepoManager.prototype.resume","RepoManager.prototype.databaseFromApp","createRepo","deleteRepo","RepoManager.prototype.deleteRepo","appRepos","RepoManager.prototype.createRepo","RepoManager.prototype.forceRestClient","DatabaseInternals","Database.prototype.ref","checkDeleted_","refFromURL","Database.prototype.refFromURL","apiName","parsedURL","Database.prototype.checkDeleted_","goOffline","Database.prototype.goOffline","goOnline","Database.prototype.goOnline","TIMESTAMP","delete","DatabaseInternals.prototype.delete","__awaiter","__generator","freeze","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","simpleListen","PersistentConnection.prototype.simpleListen","echo","PersistentConnection.prototype.echo","onEcho","DataConnection","RealTimeConnection","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","ConnectionTarget","listens","firebaseRef"]
}
