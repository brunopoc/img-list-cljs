{
"version":3,
"file":"module$node_modules$$firebase$messaging$dist$index_cjs.js",
"lineCount":80,
"mappings":"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",
"sources":["node_modules/@firebase/messaging/dist/index.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$firebase$messaging$dist$index_cjs\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib_1 = require('tslib');\nvar util = require('@firebase/util');\n\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_CODES = {\r\n    AVAILABLE_IN_WINDOW: 'only-available-in-window',\r\n    AVAILABLE_IN_SW: 'only-available-in-sw',\r\n    SHOULD_BE_INHERITED: 'should-be-overriden',\r\n    BAD_SENDER_ID: 'bad-sender-id',\r\n    INCORRECT_GCM_SENDER_ID: 'incorrect-gcm-sender-id',\r\n    PERMISSION_DEFAULT: 'permission-default',\r\n    PERMISSION_BLOCKED: 'permission-blocked',\r\n    UNSUPPORTED_BROWSER: 'unsupported-browser',\r\n    NOTIFICATIONS_BLOCKED: 'notifications-blocked',\r\n    FAILED_DEFAULT_REGISTRATION: 'failed-serviceworker-registration',\r\n    SW_REGISTRATION_EXPECTED: 'sw-registration-expected',\r\n    GET_SUBSCRIPTION_FAILED: 'get-subscription-failed',\r\n    INVALID_SAVED_TOKEN: 'invalid-saved-token',\r\n    SW_REG_REDUNDANT: 'sw-reg-redundant',\r\n    TOKEN_SUBSCRIBE_FAILED: 'token-subscribe-failed',\r\n    TOKEN_SUBSCRIBE_NO_TOKEN: 'token-subscribe-no-token',\r\n    TOKEN_SUBSCRIBE_NO_PUSH_SET: 'token-subscribe-no-push-set',\r\n    TOKEN_UNSUBSCRIBE_FAILED: 'token-unsubscribe-failed',\r\n    TOKEN_UPDATE_FAILED: 'token-update-failed',\r\n    TOKEN_UPDATE_NO_TOKEN: 'token-update-no-token',\r\n    USE_SW_BEFORE_GET_TOKEN: 'use-sw-before-get-token',\r\n    INVALID_DELETE_TOKEN: 'invalid-delete-token',\r\n    DELETE_TOKEN_NOT_FOUND: 'delete-token-not-found',\r\n    DELETE_SCOPE_NOT_FOUND: 'delete-scope-not-found',\r\n    BG_HANDLER_FUNCTION_EXPECTED: 'bg-handler-function-expected',\r\n    NO_WINDOW_CLIENT_TO_MSG: 'no-window-client-to-msg',\r\n    UNABLE_TO_RESUBSCRIBE: 'unable-to-resubscribe',\r\n    NO_FCM_TOKEN_FOR_RESUBSCRIBE: 'no-fcm-token-for-resubscribe',\r\n    FAILED_TO_DELETE_TOKEN: 'failed-to-delete-token',\r\n    NO_SW_IN_REG: 'no-sw-in-reg',\r\n    BAD_SCOPE: 'bad-scope',\r\n    BAD_VAPID_KEY: 'bad-vapid-key',\r\n    BAD_SUBSCRIPTION: 'bad-subscription',\r\n    BAD_TOKEN: 'bad-token',\r\n    BAD_PUSH_SET: 'bad-push-set',\r\n    FAILED_DELETE_VAPID_KEY: 'failed-delete-vapid-key',\r\n    INVALID_PUBLIC_VAPID_KEY: 'invalid-public-vapid-key',\r\n    USE_PUBLIC_KEY_BEFORE_GET_TOKEN: 'use-public-key-before-get-token',\r\n    PUBLIC_KEY_DECRYPTION_FAILED: 'public-vapid-key-decryption-failed'\r\n};\r\nvar ERROR_MAP = (_a = {},\r\n    _a[ERROR_CODES.AVAILABLE_IN_WINDOW] = 'This method is available in a Window context.',\r\n    _a[ERROR_CODES.AVAILABLE_IN_SW] = 'This method is available in a service worker ' + 'context.',\r\n    _a[ERROR_CODES.SHOULD_BE_INHERITED] = 'This method should be overriden by ' + 'extended classes.',\r\n    _a[ERROR_CODES.BAD_SENDER_ID] = \"Please ensure that 'messagingSenderId' is set \" +\r\n        'correctly in the options passed into firebase.initializeApp().',\r\n    _a[ERROR_CODES.PERMISSION_DEFAULT] = 'The required permissions were not granted and ' + 'dismissed instead.',\r\n    _a[ERROR_CODES.PERMISSION_BLOCKED] = 'The required permissions were not granted and ' + 'blocked instead.',\r\n    _a[ERROR_CODES.UNSUPPORTED_BROWSER] = \"This browser doesn't support the API's \" +\r\n        'required to use the firebase SDK.',\r\n    _a[ERROR_CODES.NOTIFICATIONS_BLOCKED] = 'Notifications have been blocked.',\r\n    _a[ERROR_CODES.FAILED_DEFAULT_REGISTRATION] = 'We are unable to register the ' +\r\n        'default service worker. {$browserErrorMessage}',\r\n    _a[ERROR_CODES.SW_REGISTRATION_EXPECTED] = 'A service worker registration was the ' + 'expected input.',\r\n    _a[ERROR_CODES.GET_SUBSCRIPTION_FAILED] = 'There was an error when trying to get ' +\r\n        'any existing Push Subscriptions.',\r\n    _a[ERROR_CODES.INVALID_SAVED_TOKEN] = 'Unable to access details of the saved token.',\r\n    _a[ERROR_CODES.SW_REG_REDUNDANT] = 'The service worker being used for push was made ' + 'redundant.',\r\n    _a[ERROR_CODES.TOKEN_SUBSCRIBE_FAILED] = 'A problem occured while subscribing the ' + 'user to FCM: {$message}',\r\n    _a[ERROR_CODES.TOKEN_SUBSCRIBE_NO_TOKEN] = 'FCM returned no token when subscribing ' + 'the user to push.',\r\n    _a[ERROR_CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET] = 'FCM returned an invalid response ' + 'when getting an FCM token.',\r\n    _a[ERROR_CODES.TOKEN_UNSUBSCRIBE_FAILED] = 'A problem occured while unsubscribing the ' + 'user from FCM: {$message}',\r\n    _a[ERROR_CODES.TOKEN_UPDATE_FAILED] = 'A problem occured while updating the ' + 'user from FCM: {$message}',\r\n    _a[ERROR_CODES.TOKEN_UPDATE_NO_TOKEN] = 'FCM returned no token when updating ' + 'the user to push.',\r\n    _a[ERROR_CODES.USE_SW_BEFORE_GET_TOKEN] = 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.',\r\n    _a[ERROR_CODES.INVALID_DELETE_TOKEN] = 'You must pass a valid token into ' +\r\n        'deleteToken(), i.e. the token from getToken().',\r\n    _a[ERROR_CODES.DELETE_TOKEN_NOT_FOUND] = 'The deletion attempt for token could not ' +\r\n        'be performed as the token was not found.',\r\n    _a[ERROR_CODES.DELETE_SCOPE_NOT_FOUND] = 'The deletion attempt for service worker ' +\r\n        'scope could not be performed as the scope was not found.',\r\n    _a[ERROR_CODES.BG_HANDLER_FUNCTION_EXPECTED] = 'The input to ' + 'setBackgroundMessageHandler() must be a function.',\r\n    _a[ERROR_CODES.NO_WINDOW_CLIENT_TO_MSG] = 'An attempt was made to message a ' + 'non-existant window client.',\r\n    _a[ERROR_CODES.UNABLE_TO_RESUBSCRIBE] = 'There was an error while re-subscribing ' +\r\n        'the FCM token for push messaging. Will have to resubscribe the ' +\r\n        'user on next visit. {$message}',\r\n    _a[ERROR_CODES.NO_FCM_TOKEN_FOR_RESUBSCRIBE] = 'Could not find an FCM token ' +\r\n        'and as a result, unable to resubscribe. Will have to resubscribe the ' +\r\n        'user on next visit.',\r\n    _a[ERROR_CODES.FAILED_TO_DELETE_TOKEN] = 'Unable to delete the currently saved token.',\r\n    _a[ERROR_CODES.NO_SW_IN_REG] = 'Even though the service worker registration was ' +\r\n        'successful, there was a problem accessing the service worker itself.',\r\n    _a[ERROR_CODES.INCORRECT_GCM_SENDER_ID] = \"Please change your web app manifest's \" +\r\n        \"'gcm_sender_id' value to '103953800507' to use Firebase messaging.\",\r\n    _a[ERROR_CODES.BAD_SCOPE] = 'The service worker scope must be a string with at ' +\r\n        'least one character.',\r\n    _a[ERROR_CODES.BAD_VAPID_KEY] = 'The public VAPID key is not a Uint8Array with 65 bytes.',\r\n    _a[ERROR_CODES.BAD_SUBSCRIPTION] = 'The subscription must be a valid ' + 'PushSubscription.',\r\n    _a[ERROR_CODES.BAD_TOKEN] = 'The FCM Token used for storage / lookup was not ' +\r\n        'a valid token string.',\r\n    _a[ERROR_CODES.BAD_PUSH_SET] = 'The FCM push set used for storage / lookup was not ' +\r\n        'not a valid push set string.',\r\n    _a[ERROR_CODES.FAILED_DELETE_VAPID_KEY] = 'The VAPID key could not be deleted.',\r\n    _a[ERROR_CODES.INVALID_PUBLIC_VAPID_KEY] = 'The public VAPID key must be a string.',\r\n    _a[ERROR_CODES.PUBLIC_KEY_DECRYPTION_FAILED] = 'The public VAPID key did not equal ' + '65 bytes when decrypted.',\r\n    _a);\r\nvar errorFactory = new util.ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_PUBLIC_VAPID_KEY = new Uint8Array([\r\n    0x04,\r\n    0x33,\r\n    0x94,\r\n    0xf7,\r\n    0xdf,\r\n    0xa1,\r\n    0xeb,\r\n    0xb1,\r\n    0xdc,\r\n    0x03,\r\n    0xa2,\r\n    0x5e,\r\n    0x15,\r\n    0x71,\r\n    0xdb,\r\n    0x48,\r\n    0xd3,\r\n    0x2e,\r\n    0xed,\r\n    0xed,\r\n    0xb2,\r\n    0x34,\r\n    0xdb,\r\n    0xb7,\r\n    0x47,\r\n    0x3a,\r\n    0x0c,\r\n    0x8f,\r\n    0xc4,\r\n    0xcc,\r\n    0xe1,\r\n    0x6f,\r\n    0x3c,\r\n    0x8c,\r\n    0x84,\r\n    0xdf,\r\n    0xab,\r\n    0xb6,\r\n    0x66,\r\n    0x3e,\r\n    0xf2,\r\n    0x0c,\r\n    0xd4,\r\n    0x8b,\r\n    0xfe,\r\n    0xe3,\r\n    0xf9,\r\n    0x76,\r\n    0x2f,\r\n    0x14,\r\n    0x1c,\r\n    0x63,\r\n    0x08,\r\n    0x6a,\r\n    0x6f,\r\n    0x2d,\r\n    0xb1,\r\n    0x1a,\r\n    0x95,\r\n    0xb0,\r\n    0xce,\r\n    0x37,\r\n    0xc0,\r\n    0x9c,\r\n    0x6e\r\n]);\r\nvar ENDPOINT = 'https://fcm.googleapis.com';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MessageParameter;\r\n(function (MessageParameter) {\r\n    MessageParameter[\"TYPE_OF_MSG\"] = \"firebase-messaging-msg-type\";\r\n    MessageParameter[\"DATA\"] = \"firebase-messaging-msg-data\";\r\n})(MessageParameter || (MessageParameter = {}));\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_MSG_RECEIVED\"] = \"push-msg-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isArrayBufferEqual(a, b) {\r\n    if (a == null || b == null) {\r\n        return false;\r\n    }\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a.byteLength !== b.byteLength) {\r\n        return false;\r\n    }\r\n    var viewA = new DataView(a);\r\n    var viewB = new DataView(b);\r\n    for (var i = 0; i < a.byteLength; i++) {\r\n        if (viewA.getUint8(i) !== viewB.getUint8(i)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction toBase64(arrayBuffer) {\r\n    var uint8Version = new Uint8Array(arrayBuffer);\r\n    return btoa(String.fromCharCode.apply(String, tslib_1.__spread(uint8Version)));\r\n}\r\nfunction arrayBufferToBase64(arrayBuffer) {\r\n    var base64String = toBase64(arrayBuffer);\r\n    return base64String\r\n        .replace(/=/g, '')\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar IidModel = /** @class */ (function () {\r\n    function IidModel() {\r\n    }\r\n    IidModel.prototype.getToken = function (senderId, subscription, publicVapidKey) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var p256dh, auth, fcmSubscribeBody, applicationPubKey, headers, subscribeOptions, responseData, response, err_1, message;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n                        auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n                        fcmSubscribeBody = \"authorized_entity=\" + senderId + \"&\" +\r\n                            (\"endpoint=\" + subscription.endpoint + \"&\") +\r\n                            (\"encryption_key=\" + p256dh + \"&\") +\r\n                            (\"encryption_auth=\" + auth);\r\n                        if (!isArrayBufferEqual(publicVapidKey.buffer, DEFAULT_PUBLIC_VAPID_KEY.buffer)) {\r\n                            applicationPubKey = arrayBufferToBase64(publicVapidKey);\r\n                            fcmSubscribeBody += \"&application_pub_key=\" + applicationPubKey;\r\n                        }\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        subscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmSubscribeBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/subscribe', subscribeOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_FAILED);\r\n                    case 5:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_FAILED, {\r\n                                message: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_NO_TOKEN);\r\n                        }\r\n                        if (!responseData.pushSet) {\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET);\r\n                        }\r\n                        return [2 /*return*/, {\r\n                                token: responseData.token,\r\n                                pushSet: responseData.pushSet\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Update the underlying token details for fcmToken.\r\n     */\r\n    IidModel.prototype.updateToken = function (senderId, fcmToken, fcmPushSet, subscription, publicVapidKey) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var p256dh, auth, fcmUpdateBody, applicationPubKey, headers, updateOptions, responseData, response, err_2, message;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n                        auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n                        fcmUpdateBody = \"push_set=\" + fcmPushSet + \"&\" +\r\n                            (\"token=\" + fcmToken + \"&\") +\r\n                            (\"authorized_entity=\" + senderId + \"&\") +\r\n                            (\"endpoint=\" + subscription.endpoint + \"&\") +\r\n                            (\"encryption_key=\" + p256dh + \"&\") +\r\n                            (\"encryption_auth=\" + auth);\r\n                        if (!isArrayBufferEqual(publicVapidKey.buffer, DEFAULT_PUBLIC_VAPID_KEY.buffer)) {\r\n                            applicationPubKey = arrayBufferToBase64(publicVapidKey);\r\n                            fcmUpdateBody += \"&application_pub_key=\" + applicationPubKey;\r\n                        }\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        updateOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmUpdateBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/subscribe', updateOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_2 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.TOKEN_UPDATE_FAILED);\r\n                    case 5:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_UPDATE_FAILED, {\r\n                                message: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_UPDATE_NO_TOKEN);\r\n                        }\r\n                        return [2 /*return*/, responseData.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a fcmToken, pushSet and messagingSenderId, delete an FCM token.\r\n     */\r\n    IidModel.prototype.deleteToken = function (senderId, fcmToken, fcmPushSet) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var fcmUnsubscribeBody, headers, unsubscribeOptions, response, responseData, message, err_3;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        fcmUnsubscribeBody = \"authorized_entity=\" + senderId + \"&\" +\r\n                            (\"token=\" + fcmToken + \"&\") +\r\n                            (\"pushSet=\" + fcmPushSet);\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        unsubscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmUnsubscribeBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/unsubscribe', unsubscribeOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_UNSUBSCRIBE_FAILED, {\r\n                                message: message\r\n                            });\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_3 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.TOKEN_UNSUBSCRIBE_FAILED);\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return IidModel;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction base64ToArrayBuffer(base64String) {\r\n    var padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    var rawData = atob(base64);\r\n    var outputArray = new Uint8Array(rawData.length);\r\n    for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OLD_DB_NAME = 'undefined';\r\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nfunction handleDb(db) {\r\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n        // We found a database with the name 'undefined', but our expected object\r\n        // store isn't defined.\r\n        return;\r\n    }\r\n    var transaction = db.transaction(OLD_OBJECT_STORE_NAME);\r\n    var objectStore = transaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n    var iidModel = new IidModel();\r\n    var openCursorRequest = objectStore.openCursor();\r\n    openCursorRequest.onerror = function (event) {\r\n        // NOOP - Nothing we can do.\r\n        console.warn('Unable to cleanup old IDB.', event);\r\n    };\r\n    openCursorRequest.onsuccess = function () {\r\n        var cursor = openCursorRequest.result;\r\n        if (cursor) {\r\n            // cursor.value contains the current record being iterated through\r\n            // this is where you'd do something with the result\r\n            var tokenDetails = cursor.value;\r\n            iidModel.deleteToken(tokenDetails.fcmSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet);\r\n            cursor.continue();\r\n        }\r\n        else {\r\n            db.close();\r\n            indexedDB.deleteDatabase(OLD_DB_NAME);\r\n        }\r\n    };\r\n}\r\nfunction cleanV1() {\r\n    var request = indexedDB.open(OLD_DB_NAME);\r\n    request.onerror = function (event) {\r\n        // NOOP - Nothing we can do.\r\n    };\r\n    request.onsuccess = function (event) {\r\n        var db = request.result;\r\n        handleDb(db);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DbInterface = /** @class */ (function () {\r\n    function DbInterface() {\r\n        this.dbPromise = null;\r\n    }\r\n    /** Gets record(s) from the objectStore that match the given key. */\r\n    DbInterface.prototype.get = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.get(key); });\r\n    };\r\n    /** Gets record(s) from the objectStore that match the given index. */\r\n    DbInterface.prototype.getIndex = function (index, key) {\r\n        function runRequest(objectStore) {\r\n            var idbIndex = objectStore.index(index);\r\n            return idbIndex.get(key);\r\n        }\r\n        return this.createTransaction(runRequest);\r\n    };\r\n    /** Assigns or overwrites the record for the given value. */\r\n    // tslint:disable-next-line:no-any IndexedDB values are of type \"any\"\r\n    DbInterface.prototype.put = function (value) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.put(value); }, 'readwrite');\r\n    };\r\n    /** Deletes record(s) from the objectStore that match the given key. */\r\n    DbInterface.prototype.delete = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.delete(key); }, 'readwrite');\r\n    };\r\n    /**\r\n     * Close the currently open database.\r\n     */\r\n    DbInterface.prototype.closeDatabase = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.dbPromise) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.dbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        db.close();\r\n                        this.dbPromise = null;\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates an IndexedDB Transaction and passes its objectStore to the\r\n     * runRequest function, which runs the database request.\r\n     *\r\n     * @return Promise that resolves with the result of the runRequest function\r\n     */\r\n    DbInterface.prototype.createTransaction = function (runRequest, mode) {\r\n        if (mode === void 0) { mode = 'readonly'; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var db, transaction, request, result;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDb()];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        transaction = db.transaction(this.objectStoreName, mode);\r\n                        request = transaction.objectStore(this.objectStoreName);\r\n                        return [4 /*yield*/, promisify(runRequest(request))];\r\n                    case 2:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                transaction.oncomplete = function () {\r\n                                    resolve(result);\r\n                                };\r\n                                transaction.onerror = function () {\r\n                                    reject(transaction.error);\r\n                                };\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Gets the cached db connection or opens a new one. */\r\n    DbInterface.prototype.getDb = function () {\r\n        var _this = this;\r\n        if (!this.dbPromise) {\r\n            this.dbPromise = new Promise(function (resolve, reject) {\r\n                var request = indexedDB.open(_this.dbName, _this.dbVersion);\r\n                request.onsuccess = function () {\r\n                    resolve(request.result);\r\n                };\r\n                request.onerror = function () {\r\n                    _this.dbPromise = null;\r\n                    reject(request.error);\r\n                };\r\n                request.onupgradeneeded = function (event) { return _this.onDbUpgrade(request, event); };\r\n            });\r\n        }\r\n        return this.dbPromise;\r\n    };\r\n    return DbInterface;\r\n}());\r\n/** Promisifies an IDBRequest. Resolves with the IDBRequest's result. */\r\nfunction promisify(request) {\r\n    return new Promise(function (resolve, reject) {\r\n        request.onsuccess = function () {\r\n            resolve(request.result);\r\n        };\r\n        request.onerror = function () {\r\n            reject(request.error);\r\n        };\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TokenDetailsModel = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TokenDetailsModel, _super);\r\n    function TokenDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_token_details_db';\r\n        _this.dbVersion = 3;\r\n        _this.objectStoreName = 'fcm_token_object_Store';\r\n        return _this;\r\n    }\r\n    TokenDetailsModel.prototype.onDbUpgrade = function (request, event) {\r\n        var db = request.result;\r\n        // Lack of 'break' statements is intentional.\r\n        switch (event.oldVersion) {\r\n            case 0: {\r\n                // New IDB instance\r\n                var objectStore = db.createObjectStore(this.objectStoreName, {\r\n                    keyPath: 'swScope'\r\n                });\r\n                // Make sure the sender ID can be searched\r\n                objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\r\n                    unique: false\r\n                });\r\n                objectStore.createIndex('fcmToken', 'fcmToken', { unique: true });\r\n            }\r\n            case 1: {\r\n                // Prior to version 2, we were using either 'fcm_token_details_db'\r\n                // or 'undefined' as the database name due to bug in the SDK\r\n                // So remove the old tokens and databases.\r\n                cleanV1();\r\n            }\r\n            case 2: {\r\n                var objectStore = request.transaction.objectStore(this.objectStoreName);\r\n                var cursorRequest_1 = objectStore.openCursor();\r\n                cursorRequest_1.onsuccess = function () {\r\n                    var cursor = cursorRequest_1.result;\r\n                    if (cursor) {\r\n                        var value = cursor.value;\r\n                        var newValue = tslib_1.__assign({}, value);\r\n                        if (!value.createTime) {\r\n                            newValue.createTime = Date.now();\r\n                        }\r\n                        if (typeof value.vapidKey === 'string') {\r\n                            newValue.vapidKey = base64ToArrayBuffer(value.vapidKey);\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.auth = base64ToArrayBuffer(value.auth).buffer;\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.p256dh = base64ToArrayBuffer(value.p256dh).buffer;\r\n                        }\r\n                        cursor.update(newValue);\r\n                        cursor.continue();\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Given a token, this method will look up the details in indexedDB.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromToken = function (fcmToken) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (!fcmToken) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_TOKEN);\r\n                }\r\n                validateInputs({ fcmToken: fcmToken });\r\n                return [2 /*return*/, this.getIndex('fcmToken', fcmToken)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the details in\r\n     * indexedDB.\r\n     * @return The details associated with that token.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromSWScope = function (swScope) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (!swScope) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                }\r\n                validateInputs({ swScope: swScope });\r\n                return [2 /*return*/, this.get(swScope)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save the details for the fcm token for re-use at a later date.\r\n     * @param input A plain js object containing args to save.\r\n     */\r\n    TokenDetailsModel.prototype.saveTokenDetails = function (tokenDetails) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (!tokenDetails.swScope) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                }\r\n                if (!tokenDetails.vapidKey) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_VAPID_KEY);\r\n                }\r\n                if (!tokenDetails.endpoint || !tokenDetails.auth || !tokenDetails.p256dh) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n                }\r\n                if (!tokenDetails.fcmSenderId) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SENDER_ID);\r\n                }\r\n                if (!tokenDetails.fcmToken) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_TOKEN);\r\n                }\r\n                if (!tokenDetails.fcmPushSet) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_PUSH_SET);\r\n                }\r\n                validateInputs(tokenDetails);\r\n                return [2 /*return*/, this.put(tokenDetails)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM token.\r\n     * It's returning a promise in case we need to move to an async\r\n     * method for deleting at a later date.\r\n     *\r\n     * @return Resolves once the FCM token details have been deleted and returns\r\n     * the deleted details.\r\n     */\r\n    TokenDetailsModel.prototype.deleteToken = function (token) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof token !== 'string' || token.length === 0) {\r\n                            return [2 /*return*/, Promise.reject(errorFactory.create(ERROR_CODES.INVALID_DELETE_TOKEN))];\r\n                        }\r\n                        return [4 /*yield*/, this.getTokenDetailsFromToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        if (!details) {\r\n                            throw errorFactory.create(ERROR_CODES.DELETE_TOKEN_NOT_FOUND);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(details.swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, details];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return TokenDetailsModel;\r\n}(DbInterface));\r\n/**\r\n * This method takes an object and will check for known arguments and\r\n * validate the input.\r\n * @return Promise that resolves if input is valid, rejects otherwise.\r\n */\r\nfunction validateInputs(input) {\r\n    if (input.fcmToken) {\r\n        if (typeof input.fcmToken !== 'string' || input.fcmToken.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_TOKEN);\r\n        }\r\n    }\r\n    if (input.swScope) {\r\n        if (typeof input.swScope !== 'string' || input.swScope.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n        }\r\n    }\r\n    if (input.vapidKey) {\r\n        if (!(input.vapidKey instanceof Uint8Array) ||\r\n            input.vapidKey.length !== 65) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_VAPID_KEY);\r\n        }\r\n    }\r\n    if (input.endpoint) {\r\n        if (typeof input.endpoint !== 'string' || input.endpoint.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n        }\r\n    }\r\n    if (input.auth) {\r\n        if (!(input.auth instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n        }\r\n    }\r\n    if (input.p256dh) {\r\n        if (!(input.p256dh instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n        }\r\n    }\r\n    if (input.fcmSenderId) {\r\n        if (typeof input.fcmSenderId !== 'string' ||\r\n            input.fcmSenderId.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SENDER_ID);\r\n        }\r\n    }\r\n    if (input.fcmPushSet) {\r\n        if (typeof input.fcmPushSet !== 'string' || input.fcmPushSet.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_PUSH_SET);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UNCOMPRESSED_PUBLIC_KEY_SIZE = 65;\r\nvar VapidDetailsModel = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VapidDetailsModel, _super);\r\n    function VapidDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_vapid_details_db';\r\n        _this.dbVersion = 1;\r\n        _this.objectStoreName = 'fcm_vapid_object_Store';\r\n        return _this;\r\n    }\r\n    VapidDetailsModel.prototype.onDbUpgrade = function (request) {\r\n        var db = request.result;\r\n        db.createObjectStore(this.objectStoreName, { keyPath: 'swScope' });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the vapid key\r\n     * in indexedDB.\r\n     */\r\n    VapidDetailsModel.prototype.getVapidFromSWScope = function (swScope) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                            throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                        }\r\n                        return [4 /*yield*/, this.get(swScope)];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result ? result.vapidKey : undefined];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save a vapid key against a swScope for later date.\r\n     */\r\n    VapidDetailsModel.prototype.saveVapidDetails = function (swScope, vapidKey) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                }\r\n                if (vapidKey === null || vapidKey.length !== UNCOMPRESSED_PUBLIC_KEY_SIZE) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_VAPID_KEY);\r\n                }\r\n                details = {\r\n                    swScope: swScope,\r\n                    vapidKey: vapidKey\r\n                };\r\n                return [2 /*return*/, this.put(details)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM VAPID key for a SW scope.\r\n     * Resolves once the scope/vapid details have been deleted and returns the\r\n     * deleted vapid key.\r\n     */\r\n    VapidDetailsModel.prototype.deleteVapidDetails = function (swScope) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var vapidKey;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getVapidFromSWScope(swScope)];\r\n                    case 1:\r\n                        vapidKey = _a.sent();\r\n                        if (!vapidKey) {\r\n                            throw errorFactory.create(ERROR_CODES.DELETE_SCOPE_NOT_FOUND);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, vapidKey];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return VapidDetailsModel;\r\n}(DbInterface));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SENDER_ID_OPTION_NAME = 'messagingSenderId';\r\n// Database cache should be invalidated once a week.\r\nvar TOKEN_EXPIRATION_MILLIS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nvar BaseController = /** @class */ (function () {\r\n    /**\r\n     * An interface of the Messaging Service API\r\n     */\r\n    function BaseController(app) {\r\n        var _this = this;\r\n        if (!app.options[SENDER_ID_OPTION_NAME] ||\r\n            typeof app.options[SENDER_ID_OPTION_NAME] !== 'string') {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SENDER_ID);\r\n        }\r\n        this.messagingSenderId = app.options[SENDER_ID_OPTION_NAME];\r\n        this.tokenDetailsModel = new TokenDetailsModel();\r\n        this.vapidDetailsModel = new VapidDetailsModel();\r\n        this.iidModel = new IidModel();\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this.delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * @export\r\n     */\r\n    BaseController.prototype.getToken = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var currentPermission, swReg, publicVapidKey, pushSubscription, tokenDetails;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        currentPermission = this.getNotificationPermission_();\r\n                        if (currentPermission === 'denied') {\r\n                            throw errorFactory.create(ERROR_CODES.NOTIFICATIONS_BLOCKED);\r\n                        }\r\n                        else if (currentPermission !== 'granted') {\r\n                            // We must wait for permission to be granted\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        return [4 /*yield*/, this.getPublicVapidKey_()];\r\n                    case 2:\r\n                        publicVapidKey = _a.sent();\r\n                        return [4 /*yield*/, this.getPushSubscription(swReg, publicVapidKey)];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        return [4 /*yield*/, this.tokenDetailsModel.getTokenDetailsFromSWScope(swReg.scope)];\r\n                    case 4:\r\n                        tokenDetails = _a.sent();\r\n                        if (tokenDetails) {\r\n                            return [2 /*return*/, this.manageExistingToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                        }\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * manageExistingToken is triggered if there's an existing FCM token in the\r\n     * database and it can take 3 different actions:\r\n     * 1) Retrieve the existing FCM token from the database.\r\n     * 2) If VAPID details have changed: Delete the existing token and create a\r\n     * new one with the new VAPID key.\r\n     * 3) If the database cache is invalidated: Send a request to FCM to update\r\n     * the token, and to check if the token is still valid on FCM-side.\r\n     */\r\n    BaseController.prototype.manageExistingToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var isTokenValid, now;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        isTokenValid = isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails);\r\n                        if (isTokenValid) {\r\n                            now = Date.now();\r\n                            if (now < tokenDetails.createTime + TOKEN_EXPIRATION_MILLIS) {\r\n                                return [2 /*return*/, tokenDetails.fcmToken];\r\n                            }\r\n                            else {\r\n                                return [2 /*return*/, this.updateToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                            }\r\n                        }\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        return [4 /*yield*/, this.deleteTokenFromDB(tokenDetails.fcmToken)];\r\n                    case 1:\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.updateToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var updatedToken, allDetails, e_1;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 6]);\r\n                        return [4 /*yield*/, this.iidModel.updateToken(this.messagingSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        updatedToken = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.messagingSenderId,\r\n                            fcmToken: updatedToken,\r\n                            fcmPushSet: tokenDetails.fcmPushSet,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, updatedToken];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.getNewToken = function (swReg, pushSubscription, publicVapidKey) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var tokenDetails, allDetails;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.iidModel.getToken(this.messagingSenderId, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        tokenDetails = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.messagingSenderId,\r\n                            fcmToken: tokenDetails.token,\r\n                            fcmPushSet: tokenDetails.pushSet,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, tokenDetails.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes tokens that the token manager looks after,\r\n     * unsubscribes the token from FCM  and then unregisters the push\r\n     * subscription if it exists. It returns a promise that indicates\r\n     * whether or not the unsubscribe request was processed successfully.\r\n     */\r\n    BaseController.prototype.deleteToken = function (token) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var registration, pushSubscription;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    // Delete the token details from the database.\r\n                    return [4 /*yield*/, this.deleteTokenFromDB(token)];\r\n                    case 1:\r\n                        // Delete the token details from the database.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        registration = _a.sent();\r\n                        if (!registration) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        if (pushSubscription) {\r\n                            return [2 /*return*/, pushSubscription.unsubscribe()];\r\n                        }\r\n                        _a.label = 4;\r\n                    case 4: \r\n                    // If there's no SW, consider it a success.\r\n                    return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will delete the token from the client database, and make a\r\n     * call to FCM to remove it from the server DB. Does not temper with the\r\n     * push subscription.\r\n     */\r\n    BaseController.prototype.deleteTokenFromDB = function (token) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.tokenDetailsModel.deleteToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        return [4 /*yield*/, this.iidModel.deleteToken(details.fcmSenderId, details.fcmToken, details.fcmPushSet)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a PushSubscription for the current user.\r\n     */\r\n    BaseController.prototype.getPushSubscription = function (swRegistration, publicVapidKey) {\r\n        return swRegistration.pushManager.getSubscription().then(function (subscription) {\r\n            if (subscription) {\r\n                return subscription;\r\n            }\r\n            return swRegistration.pushManager.subscribe({\r\n                userVisibleOnly: true,\r\n                applicationServerKey: publicVapidKey\r\n            });\r\n        });\r\n    };\r\n    //\r\n    // The following methods should only be available in the window.\r\n    //\r\n    BaseController.prototype.requestPermission = function () {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    BaseController.prototype.useServiceWorker = function (registration) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    BaseController.prototype.usePublicVapidKey = function (b64PublicKey) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    BaseController.prototype.onMessage = function (nextOrObserver, error, completed) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    BaseController.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    //\r\n    // The following methods are used by the service worker only.\r\n    //\r\n    BaseController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_SW);\r\n    };\r\n    //\r\n    // The following methods are used by the service themselves and not exposed\r\n    // publicly or not expected to be used by developers.\r\n    //\r\n    /**\r\n     * This method is required to adhere to the Firebase interface.\r\n     * It closes any currently open indexdb database connections.\r\n     */\r\n    BaseController.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.tokenDetailsModel.closeDatabase(),\r\n                            this.vapidDetailsModel.closeDatabase()\r\n                        ])];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns the current Notification Permission state.\r\n     */\r\n    BaseController.prototype.getNotificationPermission_ = function () {\r\n        // TODO: Remove the cast when this issue is fixed:\r\n        // https://github.com/Microsoft/TypeScript/issues/14701\r\n        // tslint:disable-next-line no-any\r\n        return Notification.permission;\r\n    };\r\n    BaseController.prototype.getTokenDetailsModel = function () {\r\n        return this.tokenDetailsModel;\r\n    };\r\n    BaseController.prototype.getVapidDetailsModel = function () {\r\n        return this.vapidDetailsModel;\r\n    };\r\n    // Visible for testing\r\n    // TODO: make protected\r\n    BaseController.prototype.getIidModel = function () {\r\n        return this.iidModel;\r\n    };\r\n    return BaseController;\r\n}());\r\n/**\r\n * Checks if the tokenDetails match the details provided in the clients.\r\n */\r\nfunction isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails) {\r\n    if (!tokenDetails.vapidKey ||\r\n        !isArrayBufferEqual(publicVapidKey.buffer, tokenDetails.vapidKey.buffer)) {\r\n        return false;\r\n    }\r\n    var isEndpointEqual = pushSubscription.endpoint === tokenDetails.endpoint;\r\n    var isAuthEqual = isArrayBufferEqual(pushSubscription.getKey('auth'), tokenDetails.auth);\r\n    var isP256dhEqual = isArrayBufferEqual(pushSubscription.getKey('p256dh'), tokenDetails.p256dh);\r\n    return isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FCM_MSG = 'FCM_MSG';\r\nvar SwController = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SwController, _super);\r\n    function SwController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.bgMessageHandler = null;\r\n        self.addEventListener('push', function (e) {\r\n            _this.onPush(e);\r\n        });\r\n        self.addEventListener('pushsubscriptionchange', function (e) {\r\n            _this.onSubChange(e);\r\n        });\r\n        self.addEventListener('notificationclick', function (e) {\r\n            _this.onNotificationClick(e);\r\n        });\r\n        return _this;\r\n    }\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onPush = function (event) {\r\n        event.waitUntil(this.onPush_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onSubChange = function (event) {\r\n        event.waitUntil(this.onSubChange_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onNotificationClick = function (event) {\r\n        event.waitUntil(this.onNotificationClick_(event));\r\n    };\r\n    /**\r\n     * A handler for push events that shows notifications based on the content of\r\n     * the payload.\r\n     *\r\n     * The payload must be a JSON-encoded Object with a `notification` key. The\r\n     * value of the `notification` property will be used as the NotificationOptions\r\n     * object passed to showNotification. Additionally, the `title` property of the\r\n     * notification object will be used as the title.\r\n     *\r\n     * If there is no notification data in the payload then no notification will be\r\n     * shown.\r\n     */\r\n    SwController.prototype.onPush_ = function (event) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, hasVisibleClients, notificationDetails, notificationTitle, reg, actions, maxActions;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.data) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        try {\r\n                            msgPayload = event.data.json();\r\n                        }\r\n                        catch (err) {\r\n                            // Not JSON so not an FCM message\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.hasVisibleClients_()];\r\n                    case 1:\r\n                        hasVisibleClients = _a.sent();\r\n                        if (hasVisibleClients) {\r\n                            // App in foreground. Send to page.\r\n                            return [2 /*return*/, this.sendMessageToWindowClients_(msgPayload)];\r\n                        }\r\n                        notificationDetails = this.getNotificationData_(msgPayload);\r\n                        if (!notificationDetails) return [3 /*break*/, 3];\r\n                        notificationTitle = notificationDetails.title || '';\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        reg = _a.sent();\r\n                        actions = notificationDetails.actions;\r\n                        maxActions = Notification.maxActions;\r\n                        // tslint:enable no-any\r\n                        if (actions && maxActions && actions.length > maxActions) {\r\n                            console.warn(\"This browser only supports \" + maxActions + \" actions.\" +\r\n                                \"The remaining actions will not be displayed.\");\r\n                        }\r\n                        return [2 /*return*/, reg.showNotification(notificationTitle, notificationDetails)];\r\n                    case 3:\r\n                        if (!this.bgMessageHandler) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.bgMessageHandler(msgPayload)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onSubChange_ = function (event) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var registration, err_1, err_2, tokenDetailsModel, tokenDetails;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        registration = _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.UNABLE_TO_RESUBSCRIBE, {\r\n                            message: err_1\r\n                        });\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 8]);\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 5:\r\n                        err_2 = _a.sent();\r\n                        tokenDetailsModel = this.getTokenDetailsModel();\r\n                        return [4 /*yield*/, tokenDetailsModel.getTokenDetailsFromSWScope(registration.scope)];\r\n                    case 6:\r\n                        tokenDetails = _a.sent();\r\n                        if (!tokenDetails) {\r\n                            // This should rarely occure, but could if indexedDB\r\n                            // is corrupted or wiped\r\n                            throw err_2;\r\n                        }\r\n                        // Attempt to delete the token if we know it's bad\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 7:\r\n                        // Attempt to delete the token if we know it's bad\r\n                        _a.sent();\r\n                        throw err_2;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onNotificationClick_ = function (event) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, link, windowClient, internalMsg;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.notification ||\r\n                            !event.notification.data ||\r\n                            !event.notification.data[FCM_MSG]) {\r\n                            // Not an FCM notification, do nothing.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (event.action) {\r\n                            // User clicked on an action button.\r\n                            // This will allow devs to act on action button clicks by using a custom\r\n                            // onNotificationClick listener that they define.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Prevent other listeners from receiving the event\r\n                        event.stopImmediatePropagation();\r\n                        event.notification.close();\r\n                        msgPayload = event.notification.data[FCM_MSG];\r\n                        if (!msgPayload.notification) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        link = (msgPayload.fcmOptions && msgPayload.fcmOptions.link) ||\r\n                            msgPayload.notification.click_action;\r\n                        if (!link) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.getWindowClient_(link)];\r\n                    case 1:\r\n                        windowClient = _a.sent();\r\n                        if (!!windowClient) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, self.clients.openWindow(link)];\r\n                    case 2:\r\n                        // Unable to find window client so need to open one.\r\n                        windowClient = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, windowClient.focus()];\r\n                    case 4:\r\n                        windowClient = _a.sent();\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        if (!windowClient) {\r\n                            // Window Client will not be returned if it's for a third party origin.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Delete notification and fcmOptions data from payload before sending to\r\n                        // the page.\r\n                        delete msgPayload.notification;\r\n                        delete msgPayload.fcmOptions;\r\n                        internalMsg = createNewMsg(MessageType.NOTIFICATION_CLICKED, msgPayload);\r\n                        // Attempt to send a message to the client to handle the data\r\n                        // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\r\n                        return [2 /*return*/, this.attemptToMessageClient_(windowClient, internalMsg)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.getNotificationData_ = function (msgPayload) {\r\n        var _a;\r\n        if (!msgPayload) {\r\n            return;\r\n        }\r\n        if (typeof msgPayload.notification !== 'object') {\r\n            return;\r\n        }\r\n        var notificationInformation = tslib_1.__assign({}, msgPayload.notification);\r\n        // Put the message payload under FCM_MSG name so we can identify the\r\n        // notification as being an FCM notification vs a notification from\r\n        // somewhere else (i.e. normal web push or developer generated\r\n        // notification).\r\n        notificationInformation.data = tslib_1.__assign({}, msgPayload.notification.data, (_a = {}, _a[FCM_MSG] = msgPayload, _a));\r\n        return notificationInformation;\r\n    };\r\n    /**\r\n     * Calling setBackgroundMessageHandler will opt in to some specific\r\n     * behaviours.\r\n     * 1.) If a notification doesn't need to be shown due to a window already\r\n     * being visible, then push messages will be sent to the page.\r\n     * 2.) If a notification needs to be shown, and the message contains no\r\n     * notification data this method will be called\r\n     * and the promise it returns will be passed to event.waitUntil.\r\n     * If you do not set this callback then all push messages will let and the\r\n     * developer can handle them in a their own 'push' event callback\r\n     *\r\n     * @param callback The callback to be called when a push message is received\r\n     * and a notification must be shown. The callback will be given the data from\r\n     * the push message.\r\n     */\r\n    SwController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        if (!callback || typeof callback !== 'function') {\r\n            throw errorFactory.create(ERROR_CODES.BG_HANDLER_FUNCTION_EXPECTED);\r\n        }\r\n        this.bgMessageHandler = callback;\r\n    };\r\n    /**\r\n     * @param url The URL to look for when focusing a client.\r\n     * @return Returns an existing window client or a newly opened WindowClient.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.getWindowClient_ = function (url) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var parsedURL, clientList, suitableClient, i, parsedClientUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        parsedURL = new URL(url, self.location.href).href;\r\n                        return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        suitableClient = null;\r\n                        for (i = 0; i < clientList.length; i++) {\r\n                            parsedClientUrl = new URL(clientList[i].url, self.location.href)\r\n                                .href;\r\n                            if (parsedClientUrl === parsedURL) {\r\n                                suitableClient = clientList[i];\r\n                                break;\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, suitableClient];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This message will attempt to send the message to a window client.\r\n     * @param client The WindowClient to send the message to.\r\n     * @param message The message to send to the client.\r\n     * @returns Returns a promise that resolves after sending the message. This\r\n     * does not guarantee that the message was successfully received.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.attemptToMessageClient_ = function (client, message) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                // NOTE: This returns a promise in case this API is abstracted later on to\r\n                // do additional work\r\n                if (!client) {\r\n                    throw errorFactory.create(ERROR_CODES.NO_WINDOW_CLIENT_TO_MSG);\r\n                }\r\n                client.postMessage(message);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @returns If there is currently a visible WindowClient, this method will\r\n     * resolve to true, otherwise false.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.hasVisibleClients_ = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var clientList;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        return [2 /*return*/, clientList.some(function (client) {\r\n                                return client.visibilityState === 'visible' &&\r\n                                    // Ignore chrome-extension clients as that matches the background pages\r\n                                    // of extensions, which are always considered visible.\r\n                                    !client.url.startsWith('chrome-extension://');\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param msgPayload The data from the push event that should be sent to all\r\n     * available pages.\r\n     * @returns Returns a promise that resolves once the message has been sent to\r\n     * all WindowClients.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.sendMessageToWindowClients_ = function (msgPayload) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var clientList, internalMsg;\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        internalMsg = createNewMsg(MessageType.PUSH_MSG_RECEIVED, msgPayload);\r\n                        return [4 /*yield*/, Promise.all(clientList.map(function (client) {\r\n                                return _this.attemptToMessageClient_(client, internalMsg);\r\n                            }))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration.\r\n     * @return he service worker registration to be used for the push service.\r\n     */\r\n    SwController.prototype.getSWRegistration_ = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2 /*return*/, self.registration];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the\r\n     * public VAPID key provided by the developer.\r\n     */\r\n    SwController.prototype.getPublicVapidKey_ = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var swReg, vapidKeyFromDatabase;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        if (!swReg) {\r\n                            throw errorFactory.create(ERROR_CODES.SW_REGISTRATION_EXPECTED);\r\n                        }\r\n                        return [4 /*yield*/, this.getVapidDetailsModel().getVapidFromSWScope(swReg.scope)];\r\n                    case 2:\r\n                        vapidKeyFromDatabase = _a.sent();\r\n                        if (vapidKeyFromDatabase == null) {\r\n                            return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n                        }\r\n                        return [2 /*return*/, vapidKeyFromDatabase];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SwController;\r\n}(BaseController));\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction createNewMsg(msgType, msgData) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[MessageParameter.TYPE_OF_MSG] = msgType,\r\n        _a[MessageParameter.DATA] = msgData,\r\n        _a;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WindowController = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WindowController, _super);\r\n    /**\r\n     * A service that provides a MessagingService instance.\r\n     */\r\n    function WindowController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.registrationToUse = null;\r\n        _this.publicVapidKeyToUse = null;\r\n        _this.manifestCheckPromise = null;\r\n        _this.messageObserver = null;\r\n        // @ts-ignore: Unused variable error, this is not implemented yet.\r\n        _this.tokenRefreshObserver = null;\r\n        _this.onMessageInternal = util.createSubscribe(function (observer) {\r\n            _this.messageObserver = observer;\r\n        });\r\n        _this.onTokenRefreshInternal = util.createSubscribe(function (observer) {\r\n            _this.tokenRefreshObserver = observer;\r\n        });\r\n        _this.setupSWMessageListener_();\r\n        return _this;\r\n    }\r\n    /**\r\n     * This method returns an FCM token if it can be generated.\r\n     * The return promise will reject if the browser doesn't support\r\n     * FCM, if permission is denied for notifications or it's not\r\n     * possible to generate a token.\r\n     *\r\n     * @return Returns a promise that resolves to an FCM token or null if\r\n     * permission isn't granted.\r\n     */\r\n    WindowController.prototype.getToken = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.manifestCheckPromise) {\r\n                            this.manifestCheckPromise = manifestCheck();\r\n                        }\r\n                        return [4 /*yield*/, this.manifestCheckPromise];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, _super.prototype.getToken.call(this)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Request permission if it is not currently granted\r\n     *\r\n     * @return Resolves if the permission was granted, otherwise rejects\r\n     */\r\n    WindowController.prototype.requestPermission = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var permissionResult;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.getNotificationPermission_() === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, Notification.requestPermission()];\r\n                    case 1:\r\n                        permissionResult = _a.sent();\r\n                        if (permissionResult === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (permissionResult === 'denied') {\r\n                            throw errorFactory.create(ERROR_CODES.PERMISSION_BLOCKED);\r\n                        }\r\n                        else {\r\n                            throw errorFactory.create(ERROR_CODES.PERMISSION_DEFAULT);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default service worker and\r\n     * instead use a custom service worker.\r\n     *\r\n     * @param registration The service worker registration that should be used to\r\n     * receive the push messages.\r\n     */\r\n    WindowController.prototype.useServiceWorker = function (registration) {\r\n        if (!(registration instanceof ServiceWorkerRegistration)) {\r\n            throw errorFactory.create(ERROR_CODES.SW_REGISTRATION_EXPECTED);\r\n        }\r\n        if (this.registrationToUse != null) {\r\n            throw errorFactory.create(ERROR_CODES.USE_SW_BEFORE_GET_TOKEN);\r\n        }\r\n        this.registrationToUse = registration;\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default vapid key\r\n     * and instead use a custom VAPID public key.\r\n     *\r\n     * @param publicKey A URL safe base64 encoded string.\r\n     */\r\n    WindowController.prototype.usePublicVapidKey = function (publicKey) {\r\n        if (typeof publicKey !== 'string') {\r\n            throw errorFactory.create(ERROR_CODES.INVALID_PUBLIC_VAPID_KEY);\r\n        }\r\n        if (this.publicVapidKeyToUse != null) {\r\n            throw errorFactory.create(ERROR_CODES.USE_PUBLIC_KEY_BEFORE_GET_TOKEN);\r\n        }\r\n        var parsedKey = base64ToArrayBuffer(publicKey);\r\n        if (parsedKey.length !== 65) {\r\n            throw errorFactory.create(ERROR_CODES.PUBLIC_KEY_DECRYPTION_FAILED);\r\n        }\r\n        this.publicVapidKeyToUse = parsedKey;\r\n    };\r\n    /**\r\n     * @export\r\n     * @param nextOrObserver An observer object or a function triggered on\r\n     * message.\r\n     * @param error A function triggered on message error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onMessage = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onMessageInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onMessageInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * @param nextOrObserver An observer object or a function triggered on token\r\n     * refresh.\r\n     * @param error A function triggered on token refresh error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onTokenRefreshInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onTokenRefreshInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * Given a registration, wait for the service worker it relates to\r\n     * become activer\r\n     * @param registration Registration to wait for service worker to become active\r\n     * @return Wait for service worker registration to become active\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {\r\n        var serviceWorker = registration.installing || registration.waiting || registration.active;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!serviceWorker) {\r\n                // This is a rare scenario but has occured in firefox\r\n                reject(errorFactory.create(ERROR_CODES.NO_SW_IN_REG));\r\n                return;\r\n            }\r\n            // Because the Promise function is called on next tick there is a\r\n            // small chance that the worker became active or redundant already.\r\n            if (serviceWorker.state === 'activated') {\r\n                resolve(registration);\r\n                return;\r\n            }\r\n            if (serviceWorker.state === 'redundant') {\r\n                reject(errorFactory.create(ERROR_CODES.SW_REG_REDUNDANT));\r\n                return;\r\n            }\r\n            var stateChangeListener = function () {\r\n                if (serviceWorker.state === 'activated') {\r\n                    resolve(registration);\r\n                }\r\n                else if (serviceWorker.state === 'redundant') {\r\n                    reject(errorFactory.create(ERROR_CODES.SW_REG_REDUNDANT));\r\n                }\r\n                else {\r\n                    // Return early and wait to next state change\r\n                    return;\r\n                }\r\n                serviceWorker.removeEventListener('statechange', stateChangeListener);\r\n            };\r\n            serviceWorker.addEventListener('statechange', stateChangeListener);\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration\r\n     * @return The service worker registration to be used for the push service.\r\n     */\r\n    WindowController.prototype.getSWRegistration_ = function () {\r\n        var _this = this;\r\n        if (this.registrationToUse) {\r\n            return this.waitForRegistrationToActivate_(this.registrationToUse);\r\n        }\r\n        // Make the registration null so we know useServiceWorker will not\r\n        // use a new service worker as registrationToUse is no longer undefined\r\n        this.registrationToUse = null;\r\n        return navigator.serviceWorker\r\n            .register(DEFAULT_SW_PATH, {\r\n            scope: DEFAULT_SW_SCOPE\r\n        })\r\n            .catch(function (err) {\r\n            throw errorFactory.create(ERROR_CODES.FAILED_DEFAULT_REGISTRATION, {\r\n                browserErrorMessage: err.message\r\n            });\r\n        })\r\n            .then(function (registration) {\r\n            return _this.waitForRegistrationToActivate_(registration).then(function () {\r\n                _this.registrationToUse = registration;\r\n                // We update after activation due to an issue with Firefox v49 where\r\n                // a race condition occassionally causes the service work to not\r\n                // install\r\n                registration.update();\r\n                return registration;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the public VAPID key\r\n     * provided by the developer.\r\n     */\r\n    WindowController.prototype.getPublicVapidKey_ = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (this.publicVapidKeyToUse) {\r\n                    return [2 /*return*/, this.publicVapidKeyToUse];\r\n                }\r\n                return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will set up a message listener to handle\r\n     * events from the service worker that should trigger\r\n     * events in the page.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.setupSWMessageListener_ = function () {\r\n        var _this = this;\r\n        navigator.serviceWorker.addEventListener('message', function (event) {\r\n            if (!event.data || !event.data[MessageParameter.TYPE_OF_MSG]) {\r\n                // Not a message from FCM\r\n                return;\r\n            }\r\n            var workerPageMessage = event.data;\r\n            switch (workerPageMessage[MessageParameter.TYPE_OF_MSG]) {\r\n                case MessageType.PUSH_MSG_RECEIVED:\r\n                case MessageType.NOTIFICATION_CLICKED:\r\n                    var pushMessage = workerPageMessage[MessageParameter.DATA];\r\n                    if (_this.messageObserver) {\r\n                        _this.messageObserver.next(pushMessage);\r\n                    }\r\n                    break;\r\n                default:\r\n                    // Noop.\r\n                    break;\r\n            }\r\n        }, false);\r\n    };\r\n    return WindowController;\r\n}(BaseController));\r\n/**\r\n * The method checks that a manifest is defined and has the correct GCM\r\n * sender ID.\r\n * @return Returns a promise that resolves if the manifest matches\r\n * our required sender ID\r\n */\r\n// Exported for testing\r\nfunction manifestCheck() {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var manifestTag, manifestContent, response, e_1;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    manifestTag = document.querySelector('link[rel=\"manifest\"]');\r\n                    if (!manifestTag) {\r\n                        return [2 /*return*/];\r\n                    }\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 4, , 5]);\r\n                    return [4 /*yield*/, fetch(manifestTag.href)];\r\n                case 2:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 3:\r\n                    manifestContent = _a.sent();\r\n                    return [3 /*break*/, 5];\r\n                case 4:\r\n                    e_1 = _a.sent();\r\n                    // If the download or parsing fails allow check.\r\n                    // We only want to error if we KNOW that the gcm_sender_id is incorrect.\r\n                    return [2 /*return*/];\r\n                case 5:\r\n                    if (!manifestContent || !manifestContent.gcm_sender_id) {\r\n                        return [2 /*return*/];\r\n                    }\r\n                    if (manifestContent.gcm_sender_id !== '103953800507') {\r\n                        throw errorFactory.create(ERROR_CODES.INCORRECT_GCM_SENDER_ID);\r\n                    }\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerMessaging(instance) {\r\n    var messagingName = 'messaging';\r\n    var factoryMethod = function (app) {\r\n        if (!isSupported()) {\r\n            throw errorFactory.create(ERROR_CODES.UNSUPPORTED_BROWSER);\r\n        }\r\n        if (self && 'ServiceWorkerGlobalScope' in self) {\r\n            // Running in ServiceWorker context\r\n            return new SwController(app);\r\n        }\r\n        else {\r\n            // Assume we are in the window context.\r\n            return new WindowController(app);\r\n        }\r\n    };\r\n    var namespaceExports = {\r\n        isSupported: isSupported\r\n    };\r\n    instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);\r\n}\r\nregisterMessaging(firebase);\r\nfunction isSupported() {\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return isSWControllerSupported();\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return isWindowControllerSupported();\r\n    }\r\n}\r\n/**\r\n * Checks to see if the required APIs exist.\r\n */\r\nfunction isWindowControllerSupported() {\r\n    return (navigator.cookieEnabled &&\r\n        'serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window &&\r\n        'fetch' in window &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\r\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\r\nfunction isSWControllerSupported() {\r\n    return ('PushManager' in self &&\r\n        'Notification' in self &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\n\nexports.registerMessaging = registerMessaging;\nexports.isSupported = isSupported;\n//# sourceMappingURL=index.cjs.js.map\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","isArrayBufferEqual","a","b","byteLength","viewA","DataView","viewB","i","getUint8","arrayBufferToBase64","arrayBuffer","uint8Version","Uint8Array","btoa","base64String","String","fromCharCode","apply","tslib_1","__spread","replace","base64ToArrayBuffer","padding","repeat","length","base64","rawData","atob","outputArray","charCodeAt","handleDb","db","objectStoreNames","contains","OLD_OBJECT_STORE_NAME","objectStore","transaction","iidModel","IidModel","openCursorRequest","openCursor","onerror","openCursorRequest.onerror","event","console","warn","onsuccess","openCursorRequest.onsuccess","cursor","result","tokenDetails","value","deleteToken","fcmSenderId","fcmToken","fcmPushSet","continue","close","indexedDB","deleteDatabase","OLD_DB_NAME","cleanV1","request","open","request.onerror","request.onsuccess","promisify","Promise","resolve","reject","error","validateInputs","input","errorFactory","create","ERROR_CODES","BAD_TOKEN","swScope","BAD_SCOPE","vapidKey","BAD_VAPID_KEY","endpoint","BAD_SUBSCRIPTION","auth","ArrayBuffer","p256dh","BAD_SENDER_ID","BAD_PUSH_SET","getClientList","self","clients","matchAll","type","includeUncontrolled","createNewMsg","msgType","msgData","_a","MessageParameter","TYPE_OF_MSG","DATA","manifestCheck","__awaiter","manifestTag","manifestContent","response","__generator","label","document","querySelector","trys","push","fetch","href","sent","json","gcm_sender_id","INCORRECT_GCM_SENDER_ID","registerMessaging","instance","INTERNAL","registerService","messagingName","factoryMethod","app","isSupported","UNSUPPORTED_BROWSER","SwController","WindowController","namespaceExports","ServiceWorkerRegistration","prototype","hasOwnProperty","PushSubscription","navigator","cookieEnabled","window","Object","defineProperty","firebase","_interopDefault","ex","util","AVAILABLE_IN_WINDOW","AVAILABLE_IN_SW","SHOULD_BE_INHERITED","PERMISSION_DEFAULT","PERMISSION_BLOCKED","NOTIFICATIONS_BLOCKED","FAILED_DEFAULT_REGISTRATION","SW_REGISTRATION_EXPECTED","GET_SUBSCRIPTION_FAILED","INVALID_SAVED_TOKEN","SW_REG_REDUNDANT","TOKEN_SUBSCRIBE_FAILED","TOKEN_SUBSCRIBE_NO_TOKEN","TOKEN_SUBSCRIBE_NO_PUSH_SET","TOKEN_UNSUBSCRIBE_FAILED","TOKEN_UPDATE_FAILED","TOKEN_UPDATE_NO_TOKEN","USE_SW_BEFORE_GET_TOKEN","INVALID_DELETE_TOKEN","DELETE_TOKEN_NOT_FOUND","DELETE_SCOPE_NOT_FOUND","BG_HANDLER_FUNCTION_EXPECTED","NO_WINDOW_CLIENT_TO_MSG","UNABLE_TO_RESUBSCRIBE","NO_FCM_TOKEN_FOR_RESUBSCRIBE","FAILED_TO_DELETE_TOKEN","NO_SW_IN_REG","FAILED_DELETE_VAPID_KEY","INVALID_PUBLIC_VAPID_KEY","USE_PUBLIC_KEY_BEFORE_GET_TOKEN","PUBLIC_KEY_DECRYPTION_FAILED","ERROR_MAP","ErrorFactory","DEFAULT_PUBLIC_VAPID_KEY","MessageType","getToken","IidModel.prototype.getToken","senderId","subscription","publicVapidKey","fcmSubscribeBody","applicationPubKey","headers","subscribeOptions","responseData","message","getKey","buffer","Headers","append","method","body","token","pushSet","updateToken","IidModel.prototype.updateToken","fcmUpdateBody","updateOptions","IidModel.prototype.deleteToken","fcmUnsubscribeBody","unsubscribeOptions","DbInterface","dbPromise","get","DbInterface.prototype.get","key","createTransaction","getIndex","DbInterface.prototype.getIndex","index","runRequest","idbIndex","put","DbInterface.prototype.put","delete","DbInterface.prototype.delete","closeDatabase","DbInterface.prototype.closeDatabase","DbInterface.prototype.createTransaction","mode","getDb","objectStoreName","oncomplete","transaction.oncomplete","transaction.onerror","DbInterface.prototype.getDb","_this","dbName","dbVersion","onupgradeneeded","request.onupgradeneeded","onDbUpgrade","TokenDetailsModel","_super","arguments","__extends","TokenDetailsModel.prototype.onDbUpgrade","oldVersion","createObjectStore","keyPath","createIndex","unique","cursorRequest_1","cursorRequest_1.onsuccess","newValue","__assign","createTime","Date","now","update","getTokenDetailsFromToken","TokenDetailsModel.prototype.getTokenDetailsFromToken","getTokenDetailsFromSWScope","TokenDetailsModel.prototype.getTokenDetailsFromSWScope","saveTokenDetails","TokenDetailsModel.prototype.saveTokenDetails","TokenDetailsModel.prototype.deleteToken","details","VapidDetailsModel","VapidDetailsModel.prototype.onDbUpgrade","getVapidFromSWScope","VapidDetailsModel.prototype.getVapidFromSWScope","undefined","saveVapidDetails","VapidDetailsModel.prototype.saveVapidDetails","UNCOMPRESSED_PUBLIC_KEY_SIZE","deleteVapidDetails","VapidDetailsModel.prototype.deleteVapidDetails","BaseController","options","messagingSenderId","tokenDetailsModel","vapidDetailsModel","BaseController.prototype.getToken","currentPermission","swReg","pushSubscription","getNotificationPermission_","getSWRegistration_","getPublicVapidKey_","getPushSubscription","scope","manageExistingToken","getNewToken","BaseController.prototype.manageExistingToken","isTokenValid","isEndpointEqual","isAuthEqual","isP256dhEqual","TOKEN_EXPIRATION_MILLIS","deleteTokenFromDB","BaseController.prototype.updateToken","updatedToken","allDetails","e_1","BaseController.prototype.getNewToken","BaseController.prototype.deleteToken","registration","pushManager","getSubscription","unsubscribe","BaseController.prototype.deleteTokenFromDB","BaseController.prototype.getPushSubscription","swRegistration","then","subscribe","userVisibleOnly","applicationServerKey","requestPermission","BaseController.prototype.requestPermission","useServiceWorker","BaseController.prototype.useServiceWorker","usePublicVapidKey","BaseController.prototype.usePublicVapidKey","b64PublicKey","onMessage","BaseController.prototype.onMessage","nextOrObserver","completed","onTokenRefresh","BaseController.prototype.onTokenRefresh","setBackgroundMessageHandler","BaseController.prototype.setBackgroundMessageHandler","callback","BaseController.prototype.delete","all","BaseController.prototype.getNotificationPermission_","Notification","permission","getTokenDetailsModel","BaseController.prototype.getTokenDetailsModel","getVapidDetailsModel","BaseController.prototype.getVapidDetailsModel","getIidModel","BaseController.prototype.getIidModel","call","bgMessageHandler","addEventListener","e","onPush","onSubChange","onNotificationClick","SwController.prototype.onPush","waitUntil","onPush_","SwController.prototype.onSubChange","onSubChange_","SwController.prototype.onNotificationClick","onNotificationClick_","SwController.prototype.onPush_","msgPayload","hasVisibleClients","notificationDetails","notificationTitle","reg","actions","maxActions","data","err","hasVisibleClients_","sendMessageToWindowClients_","getNotificationData_","title","showNotification","SwController.prototype.onSubChange_","err_1","err_2","SwController.prototype.onNotificationClick_","link","windowClient","internalMsg","notification","action","stopImmediatePropagation","fcmOptions","click_action","getWindowClient_","openWindow","focus","NOTIFICATION_CLICKED","attemptToMessageClient_","SwController.prototype.getNotificationData_","notificationInformation","SwController.prototype.setBackgroundMessageHandler","SwController.prototype.getWindowClient_","url","parsedURL","clientList","suitableClient","parsedClientUrl","URL","location","SwController.prototype.attemptToMessageClient_","client","postMessage","SwController.prototype.hasVisibleClients_","some","visibilityState","startsWith","SwController.prototype.sendMessageToWindowClients_","PUSH_MSG_RECEIVED","map","SwController.prototype.getSWRegistration_","SwController.prototype.getPublicVapidKey_","vapidKeyFromDatabase","registrationToUse","publicVapidKeyToUse","manifestCheckPromise","messageObserver","tokenRefreshObserver","onMessageInternal","createSubscribe","observer","onTokenRefreshInternal","setupSWMessageListener_","WindowController.prototype.getToken","WindowController.prototype.requestPermission","permissionResult","WindowController.prototype.useServiceWorker","WindowController.prototype.usePublicVapidKey","publicKey","parsedKey","WindowController.prototype.onMessage","WindowController.prototype.onTokenRefresh","waitForRegistrationToActivate_","WindowController.prototype.waitForRegistrationToActivate_","serviceWorker","installing","waiting","active","state","stateChangeListener","removeEventListener","WindowController.prototype.getSWRegistration_","register","DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","catch","browserErrorMessage","WindowController.prototype.getPublicVapidKey_","WindowController.prototype.setupSWMessageListener_","workerPageMessage","pushMessage","next"]
}
