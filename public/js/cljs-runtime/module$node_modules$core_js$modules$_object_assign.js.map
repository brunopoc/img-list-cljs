{
"version":3,
"file":"module$node_modules$core_js$modules$_object_assign.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGpI,IAAIC,QAAUJ,OAAA,CAAQ,kDAAR,CAAd,CACIK,KAAOL,OAAA,CAAQ,kDAAR,CADX,CAEIM,IAAMN,OAAA,CAAQ,iDAAR,CAFV,CAGIO,SAAWP,OAAA,CAAQ,gDAAR,CAHf,CAIIQ,QAAUR,OAAA,CAAQ,8CAAR,CAJd,CAKIS,QAAUC,MAAAC,OAGdV,OAAAC,QAAA,CAAiB,CAACO,OAAD;AAAYT,OAAA,CAAQ,4CAAR,CAAA,CAAoB,QAAS,EAAG,CAC3D,IAAIY,EAAI,EAAR,CACIC,EAAI,EADR,CAGIC,EAAIC,MAAA,EAERH,EAAA,CAAEE,CAAF,CAAA,CAAO,CACP,uBAAA,MAAA,CAAA,EAAA,CAAAE,QAAA,CAAoB,QAAS,CAACC,CAAD,CAAI,CAAEJ,CAAA,CAAEI,CAAF,CAAA,CAAOA,CAAT,CAAjC,CACA,OAA4B,EAA5B,EAAOR,OAAA,CAAQ,EAAR,CAAYG,CAAZ,CAAA,CAAeE,CAAf,CAAP,EAHQI,sBAGR,EAAiCR,MAAAS,KAAA,CAAYV,OAAA,CAAQ,EAAR,CAAYI,CAAZ,CAAZ,CAAAO,KAAA,CAAiC,EAAjC,CAR0B,CAAhC,CAAZ,CASZT,QAAe,CAACU,MAAD,CAASC,MAAT,CAAiB,CAMnC,IALA,IAAIC,EAAIhB,QAAA,CAASc,MAAT,CAAR,CACIG,KAAOC,SAAAC,OADX,CAEIC,MAAQ,CAFZ,CAGIC,WAAavB,IAAAwB,EAHjB,CAIIC,OAASxB,GAAAuB,EACb,CAAOL,IAAP,CAAcG,KAAd,CAAA,CAME,IALA,IAAIb,EAAIN,OAAA,CAAQiB,SAAA,CAAUE,KAAA,EAAV,CAAR,CAAR,CACIR,KAAOS,UAAA,CAAaxB,OAAA,CAAQU,CAAR,CAAAiB,OAAA,CAAkBH,UAAA,CAAWd,CAAX,CAAlB,CAAb,CAAgDV,OAAA,CAAQU,CAAR,CAD3D,CAEIY,OAASP,IAAAO,OAFb,CAGIM,EAAI,CAHR,CAIIC,GACJ,CAAOP,MAAP;AAAgBM,CAAhB,CAAA,CAAuBF,MAAAI,KAAA,CAAYpB,CAAZ,CAAemB,GAAf,CAAqBd,IAAA,CAAKa,CAAA,EAAL,CAArB,CAAJ,GAAqCT,CAAA,CAAEU,GAAF,CAArC,CAA8CnB,CAAA,CAAEmB,GAAF,CAA9C,CACnB,OAAOV,EAb0B,CATpB,CAuBbd,OAlCgI;",
"sources":["node_modules/core-js/modules/_object-assign.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js$modules$_object_assign\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","getKeys","gOPS","pIE","toObject","IObject","$assign","Object","assign","A","B","S","Symbol","forEach","k","K","keys","join","target","source","T","aLen","arguments","length","index","getSymbols","f","isEnum","concat","j","key","call"]
}
